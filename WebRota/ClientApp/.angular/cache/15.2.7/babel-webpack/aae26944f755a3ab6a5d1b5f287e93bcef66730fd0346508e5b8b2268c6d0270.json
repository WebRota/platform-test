{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeafletMapComponent {\n  constructor(http) {\n    this.http = http;\n    this.totalDistance = 0;\n    this.markers = []; // Usando o tipo Marker\n  }\n\n  ngOnInit() {\n    routePolyline: L.Polyline | undefined;\n    this.map = L.map('map').setView([-18.924067, -48.282142], 12);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n    this.http.get('./assets/positions.json').subscribe(data => {\n      const positionsData = data;\n      const positions = positionsData.data;\n      const polygon = L.polyline([], {\n        color: 'blue'\n      }).addTo(this.map);\n      let prevPosition = null;\n      positions.forEach(position => {\n        const lat = parseFloat(position.latitude);\n        const lon = parseFloat(position.longitude);\n        const marker = L.marker([lat, lon]).addTo(this.map);\n        this.markers.push(marker);\n        if (prevPosition) {\n          // Use getLatLng() para obter as coordenadas do marcador\n          const currentLatLng = marker.getLatLng();\n          const prevLatLng = prevPosition.getLatLng();\n          const distance = currentLatLng.distanceTo(prevLatLng);\n          this.totalDistance += distance;\n        }\n        polygon.addLatLng([lat, lon]);\n        prevPosition = marker;\n      });\n      this.map.fitBounds(L.featureGroup(this.markers).getBounds());\n    });\n  }\n  addMarker() {\n    // Solicite ao usuário que clique no mapa para adicionar um novo marcador\n    this.map.on('click', e => {\n      const marker = L.marker(e.latlng).addTo(this.map);\n      this.markers.push(marker);\n      // Recalcule a soma da distância\n      this.recalculateTotalDistance();\n    });\n  }\n  recalculateTotalDistance() {\n    // Recalcule a soma da distância com base nos marcadores existentes\n    this.totalDistance = 0;\n    for (let i = 1; i < this.markers.length; i++) {\n      const currentLatLng = this.markers[i].getLatLng(); // Correção aqui\n      const prevLatLng = this.markers[i - 1].getLatLng();\n      const distance = currentLatLng.distanceTo(prevLatLng);\n      this.totalDistance += distance;\n    }\n  }\n}\nLeafletMapComponent.ɵfac = function LeafletMapComponent_Factory(t) {\n  return new (t || LeafletMapComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nLeafletMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LeafletMapComponent,\n  selectors: [[\"app-leaflet-map\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[2, \"width\", \"100%\", \"display\", \"flex\", \"flex-direction\", \"column\", \"align-items\", \"center\", \"justify-content\", \"center\"], [2, \"color\", \"orange\", \"font-weight\", \"bold\"], [2, \"color\", \"orange\"], [3, \"click\"], [\"id\", \"map\", 2, \"height\", \"500px\"]],\n  template: function LeafletMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n      i0.ɵɵtext(2, \"Soma da dist\\u00E2ncia: \");\n      i0.ɵɵelementStart(3, \"span\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LeafletMapComponent_Template_button_click_5_listener() {\n        return ctx.addMarker();\n      });\n      i0.ɵɵtext(6, \"Adicionar Ponto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"\", ctx.totalDistance, \" metros\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["L","LeafletMapComponent","constructor","http","ngOnInit","routePolyline","Polyline","undefined","map","setView","tileLayer","attribution","addTo","get","subscribe","data","positionsData","positions","polygon","polyline","color","prevPosition","forEach","position","lat","parseFloat","latitude","lon","longitude","marker","markers","push","currentLatLng","getLatLng","prevLatLng","distance","distanceTo","totalDistance","addLatLng","fitBounds","featureGroup","getBounds","addMarker","on","e","latlng","recalculateTotalDistance","i","length","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\leaflet-map\\leaflet-map.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\leaflet-map\\leaflet-map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-leaflet-map',\n  templateUrl: './leaflet-map.component.html',\n  styleUrls: ['./leaflet-map.component.css']\n})\nexport class LeafletMapComponent implements OnInit {\n  totalDistance: number = 0;\n  map!: L.Map;\n  markers: L.Marker[] = []; // Usando o tipo Marker\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    routePolyline: L.Polyline | undefined;\n    this.map = L.map('map').setView([-18.924067, -48.282142], 12);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n\n    this.http.get('./assets/positions.json').subscribe((data: any) => {\n      const positionsData = data;\n      const positions = positionsData.data;\n      const polygon = L.polyline([], { color: 'blue' }).addTo(this.map);\n\n      let prevPosition: any = null;\n\n      positions.forEach((position: any) => {\n        const lat = parseFloat(position.latitude);\n        const lon = parseFloat(position.longitude);\n        const marker = L.marker([lat, lon]).addTo(this.map);\n        this.markers.push(marker);\n\n        if (prevPosition) {\n          // Use getLatLng() para obter as coordenadas do marcador\n          const currentLatLng = marker.getLatLng();\n          const prevLatLng = prevPosition.getLatLng();\n          const distance = currentLatLng.distanceTo(prevLatLng);\n          this.totalDistance += distance;\n        }\n\n        polygon.addLatLng([lat, lon]);\n        prevPosition = marker;\n      });\n\n      this.map.fitBounds(L.featureGroup(this.markers).getBounds());\n    });\n  }\n\n  addMarker() {\n    // Solicite ao usuário que clique no mapa para adicionar um novo marcador\n    this.map.on('click', (e: L.LeafletMouseEvent) => {\n      const marker = L.marker(e.latlng).addTo(this.map);\n      this.markers.push(marker);\n      // Recalcule a soma da distância\n      this.recalculateTotalDistance();\n    });\n  }\n\n  recalculateTotalDistance() {\n    // Recalcule a soma da distância com base nos marcadores existentes\n    this.totalDistance = 0;\n    for (let i = 1; i < this.markers.length; i++) {\n      const currentLatLng = this.markers[i].getLatLng(); // Correção aqui\n      const prevLatLng = this.markers[i - 1].getLatLng();\n      const distance = currentLatLng.distanceTo(prevLatLng);\n      this.totalDistance += distance;\n    }\n  }\n}\n\n\n\n\n\n\n","<div style=\"width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;\">\r\n  <p style=\"color: orange; font-weight: bold;\">Soma da distância: <span style=\"color: orange;\">{{ totalDistance }} metros</span></p>\r\n  <!-- leaflet-map.component.html -->\r\n  \r\n</div>\r\n<button (click)=\"addMarker()\">Adicionar Ponto</button>\r\n<div id=\"map\" style=\"height: 500px;\"></div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}