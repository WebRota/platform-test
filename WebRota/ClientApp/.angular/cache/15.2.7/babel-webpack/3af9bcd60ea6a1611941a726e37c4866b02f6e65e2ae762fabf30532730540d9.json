{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email').value;\n      const password = this.loginForm.get('password').value;\n      this.authService.login(email, password).subscribe(response => {\n        if (response.token) {\n          this.message = 'Login bem-sucedido';\n        } else {\n          this.message = 'Login falhou';\n        }\n      }, error => {\n        console.error('Erro na solicitação de login:', error);\n        this.message = 'Erro na solicitação de login';\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAC/D,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,KAAK;IACH,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,MAAMJ,KAAK,GAAG,IAAI,CAACF,SAAS,CAACO,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK;MAC/C,MAAMJ,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;MAErD,IAAI,CAACT,WAAW,CAACM,KAAK,CAACH,KAAK,EAAEE,QAAQ,CAAC,CAACK,SAAS,CAC9CC,QAAa,IAAI;QAChB,IAAIA,QAAQ,CAACC,KAAK,EAAE;UAClB,IAAI,CAACC,OAAO,GAAG,oBAAoB;SACpC,MAAM;UACL,IAAI,CAACA,OAAO,GAAG,cAAc;;MAEjC,CAAC,EACAC,KAAU,IAAI;QACbC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACD,OAAO,GAAG,8BAA8B;MAC/C,CAAC,CACF;;EAEL;CACD;AA/BYhB,cAAc,eAJ1BF,SAAS,CAAC;EACTqB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CACd,CAAC,GACWpB,cAAc,CA+B1B;SA/BYA,cAAc","names":["Component","Validators","LoginComponent","constructor","formBuilder","authService","loginForm","group","email","required","password","login","valid","get","value","subscribe","response","token","message","error","console","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from './auth.service'; // Importe o serviço AuthService aqui\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  message: string;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email').value;\n      const password = this.loginForm.get('password').value;\n\n      this.authService.login(email, password).subscribe(\n        (response: any) => {\n          if (response.token) {\n            this.message = 'Login bem-sucedido';\n          } else {\n            this.message = 'Login falhou';\n          }\n        },\n        (error: any) => {\n          console.error('Erro na solicitação de login:', error);\n          this.message = 'Erro na solicitação de login';\n        }\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}