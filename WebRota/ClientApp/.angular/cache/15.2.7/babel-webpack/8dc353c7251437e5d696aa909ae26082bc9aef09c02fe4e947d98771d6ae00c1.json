{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nexport class LeafletMapComponent {\n  constructor() {}\n  ngOnInit() {\n    // Crie um mapa Leaflet no elemento 'map'\n    const map = L.map('map').setView([-18.924067, -48.282142], 12);\n    // Adicione um mapa base (usando OpenStreetMap como exemplo)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    // Carregue as coordenadas do arquivo positions.json (você pode fazer uma solicitação HTTP aqui)\n    var positionsData = {\n      \"data\": [{\n        \"date_time\": \"2019-02-12T10:57:36+00:00\",\n        \"latitude\": \"-18.92406700\",\n        \"longitude\": \"-48.28214200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:57:06+00:00\",\n        \"latitude\": \"-18.92376500\",\n        \"longitude\": \"-48.28210800\"\n      }, {\n        \"date_time\": \"2019-02-12T10:56:36+00:00\",\n        \"latitude\": \"-18.92213500\",\n        \"longitude\": \"-48.28205200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:56:06+00:00\",\n        \"latitude\": \"-18.92082200\",\n        \"longitude\": \"-48.28132800\"\n      }, {\n        \"date_time\": \"2019-02-12T10:55:36+00:00\",\n        \"latitude\": \"-18.91951300\",\n        \"longitude\": \"-48.28033200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:55:06+00:00\",\n        \"latitude\": \"-18.91966300\",\n        \"longitude\": \"-48.27849800\"\n      }, {\n        \"date_time\": \"2019-02-12T10:54:36+00:00\",\n        \"latitude\": \"-18.92081800\",\n        \"longitude\": \"-48.27682200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:54:06+00:00\",\n        \"latitude\": \"-18.92195000\",\n        \"longitude\": \"-48.27513200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:53:36+00:00\",\n        \"latitude\": \"-18.92298100\",\n        \"longitude\": \"-48.27350800\"\n      }, {\n        \"date_time\": \"2019-02-12T10:53:06+00:00\",\n        \"latitude\": \"-18.92313700\",\n        \"longitude\": \"-48.27337200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:52:36+00:00\",\n        \"latitude\": \"-18.92372200\",\n        \"longitude\": \"-48.27213800\"\n      }, {\n        \"date_time\": \"2019-02-12T10:52:06+00:00\",\n        \"latitude\": \"-18.92295000\",\n        \"longitude\": \"-48.27078200\"\n      }, {\n        \"date_time\": \"2019-02-12T10:51:36+00:00\",\n        \"latitude\": \"-18.91990800\",\n        \"longitude\": \"-48.26785500\"\n      }, {\n        \"date_time\": \"2019-02-12T10:51:06+00:00\",\n        \"latitude\": \"-18.91765300\",\n        \"longitude\": \"-48.26528000\"\n      }, {\n        \"date_time\": \"2019-02-12T10:50:36+00:00\",\n        \"latitude\": \"-18.91815100\",\n        \"longitude\": \"-48.26453900\"\n      }, {\n        \"date_time\": \"2019-02-12T10:50:06+00:00\",\n        \"latitude\": \"-18.91814500\",\n        \"longitude\": \"-48.26453700\"\n      }]\n    };\n    const positions = positionsData.data;\n    // Crie um array para armazenar os marcadores e a linha do polígono\n    const markers = [];\n    const polygon = L.polyline([], {\n      color: 'blue'\n    }).addTo(map);\n    // Itere pelas coordenadas e crie marcadores e adicione à linha do polígono\n    positions.forEach(function (position) {\n      const lat = parseFloat(position.latitude);\n      const lon = parseFloat(position.longitude);\n      const marker = L.marker([lat, lon]).addTo(map);\n      markers.push(marker);\n      polygon.addLatLng([lat, lon]);\n    });\n    // Ajuste o zoom do mapa para que todos os marcadores sejam visíveis\n    map.fitBounds(L.featureGroup(markers).getBounds());\n    // Adicione a linha do polígono ao mapa\n    map.addLayer(polygon);\n  }\n}\nLeafletMapComponent.ɵfac = function LeafletMapComponent_Factory(t) {\n  return new (t || LeafletMapComponent)();\n};\nLeafletMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LeafletMapComponent,\n  selectors: [[\"app-leaflet-map\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[2, \"width\", \"800px\"], [\"id\", \"map\", 2, \"height\", \"500px\"]],\n  template: function LeafletMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0)(1, \"div\", 1);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,OAAO,KAAKA,CAAC,MAAM,SAAS;;AAO5B,OAAM,MAAOC,mBAAmB;EAC9BC,eAAgB;EAEhBC,QAAQ;IACN;IACA,MAAMC,GAAG,GAAGJ,CAAC,CAACI,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;IAE9D;IACAL,CAAC,CAACM,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;KACd,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;IAEb;IAEA,IAAIK,aAAa,GAAG;MAClB,MAAM,EAAE,CACN;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd,EACD;QACE,WAAW,EAAE,2BAA2B;QACxC,UAAU,EAAE,cAAc;QAC1B,WAAW,EAAE;OACd;KAEJ;IAED,MAAMC,SAAS,GAAGD,aAAa,CAACE,IAAI;IAEpC;IACA,MAAMC,OAAO,GAA0B,EAAE;IACzC,MAAMC,OAAO,GAAGb,CAAC,CAACc,QAAQ,CAAC,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE,CAAC,CAACP,KAAK,CAACJ,GAAG,CAAC;IAE5D;IACAM,SAAS,CAACM,OAAO,CAAC,UAAUC,QAAQ;MAClC,MAAMC,GAAG,GAAGC,UAAU,CAACF,QAAQ,CAACG,QAAQ,CAAC;MACzC,MAAMC,GAAG,GAAGF,UAAU,CAACF,QAAQ,CAACK,SAAS,CAAC;MAC1C,MAAMC,MAAM,GAAGvB,CAAC,CAACuB,MAAM,CAAC,CAACL,GAAG,EAAEG,GAAG,CAAC,CAAC,CAACb,KAAK,CAACJ,GAAG,CAAC;MAC9CQ,OAAO,CAACY,IAAI,CAACD,MAAM,CAAC;MACpBV,OAAO,CAACY,SAAS,CAAC,CAACP,GAAG,EAAEG,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF;IACAjB,GAAG,CAACsB,SAAS,CAAC1B,CAAC,CAAC2B,YAAY,CAACf,OAAO,CAAC,CAACgB,SAAS,EAAE,CAAC;IAElD;IACAxB,GAAG,CAACyB,QAAQ,CAAChB,OAAO,CAAC;EACvB;;AAvHWZ,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCC,yBAAiC","names":["L","LeafletMapComponent","constructor","ngOnInit","map","setView","tileLayer","attribution","addTo","positionsData","positions","data","markers","polygon","polyline","color","forEach","position","lat","parseFloat","latitude","lon","longitude","marker","push","addLatLng","fitBounds","featureGroup","getBounds","addLayer","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\leaflet-map\\leaflet-map.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\leaflet-map\\leaflet-map.component.html"],"sourcesContent":["// mapa.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-leaflet-map',\n  templateUrl: './leaflet-map.component.html',\n  styleUrls: ['./leaflet-map.component.css']\n})\nexport class LeafletMapComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n    // Crie um mapa Leaflet no elemento 'map'\n    const map = L.map('map').setView([-18.924067, -48.282142], 12);\n\n    // Adicione um mapa base (usando OpenStreetMap como exemplo)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Carregue as coordenadas do arquivo positions.json (você pode fazer uma solicitação HTTP aqui)\n\n    var positionsData = {\n      \"data\": [\n        {\n          \"date_time\": \"2019-02-12T10:57:36+00:00\",\n          \"latitude\": \"-18.92406700\",\n          \"longitude\": \"-48.28214200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:57:06+00:00\",\n          \"latitude\": \"-18.92376500\",\n          \"longitude\": \"-48.28210800\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:56:36+00:00\",\n          \"latitude\": \"-18.92213500\",\n          \"longitude\": \"-48.28205200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:56:06+00:00\",\n          \"latitude\": \"-18.92082200\",\n          \"longitude\": \"-48.28132800\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:55:36+00:00\",\n          \"latitude\": \"-18.91951300\",\n          \"longitude\": \"-48.28033200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:55:06+00:00\",\n          \"latitude\": \"-18.91966300\",\n          \"longitude\": \"-48.27849800\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:54:36+00:00\",\n          \"latitude\": \"-18.92081800\",\n          \"longitude\": \"-48.27682200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:54:06+00:00\",\n          \"latitude\": \"-18.92195000\",\n          \"longitude\": \"-48.27513200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:53:36+00:00\",\n          \"latitude\": \"-18.92298100\",\n          \"longitude\": \"-48.27350800\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:53:06+00:00\",\n          \"latitude\": \"-18.92313700\",\n          \"longitude\": \"-48.27337200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:52:36+00:00\",\n          \"latitude\": \"-18.92372200\",\n          \"longitude\": \"-48.27213800\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:52:06+00:00\",\n          \"latitude\": \"-18.92295000\",\n          \"longitude\": \"-48.27078200\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:51:36+00:00\",\n          \"latitude\": \"-18.91990800\",\n          \"longitude\": \"-48.26785500\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:51:06+00:00\",\n          \"latitude\": \"-18.91765300\",\n          \"longitude\": \"-48.26528000\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:50:36+00:00\",\n          \"latitude\": \"-18.91815100\",\n          \"longitude\": \"-48.26453900\"\n        },\n        {\n          \"date_time\": \"2019-02-12T10:50:06+00:00\",\n          \"latitude\": \"-18.91814500\",\n          \"longitude\": \"-48.26453700\"\n        }\n      ]\n    };\n\n    const positions = positionsData.data;\n\n    // Crie um array para armazenar os marcadores e a linha do polígono\n    const markers: L.Layer[] | undefined = [];\n    const polygon = L.polyline([], { color: 'blue' }).addTo(map);\n\n    // Itere pelas coordenadas e crie marcadores e adicione à linha do polígono\n    positions.forEach(function (position) {\n      const lat = parseFloat(position.latitude);\n      const lon = parseFloat(position.longitude);\n      const marker = L.marker([lat, lon]).addTo(map);\n      markers.push(marker);\n      polygon.addLatLng([lat, lon]);\n    });\n\n    // Ajuste o zoom do mapa para que todos os marcadores sejam visíveis\n    map.fitBounds(L.featureGroup(markers).getBounds());\n\n    // Adicione a linha do polígono ao mapa\n    map.addLayer(polygon);\n  }\n}\n","<div style=\"width: 800px;\"></div>\n<!-- leaflet-map.component.html -->\n<div id=\"map\" style=\"height: 500px;\"></div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}