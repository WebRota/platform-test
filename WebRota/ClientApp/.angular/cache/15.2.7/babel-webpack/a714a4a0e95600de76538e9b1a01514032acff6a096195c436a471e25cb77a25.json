{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet UserRegistrationComponent = class UserRegistrationComponent {\n  constructor(http, baseUrl, snackBar // Injete o MatSnackBar\n  ) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.snackBar = snackBar;\n    this.newUser = new User();\n  }\n  onSubmit() {\n    this.http.post(this.baseUrl + 'api/users', this.newUser).subscribe(response => {\n      console.log('Usuário cadastrado com sucesso', response);\n      this.openSnackBar('Usuário cadastrado com sucesso', 'Fechar'); // Exibe uma mensagem de sucesso\n    }, error => {\n      console.error('Erro ao cadastrar usuário', error);\n      this.openSnackBar('Erro ao cadastrar usuário', 'Fechar'); // Exibe uma mensagem de erro\n    });\n  }\n  // Método para abrir a barra de notificação\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, {\n      duration: 3000 // Duração da notificação em milissegundos (3 segundos no exemplo)\n    });\n  }\n};\n\nUserRegistrationComponent = __decorate([Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n}), __param(1, Inject('BASE_URL'))], UserRegistrationComponent);\nexport { UserRegistrationComponent };\nclass User {\n  constructor() {\n    this.name = '';\n    this.email = '';\n    this.password = '';\n    this.role = '';\n    this.phone = '';\n    this.cpf = '';\n  }\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAQ1C,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAGpCC,YACUC,IAAgB,EACIC,OAAe,EACnCC,QAAqB,CAAC;EAAA;IAFtB,SAAI,GAAJF,IAAI;IACgB,YAAO,GAAPC,OAAO;IAC3B,aAAQ,GAARC,QAAQ;IALX,YAAO,GAAS,IAAIC,IAAI,EAAE;EAM7B;EAEJC,QAAQ;IACN,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,OAAO,GAAG,WAAW,EAAE,IAAI,CAACK,OAAO,CAAC,CAACC,SAAS,CAChEC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;MACvD,IAAI,CAACG,YAAY,CAAC,gCAAgC,EAAE,QAAQ,CAAC,CAAC,CAAC;IACjE,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,IAAI,CAACD,YAAY,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5D,CAAC,CACF;EACH;EAEA;EACAA,YAAY,CAACE,OAAe,EAAEC,MAAc;IAC1C,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACF,OAAO,EAAEC,MAAM,EAAE;MAClCE,QAAQ,EAAE,IAAI,CAAE;KACjB,CAAC;EACJ;CACD;;AA5BYlB,yBAAyB,eALrCF,SAAS,CAAC;EACTqB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,EAMGC,iBAAM,CAAC,UAAU,CAAC,IALVtB,yBAAyB,CA4BrC;SA5BYA,yBAAyB;AA8BtC,MAAMK,IAAI;EAAVJ;IACE,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,QAAG,GAAW,EAAE;EAClB","names":["Component","Inject","UserRegistrationComponent","constructor","http","baseUrl","snackBar","User","onSubmit","post","newUser","subscribe","response","console","log","openSnackBar","error","message","action","open","duration","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\user-registration\\user-registration.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.css']\r\n})\r\nexport class UserRegistrationComponent {\r\n  public newUser: User = new User();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private snackBar: MatSnackBar // Injete o MatSnackBar\r\n  ) { }\r\n\r\n  onSubmit() {\r\n    this.http.post(this.baseUrl + 'api/users', this.newUser).subscribe(\r\n      response => {\r\n        console.log('Usuário cadastrado com sucesso', response);\r\n        this.openSnackBar('Usuário cadastrado com sucesso', 'Fechar'); // Exibe uma mensagem de sucesso\r\n      },\r\n      error => {\r\n        console.error('Erro ao cadastrar usuário', error);\r\n        this.openSnackBar('Erro ao cadastrar usuário', 'Fechar'); // Exibe uma mensagem de erro\r\n      }\r\n    );\r\n  }\r\n\r\n  // Método para abrir a barra de notificação\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000, // Duração da notificação em milissegundos (3 segundos no exemplo)\r\n    });\r\n  }\r\n}\r\n\r\nclass User {\r\n  name: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n  role: string = '';\r\n  phone: string = '';\r\n  cpf: string = '';\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}