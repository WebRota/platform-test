{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MapComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    // Crie um mapa Leaflet no elemento 'map'\n    //var map = L.map('map').setView([0, 0], 2);\n    //// Adicione um mapa base (usando OpenStreetMap como exemplo)\n    //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    //  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    //}).addTo(map);\n    //// Carregue as coordenadas do arquivo positions.json\n    //this.http.get('assets/positions.json').subscribe((data: any) => {\n    //  var positions = data.data;\n    //  // Crie um array para armazenar os marcadores e a linha do polígono\n    //  var markers = [];\n    //  var polygon = L.polyline([], { color: 'blue' }).addTo(map);\n    //  // Itere pelas coordenadas e crie marcadores e adicione à linha do polígono\n    //  positions.forEach(function (position) {\n    //    var lat = parseFloat(position.latitude);\n    //    var lon = parseFloat(position.longitude);\n    //    var marker = L.marker([lat, lon]).addTo(map);\n    //    markers.push(marker);\n    //    polygon.addLatLng([lat, lon]);\n    //  });\n    //  // Ajuste o zoom do mapa para que todos os marcadores sejam visíveis\n    //  map.fitBounds(L.featureGroup(markers).getBounds());\n    //  // Adicione a linha do polígono ao mapa\n    //  map.addLayer(polygon);\n    //});\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"id\", \"map\", 2, \"height\", \"500px\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ;IACN;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;EAAA;;AAnCSH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,yBAA2C","names":["MapComponent","constructor","http","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\map\\map.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\map\\map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n//import * as L from 'leaflet';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    // Crie um mapa Leaflet no elemento 'map'\r\n    //var map = L.map('map').setView([0, 0], 2);\r\n\r\n    //// Adicione um mapa base (usando OpenStreetMap como exemplo)\r\n    //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    //  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    //}).addTo(map);\r\n\r\n    //// Carregue as coordenadas do arquivo positions.json\r\n    //this.http.get('assets/positions.json').subscribe((data: any) => {\r\n    //  var positions = data.data;\r\n\r\n    //  // Crie um array para armazenar os marcadores e a linha do polígono\r\n    //  var markers = [];\r\n    //  var polygon = L.polyline([], { color: 'blue' }).addTo(map);\r\n\r\n    //  // Itere pelas coordenadas e crie marcadores e adicione à linha do polígono\r\n    //  positions.forEach(function (position) {\r\n    //    var lat = parseFloat(position.latitude);\r\n    //    var lon = parseFloat(position.longitude);\r\n    //    var marker = L.marker([lat, lon]).addTo(map);\r\n    //    markers.push(marker);\r\n    //    polygon.addLatLng([lat, lon]);\r\n    //  });\r\n\r\n    //  // Ajuste o zoom do mapa para que todos os marcadores sejam visíveis\r\n    //  map.fitBounds(L.featureGroup(markers).getBounds());\r\n\r\n    //  // Adicione a linha do polígono ao mapa\r\n    //  map.addLayer(polygon);\r\n    //});\r\n  }\r\n}\r\n","<div id=\"map\" style=\"height: 500px;\"></div>\r\n\r\n<script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"></script>\r\n<script>\r\n  // Crie um mapa Leaflet no elemento 'map'\r\n  var map = L.map('map').setView([-18.92406700, -48.28214200], 12);\r\n\r\n  // Adicione um mapa base (usando OpenStreetMap como exemplo)\r\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n  }).addTo(map);\r\n\r\n  // Carregue as coordenadas do arquivo positions.json\r\n  var positionsData = {\r\n    \"data\": [\r\n      {\r\n        \"date_time\": \"2019-02-12T10:57:36+00:00\",\r\n        \"latitude\": \"-18.92406700\",\r\n        \"longitude\": \"-48.28214200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:57:06+00:00\",\r\n        \"latitude\": \"-18.92376500\",\r\n        \"longitude\": \"-48.28210800\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:56:36+00:00\",\r\n        \"latitude\": \"-18.92213500\",\r\n        \"longitude\": \"-48.28205200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:56:06+00:00\",\r\n        \"latitude\": \"-18.92082200\",\r\n        \"longitude\": \"-48.28132800\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:55:36+00:00\",\r\n        \"latitude\": \"-18.91951300\",\r\n        \"longitude\": \"-48.28033200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:55:06+00:00\",\r\n        \"latitude\": \"-18.91966300\",\r\n        \"longitude\": \"-48.27849800\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:54:36+00:00\",\r\n        \"latitude\": \"-18.92081800\",\r\n        \"longitude\": \"-48.27682200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:54:06+00:00\",\r\n        \"latitude\": \"-18.92195000\",\r\n        \"longitude\": \"-48.27513200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:53:36+00:00\",\r\n        \"latitude\": \"-18.92298100\",\r\n        \"longitude\": \"-48.27350800\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:53:06+00:00\",\r\n        \"latitude\": \"-18.92313700\",\r\n        \"longitude\": \"-48.27337200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:52:36+00:00\",\r\n        \"latitude\": \"-18.92372200\",\r\n        \"longitude\": \"-48.27213800\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:52:06+00:00\",\r\n        \"latitude\": \"-18.92295000\",\r\n        \"longitude\": \"-48.27078200\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:51:36+00:00\",\r\n        \"latitude\": \"-18.91990800\",\r\n        \"longitude\": \"-48.26785500\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:51:06+00:00\",\r\n        \"latitude\": \"-18.91765300\",\r\n        \"longitude\": \"-48.26528000\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:50:36+00:00\",\r\n        \"latitude\": \"-18.91815100\",\r\n        \"longitude\": \"-48.26453900\"\r\n      },\r\n      {\r\n        \"date_time\": \"2019-02-12T10:50:06+00:00\",\r\n        \"latitude\": \"-18.91814500\",\r\n        \"longitude\": \"-48.26453700\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  var positions = positionsData.data;\r\n\r\n  // Crie um array para armazenar os marcadores e a linha do polígono\r\n  var markers = [];\r\n  var polygon = L.polyline([], { color: 'blue' }).addTo(map);\r\n\r\n  // Itere pelas coordenadas e crie marcadores e adicione à linha do polígono\r\n  positions.forEach(function (position) {\r\n    var lat = parseFloat(position.latitude);\r\n    var lon = parseFloat(position.longitude);\r\n    var marker = L.marker([lat, lon]).addTo(map);\r\n    markers.push(marker);\r\n    polygon.addLatLng([lat, lon]);\r\n  });\r\n\r\n  // Ajuste o zoom do mapa para que todos os marcadores sejam visíveis\r\n  map.fitBounds(L.featureGroup(markers).getBounds());\r\n\r\n  // Adicione a linha do polígono ao mapa\r\n  map.addLayer(polygon);\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}