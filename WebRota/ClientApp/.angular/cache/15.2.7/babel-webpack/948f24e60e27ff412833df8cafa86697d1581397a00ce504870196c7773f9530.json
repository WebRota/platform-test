{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, Inject, LOCALE_ID, Directive, Input, EventEmitter, Output, Self, Component, ElementRef, PLATFORM_ID, ContentChildren, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, ReplaySubject, bindCallback, of, throwError, fromEventPattern, merge, Subject } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, multicast, startWith, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\nclass MapsAPILoader {}\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) {\n  return new (t || MapsAPILoader)();\n};\nMapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MapsAPILoader,\n  factory: MapsAPILoader.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nclass GoogleMapsAPIWrapper {\n  constructor(_loader, _zone) {\n    this._loader = _loader;\n    this._zone = _zone;\n    this._map = new Promise(resolve => {\n      this._mapResolver = resolve;\n    });\n  }\n  createMap(el, mapOptions) {\n    return this._zone.runOutsideAngular(() => {\n      return this._loader.load().then(() => {\n        const map = new google.maps.Map(el, mapOptions);\n        this._mapResolver(map);\n        return;\n      });\n    });\n  }\n  setMapOptions(options) {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(m => {\n        m.setOptions(options);\n      });\n    });\n  }\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(options = {}, addToMap = true) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        if (addToMap) {\n          options.map = map;\n        }\n        return new google.maps.Marker(options);\n      });\n    });\n  }\n  createInfoWindow(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(() => new google.maps.InfoWindow(options));\n    });\n  }\n  /**\n   * Creates a google.map.Circle for the current map.\n   */\n  createCircle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        options.map = map;\n        return new google.maps.Circle(options);\n      });\n    });\n  }\n  /**\n   * Creates a google.map.Rectangle for the current map.\n   */\n  createRectangle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        options.map = map;\n        return new google.maps.Rectangle(options);\n      });\n    });\n  }\n  createPolyline(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        const line = new google.maps.Polyline(options);\n        line.setMap(map);\n        return line;\n      });\n    });\n  }\n  createPolygon(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        const polygon = new google.maps.Polygon(options);\n        polygon.setMap(map);\n        return polygon;\n      });\n    });\n  }\n  /**\n   * Creates a new google.map.Data layer for the current map\n   */\n  createDataLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(m => {\n        const data = new google.maps.Data(options);\n        data.setMap(m);\n        return data;\n      });\n    });\n  }\n  /**\n   * Creates a TransitLayer instance for a map\n   * @returns a new transit layer object\n   */\n  createTransitLayer() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        const newLayer = new google.maps.TransitLayer();\n        newLayer.setMap(map);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Creates a BicyclingLayer instance for a map\n   * @returns a new bicycling layer object\n   */\n  createBicyclingLayer() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        const newLayer = new google.maps.BicyclingLayer();\n        newLayer.setMap(map);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Determines if given coordinates are insite a Polygon path.\n   */\n  containsLocation(latLng, polygon) {\n    return this._map.then(() => google.maps.geometry.poly.containsLocation(latLng, polygon));\n  }\n  subscribeToMapEvent(eventName) {\n    return new Observable(observer => {\n      this._map.then(m => m.addListener(eventName, () => this._zone.run(() => observer.next(arguments[0]))));\n    });\n  }\n  clearInstanceListeners() {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(map => {\n        google.maps.event.clearInstanceListeners(map);\n      });\n    });\n  }\n  setCenter(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setCenter(latLng));\n    });\n  }\n  getZoom() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getZoom());\n    });\n  }\n  getBounds() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getBounds());\n    });\n  }\n  getMapTypeId() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getMapTypeId());\n    });\n  }\n  setZoom(zoom) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setZoom(zoom));\n    });\n  }\n  getCenter() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getCenter());\n    });\n  }\n  panTo(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panTo(latLng));\n    });\n  }\n  panBy(x, y) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panBy(x, y));\n    });\n  }\n  fitBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.fitBounds(latLng, padding));\n    });\n  }\n  panToBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panToBounds(latLng, padding));\n    });\n  }\n  /**\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n   */\n  getNativeMap() {\n    return this._map;\n  }\n  /**\n   * Triggers the given event name on the map instance.\n   */\n  triggerMapEvent(eventName) {\n    return this._map.then(m => google.maps.event.trigger(m, eventName));\n  }\n}\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) {\n  return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nGoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GoogleMapsAPIWrapper,\n  factory: GoogleMapsAPIWrapper.ɵfac\n});\nGoogleMapsAPIWrapper.ctorParameters = () => [{\n  type: MapsAPILoader\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass CircleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._circles = new Map();\n  }\n  addCircle(circle) {\n    this._apiWrapper.getNativeMap().then(() => this._circles.set(circle, this._apiWrapper.createCircle({\n      center: {\n        lat: circle.latitude,\n        lng: circle.longitude\n      },\n      clickable: circle.clickable,\n      draggable: circle.draggable,\n      editable: circle.editable,\n      fillColor: circle.fillColor,\n      fillOpacity: circle.fillOpacity,\n      radius: circle.radius,\n      strokeColor: circle.strokeColor,\n      strokeOpacity: circle.strokeOpacity,\n      strokePosition: google.maps.StrokePosition[circle.strokePosition],\n      strokeWeight: circle.strokeWeight,\n      visible: circle.visible,\n      zIndex: circle.zIndex\n    })));\n  }\n  /**\n   * Removes the given circle from the map.\n   */\n  removeCircle(circle) {\n    return this._circles.get(circle).then(c => {\n      c.setMap(null);\n      this._circles.delete(circle);\n    });\n  }\n  setOptions(circle, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._circles.get(circle).then(c => {\n        const actualParam = options.strokePosition;\n        options.strokePosition = google.maps.StrokePosition[actualParam];\n        c.setOptions(options);\n      });\n    });\n  }\n  getBounds(circle) {\n    return this._circles.get(circle).then(c => c.getBounds());\n  }\n  getCenter(circle) {\n    return this._circles.get(circle).then(c => c.getCenter());\n  }\n  getRadius(circle) {\n    return this._circles.get(circle).then(c => c.getRadius());\n  }\n  setCenter(circle) {\n    return this._circles.get(circle).then(c => c.setCenter({\n      lat: circle.latitude,\n      lng: circle.longitude\n    }));\n  }\n  setEditable(circle) {\n    return this._circles.get(circle).then(c => c.setEditable(circle.editable));\n  }\n  setDraggable(circle) {\n    return this._circles.get(circle).then(c => c.setDraggable(circle.draggable));\n  }\n  setVisible(circle) {\n    return this._circles.get(circle).then(c => c.setVisible(circle.visible));\n  }\n  setRadius(circle) {\n    return this._circles.get(circle).then(c => c.setRadius(circle.radius));\n  }\n  getNativeCircle(circle) {\n    return this._circles.get(circle);\n  }\n  createEventObservable(eventName, circle) {\n    return new Observable(observer => {\n      let listener = null;\n      this._circles.get(circle).then(c => {\n        listener = c.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\nCircleManager.ɵfac = function CircleManager_Factory(t) {\n  return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nCircleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: CircleManager,\n  factory: CircleManager.ɵfac\n});\nCircleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nclass DataLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new Data Layer to the map.\n   */\n  addDataLayer(layer) {\n    const newLayer = this._wrapper.createDataLayer({\n      style: layer.style\n    }).then(d => {\n      if (layer.geoJson) {\n        // NOTE: accessing \"features\" on google.maps.Data is undocumented\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n      }\n      return d;\n    });\n    this._layers.set(layer, newLayer);\n  }\n  deleteDataLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n  updateGeoJson(layer, geoJson) {\n    this._layers.get(layer).then(l => {\n      l.forEach(feature => {\n        l.remove(feature);\n        // NOTE: accessing \"features\" on google.maps.Data is undocumented\n        const index = l.features.indexOf(feature, 0);\n        if (index > -1) {\n          l.features.splice(index, 1);\n        }\n      });\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\n    });\n  }\n  setDataOptions(layer, options) {\n    this._layers.get(layer).then(l => {\n      l.setControlPosition(options.controlPosition);\n      l.setControls(options.controls);\n      l.setDrawingMode(options.drawingMode);\n      l.setStyle(options.style);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\n   */\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(d => {\n        d.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  /**\n   * Extract features from a geoJson using google.maps Data Class\n   * @param d : google.maps.Data class instance\n   * @param geoJson : url or geojson object\n   */\n  getDataFeatures(d, geoJson) {\n    return new Promise((resolve, reject) => {\n      if (typeof geoJson === 'object') {\n        try {\n          const features = d.addGeoJson(geoJson);\n          resolve(features);\n        } catch (e) {\n          reject(e);\n        }\n      } else if (typeof geoJson === 'string') {\n        d.loadGeoJson(geoJson, null, resolve);\n      } else {\n        reject(`Impossible to extract features from geoJson: wrong argument type`);\n      }\n    });\n  }\n}\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) {\n  return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nDataLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DataLayerManager,\n  factory: DataLayerManager.ɵfac\n});\nDataLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nclass FitBoundsService {\n  constructor(loader) {\n    this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n    this._includeInBounds$ = new BehaviorSubject(new Map());\n    this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n  }\n  _generateBounds(includeInBounds) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach(b => bounds.extend(b));\n    return bounds;\n  }\n  addToBounds(latLng) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const boundsMap = this._includeInBounds$.value;\n    boundsMap.set(id, latLng);\n    this._includeInBounds$.next(boundsMap);\n  }\n  removeFromBounds(latLng) {\n    const boundsMap = this._includeInBounds$.value;\n    boundsMap.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(boundsMap);\n  }\n  changeFitBoundsChangeSampleTime(timeMs) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n  getBounds$() {\n    return this.bounds$;\n  }\n  _createIdentifier(latLng) {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) {\n  return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\nFitBoundsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: FitBoundsService,\n  factory: FitBoundsService.ɵfac\n});\nFitBoundsService.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\nclass AgmGeocoder {\n  constructor(loader) {\n    const connectableGeocoder$ = new Observable(subscriber => {\n      loader.load().then(() => subscriber.next());\n    }).pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n    this.geocoder$ = connectableGeocoder$;\n  }\n  geocode(request) {\n    return this.geocoder$.pipe(switchMap(geocoder => this._getGoogleResults(geocoder, request)));\n  }\n  _getGoogleResults(geocoder, request) {\n    const geocodeObservable = bindCallback(geocoder.geocode);\n    return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n      if (status === google.maps.GeocoderStatus.OK) {\n        return of(results);\n      }\n      return throwError(status);\n    }));\n  }\n  _createGeocoder() {\n    return new google.maps.Geocoder();\n  }\n}\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) {\n  return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\nAgmGeocoder.ɵprov = ɵɵdefineInjectable({\n  factory: function AgmGeocoder_Factory() {\n    return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n  },\n  token: AgmGeocoder,\n  providedIn: \"root\"\n});\nAgmGeocoder.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\nclass WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\nclass DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nclass LazyMapsAPILoader extends MapsAPILoader {\n  constructor(config = null, w, d, localeId) {\n    super();\n    this.localeId = localeId;\n    this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n    this.callbackName = `agmLazyMapsAPILoader`;\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n  load() {\n    const window = this._windowRef.getNativeWindow();\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n  _assignScriptLoadingPromise(scriptElem) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      this._windowRef.getNativeWindow()[this.callbackName] = () => {\n        resolve();\n      };\n      scriptElem.onerror = error => {\n        reject(error);\n      };\n    });\n  }\n  _getScriptSrc(callbackName) {\n    const protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n    let protocol;\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n    const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null)\n    };\n    const params = Object.keys(queryParams).filter(k => queryParams[k] != null).filter(k => {\n      // remove empty arrays\n      return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n    }).map(k => {\n      // join arrays as comma seperated strings\n      const i = queryParams[k];\n      if (Array.isArray(i)) {\n        return {\n          key: k,\n          value: i.join(',')\n        };\n      }\n      return {\n        key: k,\n        value: queryParams[k]\n      };\n    }).map(entry => {\n      return `${entry.key}=${entry.value}`;\n    }).join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) {\n  return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID));\n};\nLazyMapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: LazyMapsAPILoader,\n  factory: LazyMapsAPILoader.ɵfac\n});\nLazyMapsAPILoader.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [LAZY_MAPS_API_CONFIG]\n  }]\n}, {\n  type: WindowRef\n}, {\n  type: DocumentRef\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [LOCALE_ID]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LAZY_MAPS_API_CONFIG]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\nclass MarkerManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markers = new Map();\n  }\n  convertAnimation(uiAnim) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (uiAnim === null) {\n        return null;\n      } else {\n        return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n      }\n    });\n  }\n  deleteMarker(markerDirective) {\n    const markerPromise = this._markers.get(markerDirective);\n    if (markerPromise == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return markerPromise.then(marker => {\n      return this._zone.run(() => {\n        marker.setMap(null);\n        this._markers.delete(markerDirective);\n      });\n    });\n  }\n  updateMarkerPosition(marker) {\n    return this._markers.get(marker).then(m => m.setPosition({\n      lat: marker.latitude,\n      lng: marker.longitude\n    }));\n  }\n  updateTitle(marker) {\n    return this._markers.get(marker).then(m => m.setTitle(marker.title));\n  }\n  updateLabel(marker) {\n    return this._markers.get(marker).then(m => {\n      m.setLabel(marker.label);\n    });\n  }\n  updateDraggable(marker) {\n    return this._markers.get(marker).then(m => m.setDraggable(marker.draggable));\n  }\n  updateIcon(marker) {\n    return this._markers.get(marker).then(m => m.setIcon(marker.iconUrl));\n  }\n  updateOpacity(marker) {\n    return this._markers.get(marker).then(m => m.setOpacity(marker.opacity));\n  }\n  updateVisible(marker) {\n    return this._markers.get(marker).then(m => m.setVisible(marker.visible));\n  }\n  updateZIndex(marker) {\n    return this._markers.get(marker).then(m => m.setZIndex(marker.zIndex));\n  }\n  updateClickable(marker) {\n    return this._markers.get(marker).then(m => m.setClickable(marker.clickable));\n  }\n  updateAnimation(marker) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const m = yield this._markers.get(marker);\n      m.setAnimation(yield this.convertAnimation(marker.animation));\n    });\n  }\n  addMarker(marker) {\n    const markerPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n      return this._mapsWrapper.createMarker({\n        position: {\n          lat: marker.latitude,\n          lng: marker.longitude\n        },\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation: yield this.convertAnimation(marker.animation)\n      }).then(resolve);\n    }));\n    this._markers.set(marker, markerPromise);\n  }\n  getNativeMarker(marker) {\n    return this._markers.get(marker);\n  }\n  createEventObservable(eventName, marker) {\n    return new Observable(observer => {\n      this._markers.get(marker).then(m => m.addListener(eventName, e => this._zone.run(() => observer.next(e))));\n    });\n  }\n}\nMarkerManager.ɵfac = function MarkerManager_Factory(t) {\n  return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nMarkerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MarkerManager,\n  factory: MarkerManager.ɵfac\n});\nMarkerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass InfoWindowManager {\n  constructor(_mapsWrapper, _zone, _markerManager) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markerManager = _markerManager;\n    this._infoWindows = new Map();\n  }\n  deleteInfoWindow(infoWindow) {\n    const iWindow = this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n    return iWindow.then(i => {\n      return this._zone.run(() => {\n        i.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n  setPosition(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude\n    }));\n  }\n  setZIndex(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setZIndex(infoWindow.zIndex));\n  }\n  open(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then(marker => {\n          return this._mapsWrapper.getNativeMap().then(map => w.open(map, marker));\n        });\n      }\n      return this._mapsWrapper.getNativeMap().then(map => w.open(map));\n    });\n  }\n  close(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => w.close());\n  }\n  setOptions(infoWindow, options) {\n    return this._infoWindows.get(infoWindow).then(i => i.setOptions(options));\n  }\n  addInfoWindow(infoWindow) {\n    const options = {\n      content: infoWindow.content,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan\n    };\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude\n      };\n    }\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(eventName, infoWindow) {\n    return new Observable(observer => {\n      this._infoWindows.get(infoWindow).then(i => {\n        i.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) {\n  return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager));\n};\nInfoWindowManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: InfoWindowManager,\n  factory: InfoWindowManager.ɵfac\n});\nInfoWindowManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}, {\n  type: MarkerManager\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: MarkerManager\n    }];\n  }, null);\n})();\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nclass KmlLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new KML Layer to the map.\n   */\n  addKmlLayer(layer) {\n    const newLayer = this._wrapper.getNativeMap().then(m => {\n      return new google.maps.KmlLayer({\n        clickable: layer.clickable,\n        map: m,\n        preserveViewport: layer.preserveViewport,\n        screenOverlays: layer.screenOverlays,\n        suppressInfoWindows: layer.suppressInfoWindows,\n        url: layer.url,\n        zIndex: layer.zIndex\n      });\n    });\n    this._layers.set(layer, newLayer);\n  }\n  setOptions(layer, options) {\n    this._layers.get(layer).then(l => l.setOptions(options));\n  }\n  deleteKmlLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\n   */\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(m => {\n        m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) {\n  return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nKmlLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KmlLayerManager,\n  factory: KmlLayerManager.ɵfac\n});\nKmlLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nclass LayerManager {\n  constructor(_wrapper) {\n    this._wrapper = _wrapper;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a transit layer to a map instance.\n   * @param layer - a TransitLayer object\n   * @param _options - TransitLayerOptions options\n   * @returns void\n   */\n  addTransitLayer(layer) {\n    const newLayer = this._wrapper.createTransitLayer();\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Adds a bicycling layer to a map instance.\n   * @param layer - a bicycling layer object\n   * @param _options - BicyclingLayer options\n   * @returns void\n   */\n  addBicyclingLayer(layer) {\n    const newLayer = this._wrapper.createBicyclingLayer();\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Deletes a map layer\n   * @param layer - the layer to delete\n   */\n  deleteLayer(layer) {\n    return this._layers.get(layer).then(currentLayer => {\n      currentLayer.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n}\nLayerManager.ɵfac = function LayerManager_Factory(t) {\n  return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper));\n};\nLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: LayerManager,\n  factory: LayerManager.ɵfac\n});\nLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }];\n  }, null);\n})();\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n  load() {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n    return Promise.resolve();\n  }\n}\nfunction createMVCEventObservable(array) {\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(handler => eventNames.map(eventName => array.addListener(eventName, (index, previous) => handler.apply(array, [{\n    newArr: array.getArray(),\n    eventName,\n    index,\n    previous\n  }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n  constructor() {\n    this.vals = [];\n    this.listeners = {\n      remove_at: [],\n      insert_at: [],\n      set_at: []\n    };\n  }\n  clear() {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n      this.removeAt(i);\n    }\n  }\n  getArray() {\n    return [...this.vals];\n  }\n  getAt(i) {\n    return this.vals[i];\n  }\n  getLength() {\n    return this.vals.length;\n  }\n  insertAt(i, elem) {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.forEach(listener => listener(i));\n  }\n  pop() {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.forEach(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n  push(elem) {\n    this.vals.push(elem);\n    this.listeners.insert_at.forEach(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n  removeAt(i) {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.forEach(listener => listener(i, deleted));\n    return deleted;\n  }\n  setAt(i, elem) {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.forEach(listener => listener(i, deleted));\n  }\n  forEach(callback) {\n    this.vals.forEach(callback);\n  }\n  addListener(eventName, handler) {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n      remove: () => {\n        listenerArr.splice(listenerArr.indexOf(handler), 1);\n      }\n    };\n  }\n  bindTo() {\n    throw new Error('Not implemented');\n  }\n  changed() {\n    throw new Error('Not implemented');\n  }\n  get() {\n    throw new Error('Not implemented');\n  }\n  notify() {\n    throw new Error('Not implemented');\n  }\n  set() {\n    throw new Error('Not implemented');\n  }\n  setValues() {\n    throw new Error('Not implemented');\n  }\n  unbind() {\n    throw new Error('Not implemented');\n  }\n  unbindAll() {\n    throw new Error('Not implemented');\n  }\n}\nclass PolygonManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polygons = new Map();\n  }\n  addPolygon(path) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n  updatePolygon(polygon) {\n    const m = this._polygons.get(polygon);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => this._zone.run(() => {\n      l.setPaths(polygon.paths);\n    }));\n  }\n  setPolygonOptions(path, options) {\n    return this._polygons.get(path).then(l => {\n      l.setOptions(options);\n    });\n  }\n  deletePolygon(paths) {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n  getPath(polygonDirective) {\n    return this._polygons.get(polygonDirective).then(polygon => polygon.getPath().getArray());\n  }\n  getPaths(polygonDirective) {\n    return this._polygons.get(polygonDirective).then(polygon => polygon.getPaths().getArray().map(p => p.getArray()));\n  }\n  createEventObservable(eventName, path) {\n    return new Observable(observer => {\n      this._polygons.get(path).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  createPathEventObservable(agmPolygon) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polygon = yield this._polygons.get(agmPolygon);\n      const paths = polygon.getPaths();\n      const pathsChanges$ = createMVCEventObservable(paths);\n      return pathsChanges$.pipe(startWith({\n        newArr: paths.getArray()\n      }),\n      // in order to subscribe to them all\n      switchMap(parentMVEvent => merge(...\n      // rest parameter\n      parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC).pipe(map(chMVCEvent => ({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex: index\n      }))))).pipe(\n      // start the merged ob with an event signinifing change to parent\n      startWith({\n        parentMVEvent,\n        chMVCEvent: null,\n        pathIndex: null\n      }))), skip(1),\n      // skip the manually added event\n      map(({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex\n      }) => {\n        let retVal;\n        if (!chMVCEvent) {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            eventName: parentMVEvent.eventName,\n            index: parentMVEvent.index\n          };\n          if (parentMVEvent.previous) {\n            retVal.previous = parentMVEvent.previous.getArray();\n          }\n        } else {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            pathIndex,\n            eventName: chMVCEvent.eventName,\n            index: chMVCEvent.index\n          };\n          if (chMVCEvent.previous) {\n            retVal.previous = chMVCEvent.previous;\n          }\n        }\n        return retVal;\n      }));\n    });\n  }\n}\nPolygonManager.ɵfac = function PolygonManager_Factory(t) {\n  return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nPolygonManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PolygonManager,\n  factory: PolygonManager.ɵfac\n});\nPolygonManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass PolylineManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polylines = new Map();\n  }\n  static _convertPoints(line) {\n    const path = line._getPoints().map(point => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude\n      };\n    });\n    return path;\n  }\n  static _convertPath(path) {\n    const symbolPath = google.maps.SymbolPath[path];\n    if (typeof symbolPath === 'number') {\n      return symbolPath;\n    } else {\n      return path;\n    }\n  }\n  static _convertIcons(line) {\n    const icons = line._getIcons().map(agmIcon => ({\n      fixedRotation: agmIcon.fixedRotation,\n      offset: agmIcon.offset,\n      repeat: agmIcon.repeat,\n      icon: {\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n        fillColor: agmIcon.fillColor,\n        fillOpacity: agmIcon.fillOpacity,\n        path: PolylineManager._convertPath(agmIcon.path),\n        rotation: agmIcon.rotation,\n        scale: agmIcon.scale,\n        strokeColor: agmIcon.strokeColor,\n        strokeOpacity: agmIcon.strokeOpacity,\n        strokeWeight: agmIcon.strokeWeight\n      }\n    }));\n    // prune undefineds;\n    icons.forEach(icon => {\n      Object.entries(icon).forEach(([key, val]) => {\n        if (typeof val === 'undefined') {\n          delete icon[key];\n        }\n      });\n      if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n        delete icon.icon.anchor;\n      }\n    });\n    return icons;\n  }\n  addPolyline(line) {\n    const polylinePromise = this._mapsWrapper.getNativeMap().then(() => [PolylineManager._convertPoints(line), PolylineManager._convertIcons(line)]).then(([path, icons]) => this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      path,\n      icons\n    }));\n    this._polylines.set(line, polylinePromise);\n  }\n  updatePolylinePoints(line) {\n    const path = PolylineManager._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => this._zone.run(() => l.setPath(path)));\n  }\n  updateIconSequences(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._mapsWrapper.getNativeMap();\n      const icons = PolylineManager._convertIcons(line);\n      const m = this._polylines.get(line);\n      if (m == null) {\n        return;\n      }\n      return m.then(l => this._zone.run(() => l.setOptions({\n        icons\n      })));\n    });\n  }\n  setPolylineOptions(line, options) {\n    return this._polylines.get(line).then(l => {\n      l.setOptions(options);\n    });\n  }\n  deletePolyline(line) {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n  getMVCPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polyline = yield this._polylines.get(agmPolyline);\n      return polyline.getPath();\n    });\n  }\n  getPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.getMVCPath(agmPolyline)).getArray();\n    });\n  }\n  createEventObservable(eventName, line) {\n    return new Observable(observer => {\n      this._polylines.get(line).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  createPathEventObservable(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const mvcPath = yield this.getMVCPath(line);\n      return createMVCEventObservable(mvcPath);\n    });\n  }\n}\nPolylineManager.ɵfac = function PolylineManager_Factory(t) {\n  return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nPolylineManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PolylineManager,\n  factory: PolylineManager.ɵfac\n});\nPolylineManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass RectangleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._rectangles = new Map();\n  }\n  addRectangle(rectangle) {\n    this._apiWrapper.getNativeMap().then(() => this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n      bounds: {\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      },\n      clickable: rectangle.clickable,\n      draggable: rectangle.draggable,\n      editable: rectangle.editable,\n      fillColor: rectangle.fillColor,\n      fillOpacity: rectangle.fillOpacity,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: rectangle.strokeOpacity,\n      strokePosition: google.maps.StrokePosition[rectangle.strokePosition],\n      strokeWeight: rectangle.strokeWeight,\n      visible: rectangle.visible,\n      zIndex: rectangle.zIndex\n    })));\n  }\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n  setOptions(rectangle, options) {\n    return this._rectangles.get(rectangle).then(r => {\n      const actualStrokePosition = options.strokePosition;\n      options.strokePosition = google.maps.StrokePosition[actualStrokePosition];\n      r.setOptions(options);\n    });\n  }\n  getBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => r.getBounds());\n  }\n  setBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      });\n    });\n  }\n  setEditable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n  setDraggable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n  setVisible(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n  createEventObservable(eventName, rectangle) {\n    return new Observable(subsrciber => {\n      let listener = null;\n      this._rectangles.get(rectangle).then(r => {\n        listener = r.addListener(eventName, e => this._zone.run(() => subsrciber.next(e)));\n      });\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\nRectangleManager.ɵfac = function RectangleManager_Factory(t) {\n  return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nRectangleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: RectangleManager,\n  factory: RectangleManager.ɵfac\n});\nRectangleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nclass AgmBicyclingLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId++).toString();\n    /**\n     * Hide/show bicycling layer\n     */\n    this.visible = true;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addBicyclingLayer(this);\n    this._addedToManager = true;\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmBicyclingLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n}\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) {\n  return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\nAgmBicyclingLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmBicyclingLayer,\n  selectors: [[\"agm-bicycling-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  }\n});\nAgmBicyclingLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\nAgmBicyclingLayer.propDecorators = {\n  visible: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-bicycling-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\nclass AgmCircle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Circle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this circle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this circle by dragging the control points shown at\n     * the center and around the circumference of the circle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The radius in meters on the Earth's surface.\n     */\n    this.radius = 0;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this circle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the circle's center is changed.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the circle.\n     */\n    // tslint:disable-next-line: no-output-native\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the circle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the circle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the circle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the circle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on circle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on circle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the circle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the circle's radius is changed.\n     */\n    this.radiusChange = new EventEmitter();\n    /**\n     * This event is fired when the circle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._circleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    // tslint:disable: no-string-literal\n    if (changes['latitude'] || changes['longitude']) {\n      this._manager.setCenter(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    if (changes['radius']) {\n      this._manager.setRadius(this);\n    }\n    // tslint:enable: no-string-literal\n    this._updateCircleOptionsChanges(changes);\n  }\n  _updateCircleOptionsChanges(changes) {\n    const options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _registerEventListeners() {\n    const events = new Map();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'radius_changed':\n            this._manager.getRadius(this).then(radius => eventEmitter.emit(radius));\n            break;\n          case 'center_changed':\n            this._manager.getCenter(this).then(center => eventEmitter.emit({\n              lat: center.lat(),\n              lng: center.lng()\n            }));\n            break;\n          default:\n            eventEmitter.emit(value);\n        }\n      }));\n    });\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(s => s.unsubscribe());\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n  getCenter() {\n    return this._manager.getCenter(this);\n  }\n}\nAgmCircle.ɵfac = function AgmCircle_Factory(t) {\n  return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager));\n};\nAgmCircle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmCircle,\n  selectors: [[\"agm-circle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"circleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    radius: \"radius\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    centerChange: \"centerChange\",\n    circleClick: \"circleClick\",\n    circleDblClick: \"circleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    radiusChange: \"radiusChange\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmCircle.ctorParameters = () => [{\n  type: CircleManager\n}];\nAgmCircle.propDecorators = {\n  latitude: [{\n    type: Input\n  }],\n  longitude: [{\n    type: Input\n  }],\n  clickable: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['circleDraggable']\n  }],\n  editable: [{\n    type: Input\n  }],\n  fillColor: [{\n    type: Input\n  }],\n  fillOpacity: [{\n    type: Input\n  }],\n  radius: [{\n    type: Input\n  }],\n  strokeColor: [{\n    type: Input\n  }],\n  strokeOpacity: [{\n    type: Input\n  }],\n  strokePosition: [{\n    type: Input\n  }],\n  strokeWeight: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  centerChange: [{\n    type: Output\n  }],\n  circleClick: [{\n    type: Output\n  }],\n  circleDblClick: [{\n    type: Output\n  }],\n  drag: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  mouseDown: [{\n    type: Output\n  }],\n  mouseMove: [{\n    type: Output\n  }],\n  mouseOut: [{\n    type: Output\n  }],\n  mouseOver: [{\n    type: Output\n  }],\n  mouseUp: [{\n    type: Output\n  }],\n  radiusChange: [{\n    type: Output\n  }],\n  rightClick: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-circle'\n    }]\n  }], function () {\n    return [{\n      type: CircleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['circleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    radiusChange: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nclass AgmDataLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$1++).toString();\n    this._subscriptions = [];\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * The geoJson to be displayed\n     */\n    this.geoJson = null;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addDataLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmDataLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteDataLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    // tslint:disable-next-line: no-string-literal\n    const geoJsonChange = changes['geoJson'];\n    if (geoJsonChange) {\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n    }\n    const dataOptions = AgmDataLayer._dataOptionsAttributes.reduce((options, k) => options[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k], {});\n    this._manager.setDataOptions(this, dataOptions);\n  }\n}\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) {\n  return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager));\n};\nAgmDataLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmDataLayer,\n  selectors: [[\"agm-data-layer\"]],\n  inputs: {\n    geoJson: \"geoJson\",\n    style: \"style\"\n  },\n  outputs: {\n    layerClick: \"layerClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [{\n  type: DataLayerManager\n}];\nAgmDataLayer.propDecorators = {\n  layerClick: [{\n    type: Output\n  }],\n  geoJson: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-data-layer'\n    }]\n  }], function () {\n    return [{\n      type: DataLayerManager\n    }];\n  }, {\n    layerClick: [{\n      type: Output\n    }],\n    geoJson: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nclass AgmFitBounds {\n  constructor(_fitBoundsAccessor, _fitBoundsService) {\n    this._fitBoundsAccessor = _fitBoundsAccessor;\n    this._fitBoundsService = _fitBoundsService;\n    /**\n     * If the value is true, the element gets added to the bounds of the map.\n     * Default: true.\n     */\n    this.agmFitBounds = true;\n    this._destroyed$ = new Subject();\n    this._latestFitBoundsDetails = null;\n  }\n  /**\n   * @internal\n   */\n  ngOnChanges() {\n    this._updateBounds();\n  }\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$)).subscribe(details => this._updateBounds(details));\n  }\n  /*\n   Either the location changed, or visible status changed.\n   Possible state changes are\n   invisible -> visible\n   visible -> invisible\n   visible -> visible (new location)\n  */\n  _updateBounds(newFitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (!this._latestFitBoundsDetails) {\n      return;\n    }\n    if (this.agmFitBounds === true) {\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n}\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) {\n  return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService));\n};\nAgmFitBounds.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmFitBounds,\n  selectors: [[\"\", \"agmFitBounds\", \"\"]],\n  inputs: {\n    agmFitBounds: \"agmFitBounds\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmFitBounds.ctorParameters = () => [{\n  type: FitBoundsAccessor,\n  decorators: [{\n    type: Self\n  }]\n}, {\n  type: FitBoundsService\n}];\nAgmFitBounds.propDecorators = {\n  agmFitBounds: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n    type: Directive,\n    args: [{\n      selector: '[agmFitBounds]'\n    }]\n  }], function () {\n    return [{\n      type: FitBoundsAccessor,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: FitBoundsService\n    }];\n  }, {\n    agmFitBounds: [{\n      type: Input\n    }]\n  });\n})();\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmInfoWindow {\n  constructor(_infoWindowManager, _el) {\n    this._infoWindowManager = _infoWindowManager;\n    this._el = _el;\n    /**\n     * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n     */\n    this.isOpen = false;\n    /**\n     * Emits an event when the info window is closed.\n     */\n    this.infoWindowClose = new EventEmitter();\n    this._infoWindowAddedToManager = false;\n    this._id = (infoWindowId++).toString();\n  }\n  ngOnInit() {\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n    this._infoWindowManager.addInfoWindow(this);\n    this._infoWindowAddedToManager = true;\n    this._updateOpenState();\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    // tslint:disable: no-string-literal\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes['zIndex']) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes['isOpen']) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n  // tslint:enable: no-string-literal\n  _registerEventListeners() {\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n      this.isOpen = false;\n      this.infoWindowClose.emit();\n    });\n  }\n  _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n  _setInfoWindowOptions(changes) {\n    const options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n  /**\n   * Opens the info window.\n   */\n  open() {\n    return this._infoWindowManager.open(this);\n  }\n  /**\n   * Closes the info window.\n   */\n  close() {\n    return this._infoWindowManager.close(this).then(() => {\n      this.infoWindowClose.emit();\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return 'AgmInfoWindow-' + this._id.toString();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n}\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) {\n  return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nAgmInfoWindow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AgmInfoWindow,\n  selectors: [[\"agm-info-window\"]],\n  inputs: {\n    isOpen: \"isOpen\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    disableAutoPan: \"disableAutoPan\",\n    zIndex: \"zIndex\",\n    maxWidth: \"maxWidth\"\n  },\n  outputs: {\n    infoWindowClose: \"infoWindowClose\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"agm-info-window-content\"]],\n  template: function AgmInfoWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [{\n  type: InfoWindowManager\n}, {\n  type: ElementRef\n}];\nAgmInfoWindow.propDecorators = {\n  latitude: [{\n    type: Input\n  }],\n  longitude: [{\n    type: Input\n  }],\n  disableAutoPan: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  maxWidth: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  infoWindowClose: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n    type: Component,\n    args: [{\n      selector: 'agm-info-window',\n      template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: InfoWindowManager\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    isOpen: [{\n      type: Input\n    }],\n    infoWindowClose: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    disableAutoPan: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }]\n  });\n})();\nlet layerId$2 = 0;\nclass AgmKmlLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$2++).toString();\n    this._subscriptions = [];\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n    this.clickable = true;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n    this.preserveViewport = false;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n    this.screenOverlays = true;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n    this.suppressInfoWindows = false;\n    /**\n     * The URL of the KML document to display.\n     */\n    this.url = null;\n    /**\n     * The z-index of the layer.\n     */\n    this.zIndex = null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n    this.defaultViewportChange = new EventEmitter();\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n    this.statusChange = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addKmlLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    this._updatePolygonOptions(changes);\n  }\n  _updatePolygonOptions(changes) {\n    const options = Object.keys(changes).filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n    if (Object.keys(options).length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }, {\n      name: 'defaultviewport_changed',\n      handler: () => this.defaultViewportChange.emit()\n    }, {\n      name: 'status_changed',\n      handler: () => this.statusChange.emit()\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmKmlLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteKmlLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n}\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) {\n  return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager));\n};\nAgmKmlLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmKmlLayer,\n  selectors: [[\"agm-kml-layer\"]],\n  inputs: {\n    clickable: \"clickable\",\n    preserveViewport: \"preserveViewport\",\n    screenOverlays: \"screenOverlays\",\n    suppressInfoWindows: \"suppressInfoWindows\",\n    url: \"url\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    layerClick: \"layerClick\",\n    defaultViewportChange: \"defaultViewportChange\",\n    statusChange: \"statusChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [{\n  type: KmlLayerManager\n}];\nAgmKmlLayer.propDecorators = {\n  clickable: [{\n    type: Input\n  }],\n  preserveViewport: [{\n    type: Input\n  }],\n  screenOverlays: [{\n    type: Input\n  }],\n  suppressInfoWindows: [{\n    type: Input\n  }],\n  url: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  layerClick: [{\n    type: Output\n  }],\n  defaultViewportChange: [{\n    type: Output\n  }],\n  statusChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-kml-layer'\n    }]\n  }], function () {\n    return [{\n      type: KmlLayerManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    preserveViewport: [{\n      type: Input\n    }],\n    screenOverlays: [{\n      type: Input\n    }],\n    suppressInfoWindows: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    layerClick: [{\n      type: Output\n    }],\n    defaultViewportChange: [{\n      type: Output\n    }],\n    statusChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AgmMapControl {}\nAgmMapControl.ɵfac = function AgmMapControl_Factory(t) {\n  return new (t || AgmMapControl)();\n};\nAgmMapControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmMapControl,\n  inputs: {\n    position: \"position\"\n  }\n});\nAgmMapControl.propDecorators = {\n  position: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapControl, [{\n    type: Directive\n  }], null, {\n    position: [{\n      type: Input\n    }]\n  });\n})();\nclass AgmFullscreenControl extends AgmMapControl {\n  getOptions() {\n    return {\n      fullscreenControl: true,\n      fullscreenControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position]\n      }\n    };\n  }\n}\nAgmFullscreenControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmFullscreenControl_BaseFactory;\n  return function AgmFullscreenControl_Factory(t) {\n    return (ɵAgmFullscreenControl_BaseFactory || (ɵAgmFullscreenControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmFullscreenControl)))(t || AgmFullscreenControl);\n  };\n}();\nAgmFullscreenControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmFullscreenControl,\n  selectors: [[\"agm-fullscreen-control\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmFullscreenControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFullscreenControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-fullscreen-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmFullscreenControl\n      }]\n    }]\n  }], null, null);\n})();\nclass AgmMapTypeControl extends AgmMapControl {\n  getOptions() {\n    return {\n      mapTypeControl: true,\n      mapTypeControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position],\n        style: this.style && google.maps.MapTypeControlStyle[this.style],\n        mapTypeIds: this.mapTypeIds && this.mapTypeIds.map(mapTypeId => google.maps.MapTypeId[mapTypeId])\n      }\n    };\n  }\n}\nAgmMapTypeControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmMapTypeControl_BaseFactory;\n  return function AgmMapTypeControl_Factory(t) {\n    return (ɵAgmMapTypeControl_BaseFactory || (ɵAgmMapTypeControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmMapTypeControl)))(t || AgmMapTypeControl);\n  };\n}();\nAgmMapTypeControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmMapTypeControl,\n  selectors: [[\"agm-map-type-control\"]],\n  inputs: {\n    mapTypeIds: \"mapTypeIds\",\n    style: \"style\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmMapTypeControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nAgmMapTypeControl.propDecorators = {\n  mapTypeIds: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapTypeControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-map-type-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmMapTypeControl\n      }]\n    }]\n  }], null, {\n    mapTypeIds: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\nclass AgmPanControl extends AgmMapControl {\n  getOptions() {\n    return {\n      panControl: true,\n      panControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position]\n      }\n    };\n  }\n}\nAgmPanControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmPanControl_BaseFactory;\n  return function AgmPanControl_Factory(t) {\n    return (ɵAgmPanControl_BaseFactory || (ɵAgmPanControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmPanControl)))(t || AgmPanControl);\n  };\n}();\nAgmPanControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPanControl,\n  selectors: [[\"agm-pan-control\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmPanControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPanControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-pan-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmPanControl\n      }]\n    }]\n  }], null, null);\n})();\nclass AgmRotateControl extends AgmMapControl {\n  getOptions() {\n    return {\n      rotateControl: true,\n      rotateControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position]\n      }\n    };\n  }\n}\nAgmRotateControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmRotateControl_BaseFactory;\n  return function AgmRotateControl_Factory(t) {\n    return (ɵAgmRotateControl_BaseFactory || (ɵAgmRotateControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmRotateControl)))(t || AgmRotateControl);\n  };\n}();\nAgmRotateControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmRotateControl,\n  selectors: [[\"agm-rotate-control\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmRotateControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRotateControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-rotate-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmRotateControl\n      }]\n    }]\n  }], null, null);\n})();\nclass AgmScaleControl extends AgmMapControl {\n  getOptions() {\n    return {\n      scaleControl: true\n    };\n  }\n}\nAgmScaleControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmScaleControl_BaseFactory;\n  return function AgmScaleControl_Factory(t) {\n    return (ɵAgmScaleControl_BaseFactory || (ɵAgmScaleControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmScaleControl)))(t || AgmScaleControl);\n  };\n}();\nAgmScaleControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmScaleControl,\n  selectors: [[\"agm-scale-control\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmScaleControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmScaleControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-scale-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmScaleControl\n      }]\n    }]\n  }], null, null);\n})();\nclass AgmStreetViewControl extends AgmMapControl {\n  getOptions() {\n    return {\n      streetViewControl: true,\n      streetViewControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position]\n      }\n    };\n  }\n}\nAgmStreetViewControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmStreetViewControl_BaseFactory;\n  return function AgmStreetViewControl_Factory(t) {\n    return (ɵAgmStreetViewControl_BaseFactory || (ɵAgmStreetViewControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmStreetViewControl)))(t || AgmStreetViewControl);\n  };\n}();\nAgmStreetViewControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmStreetViewControl,\n  selectors: [[\"agm-street-view-control\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmStreetViewControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmStreetViewControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-street-view-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmStreetViewControl\n      }]\n    }]\n  }], null, null);\n})();\nclass AgmZoomControl extends AgmMapControl {\n  getOptions() {\n    return {\n      zoomControl: true,\n      zoomControlOptions: {\n        position: this.position && google.maps.ControlPosition[this.position],\n        style: this.style && google.maps.ZoomControlStyle[this.style]\n      }\n    };\n  }\n}\nAgmZoomControl.ɵfac = /*@__PURE__*/function () {\n  let ɵAgmZoomControl_BaseFactory;\n  return function AgmZoomControl_Factory(t) {\n    return (ɵAgmZoomControl_BaseFactory || (ɵAgmZoomControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmZoomControl)))(t || AgmZoomControl);\n  };\n}();\nAgmZoomControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmZoomControl,\n  selectors: [[\"agm-zoom-control\"]],\n  inputs: {\n    style: \"style\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: AgmMapControl,\n    useExisting: AgmZoomControl\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nAgmZoomControl.propDecorators = {\n  style: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmZoomControl, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-map agm-zoom-control',\n      providers: [{\n        provide: AgmMapControl,\n        useExisting: AgmZoomControl\n      }]\n    }]\n  }], null, {\n    style: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMap {\n  constructor(_elem, _mapsWrapper,\n  // tslint:disable-next-line: ban-types\n  _platformId, _fitBoundsService, _zone) {\n    this._elem = _elem;\n    this._mapsWrapper = _mapsWrapper;\n    this._platformId = _platformId;\n    this._fitBoundsService = _fitBoundsService;\n    this._zone = _zone;\n    /**\n     * The longitude that defines the center of the map.\n     */\n    this.longitude = 0;\n    /**\n     * The latitude that defines the center of the map.\n     */\n    this.latitude = 0;\n    /**\n     * The zoom level of the map. The default zoom level is 8.\n     */\n    this.zoom = 8;\n    /**\n     * Enables/disables if map is draggable.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = true;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    this.disableDoubleClickZoom = false;\n    /**\n     * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n     * value cannot get updated.\n     */\n    this.disableDefaultUI = false;\n    /**\n     * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n     */\n    this.scrollwheel = true;\n    /**\n     * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n     * enabled by default.\n     */\n    this.keyboardShortcuts = true;\n    /**\n     * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n     * modes, these styles will only apply to labels and geometry.\n     */\n    this.styles = [];\n    /**\n     * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n     * used to\n     * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n     */\n    this.usePanning = false;\n    /**\n     * Sets the viewport to contain the given bounds.\n     * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n     */\n    this.fitBounds = false;\n    /**\n     * The map mapTypeId. Defaults to 'roadmap'.\n     */\n    this.mapTypeId = 'ROADMAP';\n    /**\n     * When false, map icons are not clickable. A map icon represents a point of interest,\n     * also known as a POI. By default map icons are clickable.\n     */\n    this.clickableIcons = true;\n    /**\n     * A map icon represents a point of interest, also known as a POI.\n     * When map icons are clickable by default, an info window is displayed.\n     * When this property is set to false, the info window will not be shown but the click event\n     * will still fire\n     */\n    this.showDefaultInfoWindow = true;\n    /**\n     * This setting controls how gestures on the map are handled.\n     * Allowed values:\n     * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n     * - 'greedy'      (All touch gestures pan or zoom the map.)\n     * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n     * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n     */\n    this.gestureHandling = 'auto';\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45° imagery is not available\n     * (this is the default behavior). 45° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n    this.tilt = 0;\n    this._observableSubscriptions = [];\n    /**\n     * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n     * marker or infoWindow).\n     */\n    // tslint:disable-next-line: max-line-length\n    this.mapClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapRightClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapDblClick = new EventEmitter();\n    /**\n     * This event emitter is fired when the map center changes.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event is fired when the viewport bounds have changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event is fired when the mapTypeId property changes.\n     */\n    this.mapTypeIdChange = new EventEmitter();\n    /**\n     * This event is fired when the map becomes idle after panning or zooming.\n     */\n    this.idle = new EventEmitter();\n    /**\n     * This event is fired when the zoom level has changed.\n     */\n    this.zoomChange = new EventEmitter();\n    /**\n     * This event is fired when the google map is fully initialized.\n     * You get the google.maps.Map instance as a result of this EventEmitter.\n     */\n    this.mapReady = new EventEmitter();\n    /**\n     * This event is fired when the visible tiles have finished loading.\n     */\n    this.tilesLoaded = new EventEmitter();\n  }\n  /** @internal */\n  ngAfterContentInit() {\n    if (isPlatformServer(this._platformId)) {\n      // The code is running on the server, do nothing\n      return;\n    }\n    // todo: this should be solved with a new component and a viewChild decorator\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n    this._initMapInstance(container);\n  }\n  _initMapInstance(el) {\n    this._mapsWrapper.createMap(el, {\n      center: {\n        lat: this.latitude || 0,\n        lng: this.longitude || 0\n      },\n      zoom: this.zoom,\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n      controlSize: this.controlSize,\n      disableDefaultUI: this.disableDefaultUI,\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\n      scrollwheel: this.scrollwheel,\n      backgroundColor: this.backgroundColor,\n      draggable: this.draggable,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      styles: this.styles,\n      mapTypeId: this.mapTypeId.toLocaleLowerCase(),\n      clickableIcons: this.clickableIcons,\n      gestureHandling: this.gestureHandling,\n      tilt: this.tilt,\n      restriction: this.restriction\n    }).then(() => this._mapsWrapper.getNativeMap()).then(map => this.mapReady.emit(map));\n    // register event listeners\n    this._handleMapCenterChange();\n    this._handleMapZoomChange();\n    this._handleMapMouseEvents();\n    this._handleBoundsChange();\n    this._handleMapTypeIdChange();\n    this._handleTilesLoadedEvent();\n    this._handleIdleEvent();\n    this._handleControlChange();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach(s => s.unsubscribe());\n    // remove all listeners from the map instance\n    this._mapsWrapper.clearInstanceListeners();\n    if (this._fitBoundsSubscription) {\n      this._fitBoundsSubscription.unsubscribe();\n    }\n  }\n  /* @internal */\n  ngOnChanges(changes) {\n    this._updateMapOptionsChanges(changes);\n    this._updatePosition(changes);\n  }\n  _updateMapOptionsChanges(changes) {\n    const options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    this._mapsWrapper.setMapOptions(options);\n  }\n  /**\n   * Triggers a resize event on the google map instance.\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n  triggerResize(recenter = true) {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise(resolve => {\n      setTimeout(() => {\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n          if (recenter) {\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\n          }\n          resolve();\n        });\n      });\n    });\n  }\n  _updatePosition(changes) {\n    // tslint:disable: no-string-literal\n    if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n      // no position update needed\n      return;\n    }\n    // tslint:enable: no-string-literal\n    // we prefer fitBounds in changes\n    if ('fitBounds' in changes) {\n      this._fitBounds();\n      return;\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    this._setCenter();\n  }\n  _setCenter() {\n    const newCenter = {\n      lat: this.latitude,\n      lng: this.longitude\n    };\n    if (this.usePanning) {\n      this._mapsWrapper.panTo(newCenter);\n    } else {\n      this._mapsWrapper.setCenter(newCenter);\n    }\n  }\n  _fitBounds() {\n    switch (this.fitBounds) {\n      case true:\n        this._subscribeToFitBoundsUpdates();\n        break;\n      case false:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n        break;\n      default:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n    }\n  }\n  _subscribeToFitBoundsUpdates() {\n    this._zone.runOutsideAngular(() => {\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n      });\n    });\n  }\n  _updateBounds(bounds, padding) {\n    if (!bounds) {\n      return;\n    }\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n      const newBounds = new google.maps.LatLngBounds();\n      newBounds.union(bounds);\n      bounds = newBounds;\n    }\n    if (this.usePanning) {\n      this._mapsWrapper.panToBounds(bounds, padding);\n      return;\n    }\n    this._mapsWrapper.fitBounds(bounds, padding);\n  }\n  _isLatLngBoundsLiteral(bounds) {\n    return bounds != null && bounds.extend === undefined;\n  }\n  _handleMapCenterChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then(center => {\n        this.latitude = center.lat();\n        this.longitude = center.lng();\n        this.centerChange.emit({\n          lat: this.latitude,\n          lng: this.longitude\n        });\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleBoundsChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n      this._mapsWrapper.getBounds().then(bounds => {\n        this.boundsChange.emit(bounds);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapTypeIdChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n      this._mapsWrapper.getMapTypeId().then(mapTypeId => {\n        this.mapTypeIdChange.emit(mapTypeId);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapZoomChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then(z => {\n        this.zoom = z;\n        this.zoomChange.emit(z);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapMouseEvents() {\n    const events = [{\n      name: 'click',\n      emitter: this.mapClick\n    }, {\n      name: 'rightclick',\n      emitter: this.mapRightClick\n    }, {\n      name: 'dblclick',\n      emitter: this.mapDblClick\n    }];\n    events.forEach(e => {\n      const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(([event]) => {\n        // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n        if (event.placeId && !this.showDefaultInfoWindow) {\n          event.stop();\n        }\n        e.emitter.emit(event);\n      });\n      this._observableSubscriptions.push(s);\n    });\n  }\n  _handleControlChange() {\n    this._setControls();\n    this.mapControls.changes.subscribe(() => this._setControls());\n  }\n  _setControls() {\n    const controlOptions = {\n      fullscreenControl: !this.disableDefaultUI,\n      mapTypeControl: false,\n      panControl: false,\n      rotateControl: false,\n      scaleControl: false,\n      streetViewControl: !this.disableDefaultUI,\n      zoomControl: !this.disableDefaultUI\n    };\n    this._mapsWrapper.getNativeMap().then(() => {\n      this.mapControls.forEach(control => Object.assign(controlOptions, control.getOptions()));\n      this._mapsWrapper.setMapOptions(controlOptions);\n    });\n  }\n}\nAgmMap.ɵfac = function AgmMap_Factory(t) {\n  return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nAgmMap.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AgmMap,\n  selectors: [[\"agm-map\"]],\n  contentQueries: function AgmMap_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmMapControl, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mapControls = _t);\n    }\n  },\n  inputs: {\n    longitude: \"longitude\",\n    latitude: \"latitude\",\n    zoom: \"zoom\",\n    draggable: [\"mapDraggable\", \"draggable\"],\n    disableDoubleClickZoom: \"disableDoubleClickZoom\",\n    disableDefaultUI: \"disableDefaultUI\",\n    scrollwheel: \"scrollwheel\",\n    keyboardShortcuts: \"keyboardShortcuts\",\n    styles: \"styles\",\n    usePanning: \"usePanning\",\n    fitBounds: \"fitBounds\",\n    mapTypeId: \"mapTypeId\",\n    clickableIcons: \"clickableIcons\",\n    showDefaultInfoWindow: \"showDefaultInfoWindow\",\n    gestureHandling: \"gestureHandling\",\n    tilt: \"tilt\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    controlSize: \"controlSize\",\n    backgroundColor: \"backgroundColor\",\n    draggableCursor: \"draggableCursor\",\n    draggingCursor: \"draggingCursor\",\n    fitBoundsPadding: \"fitBoundsPadding\",\n    restriction: \"restriction\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapRightClick: \"mapRightClick\",\n    mapDblClick: \"mapDblClick\",\n    centerChange: \"centerChange\",\n    boundsChange: \"boundsChange\",\n    mapTypeIdChange: \"mapTypeIdChange\",\n    idle: \"idle\",\n    zoomChange: \"zoomChange\",\n    mapReady: \"mapReady\",\n    tilesLoaded: \"tilesLoaded\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]],\n  template: function AgmMap_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"]\n});\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'styles', 'zoom', 'minZoom', 'maxZoom', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\nAgmMap.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: GoogleMapsAPIWrapper\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: FitBoundsService\n}, {\n  type: NgZone\n}];\nAgmMap.propDecorators = {\n  longitude: [{\n    type: Input\n  }],\n  latitude: [{\n    type: Input\n  }],\n  zoom: [{\n    type: Input\n  }],\n  minZoom: [{\n    type: Input\n  }],\n  maxZoom: [{\n    type: Input\n  }],\n  controlSize: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['mapDraggable']\n  }],\n  disableDoubleClickZoom: [{\n    type: Input\n  }],\n  disableDefaultUI: [{\n    type: Input\n  }],\n  scrollwheel: [{\n    type: Input\n  }],\n  backgroundColor: [{\n    type: Input\n  }],\n  draggableCursor: [{\n    type: Input\n  }],\n  draggingCursor: [{\n    type: Input\n  }],\n  keyboardShortcuts: [{\n    type: Input\n  }],\n  styles: [{\n    type: Input\n  }],\n  usePanning: [{\n    type: Input\n  }],\n  fitBounds: [{\n    type: Input\n  }],\n  fitBoundsPadding: [{\n    type: Input\n  }],\n  mapTypeId: [{\n    type: Input\n  }],\n  clickableIcons: [{\n    type: Input\n  }],\n  showDefaultInfoWindow: [{\n    type: Input\n  }],\n  gestureHandling: [{\n    type: Input\n  }],\n  tilt: [{\n    type: Input\n  }],\n  restriction: [{\n    type: Input\n  }],\n  mapClick: [{\n    type: Output\n  }],\n  mapRightClick: [{\n    type: Output\n  }],\n  mapDblClick: [{\n    type: Output\n  }],\n  centerChange: [{\n    type: Output\n  }],\n  boundsChange: [{\n    type: Output\n  }],\n  mapTypeIdChange: [{\n    type: Output\n  }],\n  idle: [{\n    type: Output\n  }],\n  zoomChange: [{\n    type: Output\n  }],\n  mapReady: [{\n    type: Output\n  }],\n  tilesLoaded: [{\n    type: Output\n  }],\n  mapControls: [{\n    type: ContentChildren,\n    args: [AgmMapControl]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n    type: Component,\n    args: [{\n      selector: 'agm-map',\n      providers: [CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager],\n      template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n      styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: FitBoundsService\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    longitude: [{\n      type: Input\n    }],\n    latitude: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['mapDraggable']\n    }],\n    disableDoubleClickZoom: [{\n      type: Input\n    }],\n    disableDefaultUI: [{\n      type: Input\n    }],\n    scrollwheel: [{\n      type: Input\n    }],\n    keyboardShortcuts: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    usePanning: [{\n      type: Input\n    }],\n    fitBounds: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    clickableIcons: [{\n      type: Input\n    }],\n    showDefaultInfoWindow: [{\n      type: Input\n    }],\n    gestureHandling: [{\n      type: Input\n    }],\n    tilt: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapRightClick: [{\n      type: Output\n    }],\n    mapDblClick: [{\n      type: Output\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    mapTypeIdChange: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    zoomChange: [{\n      type: Output\n    }],\n    mapReady: [{\n      type: Output\n    }],\n    tilesLoaded: [{\n      type: Output\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    controlSize: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    draggableCursor: [{\n      type: Input\n    }],\n    draggingCursor: [{\n      type: Input\n    }],\n    fitBoundsPadding: [{\n      type: Input\n    }],\n    restriction: [{\n      type: Input\n    }],\n    mapControls: [{\n      type: ContentChildren,\n      args: [AgmMapControl]\n    }]\n  });\n})();\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMarker {\n  constructor(_markerManager) {\n    this._markerManager = _markerManager;\n    /**\n     * If true, the marker can be dragged. Default value is false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If true, the marker is visible\n     */\n    this.visible = true;\n    /**\n     * Whether to automatically open the child info window when the marker is clicked.\n     */\n    this.openInfoWindow = true;\n    /**\n     * The marker's opacity between 0.0 and 1.0.\n     */\n    this.opacity = 1;\n    /**\n     * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n     * front of markers with lower values. By default, markers are displayed according to their\n     * vertical position on screen, with lower markers appearing in front of markers further up the\n     * screen.\n     */\n    this.zIndex = 1;\n    /**\n     * If true, the marker can be clicked. Default value is true.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.clickable = true;\n    /**\n     * This event is fired when the marker's animation property changes.\n     */\n    this.animationChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the marker.\n     */\n    this.markerClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks twice on the marker.\n     */\n    this.markerDblClick = new EventEmitter();\n    /**\n     * This event is fired when the user rightclicks on the marker.\n     */\n    this.markerRightClick = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the marker.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the marker.\n     */\n    // tslint:disable-next-line: no-output-native\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the marker.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user mouses over the marker.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the user mouses outside the marker.\n     */\n    this.mouseOut = new EventEmitter();\n    /** @internal */\n    this.infoWindow = new QueryList();\n    this._markerAddedToManger = false;\n    this._observableSubscriptions = [];\n    this._fitBoundsDetails$ = new ReplaySubject(1);\n    this._id = (markerId++).toString();\n  }\n  /* @internal */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n  handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach(marker => {\n      marker.hostMarker = this;\n    });\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this._markerManager.addMarker(this);\n      this._updateFitBoundsDetails();\n      this._markerAddedToManger = true;\n      this._addEventListeners();\n      return;\n    }\n    // tslint:disable: no-string-literal\n    if (changes['latitude'] || changes['longitude']) {\n      this._markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes['title']) {\n      this._markerManager.updateTitle(this);\n    }\n    if (changes['label']) {\n      this._markerManager.updateLabel(this);\n    }\n    if (changes['draggable']) {\n      this._markerManager.updateDraggable(this);\n    }\n    if (changes['iconUrl']) {\n      this._markerManager.updateIcon(this);\n    }\n    if (changes['opacity']) {\n      this._markerManager.updateOpacity(this);\n    }\n    if (changes['visible']) {\n      this._markerManager.updateVisible(this);\n    }\n    if (changes['zIndex']) {\n      this._markerManager.updateZIndex(this);\n    }\n    if (changes['clickable']) {\n      this._markerManager.updateClickable(this);\n    }\n    if (changes['animation']) {\n      this._markerManager.updateAnimation(this);\n    }\n    // tslint:enable: no-string-literal\n  }\n  /** @internal */\n  getFitBoundsDetails$() {\n    return this._fitBoundsDetails$.asObservable();\n  }\n  _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: {\n        lat: this.latitude,\n        lng: this.longitude\n      }\n    });\n  }\n  _addEventListeners() {\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      if (this.openInfoWindow) {\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\n      }\n      this.markerClick.emit(this);\n    });\n    this._observableSubscriptions.push(cs);\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n      this.markerDblClick.emit(null);\n    });\n    this._observableSubscriptions.push(dcs);\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n      this.markerRightClick.emit(null);\n    });\n    this._observableSubscriptions.push(rc);\n    const ds = this._markerManager.createEventObservable('dragstart', this).subscribe(e => this.dragStart.emit(e));\n    this._observableSubscriptions.push(ds);\n    const d = this._markerManager.createEventObservable('drag', this).subscribe(e => this.drag.emit(e));\n    this._observableSubscriptions.push(d);\n    const de = this._markerManager.createEventObservable('dragend', this).subscribe(e => this.dragEnd.emit(e));\n    this._observableSubscriptions.push(de);\n    const mover = this._markerManager.createEventObservable('mouseover', this).subscribe(e => this.mouseOver.emit(e));\n    this._observableSubscriptions.push(mover);\n    const mout = this._markerManager.createEventObservable('mouseout', this).subscribe(e => this.mouseOut.emit(e));\n    this._observableSubscriptions.push(mout);\n    const anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(() => {\n      this.animationChange.emit(this.animation);\n    });\n    this._observableSubscriptions.push(anChng);\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return 'AgmMarker-' + this._id.toString();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach(s => s.unsubscribe());\n  }\n}\nAgmMarker.ɵfac = function AgmMarker_Factory(t) {\n  return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager));\n};\nAgmMarker.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmMarker,\n  selectors: [[\"agm-marker\"]],\n  contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    }\n  },\n  inputs: {\n    draggable: [\"markerDraggable\", \"draggable\"],\n    visible: \"visible\",\n    openInfoWindow: \"openInfoWindow\",\n    opacity: \"opacity\",\n    zIndex: \"zIndex\",\n    clickable: [\"markerClickable\", \"clickable\"],\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    title: \"title\",\n    label: \"label\",\n    iconUrl: \"iconUrl\",\n    animation: \"animation\"\n  },\n  outputs: {\n    animationChange: \"animationChange\",\n    markerClick: \"markerClick\",\n    markerDblClick: \"markerDblClick\",\n    markerRightClick: \"markerRightClick\",\n    dragStart: \"dragStart\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    mouseOver: \"mouseOver\",\n    mouseOut: \"mouseOut\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmMarker)\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmMarker.ctorParameters = () => [{\n  type: MarkerManager\n}];\nAgmMarker.propDecorators = {\n  latitude: [{\n    type: Input\n  }],\n  longitude: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['markerDraggable']\n  }],\n  iconUrl: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  openInfoWindow: [{\n    type: Input\n  }],\n  opacity: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  clickable: [{\n    type: Input,\n    args: ['markerClickable']\n  }],\n  animation: [{\n    type: Input\n  }],\n  animationChange: [{\n    type: Output\n  }],\n  markerClick: [{\n    type: Output\n  }],\n  markerDblClick: [{\n    type: Output\n  }],\n  markerRightClick: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  drag: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }],\n  mouseOver: [{\n    type: Output\n  }],\n  mouseOut: [{\n    type: Output\n  }],\n  infoWindow: [{\n    type: ContentChildren,\n    args: [AgmInfoWindow]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-marker',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(() => AgmMarker)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: MarkerManager\n    }];\n  }, {\n    draggable: [{\n      type: Input,\n      args: ['markerDraggable']\n    }],\n    visible: [{\n      type: Input\n    }],\n    openInfoWindow: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input,\n      args: ['markerClickable']\n    }],\n    animationChange: [{\n      type: Output\n    }],\n    markerClick: [{\n      type: Output\n    }],\n    markerDblClick: [{\n      type: Output\n    }],\n    markerRightClick: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    infoWindow: [{\n      type: ContentChildren,\n      args: [AgmInfoWindow]\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    iconUrl: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: LatLngLiteral[] = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: LatLngLiteral[][] = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nclass AgmPolygon {\n  constructor(_polygonManager) {\n    this._polygonManager = _polygonManager;\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic\n     * property defines the mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control\n     * points shown at the vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will\n     * follow the curvature of the Earth. When false, edges of the polygon are\n     * rendered as straight lines in screen space. Note that the shape of a\n     * geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * The ordered sequence of coordinates that designates a closed loop.\n     * Unlike polylines, a polygon may consist of one or more paths.\n     *  As a result, the paths property may specify one or more arrays of\n     * LatLng coordinates. Paths are closed automatically; do not repeat the\n     * first vertex of the path as the last vertex. Simple polygons may be\n     * defined using a single array of LatLngs. More complex polygons may\n     * specify an array of arrays. Any simple arrays are converted into Arrays.\n     * Inserting or removing LatLngs from the Array will automatically update\n     * the polygon on the map.\n     */\n    this.paths = [];\n    /**\n     * This event is fired when the DOM click event is fired on the Polygon.\n     */\n    this.polyClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polygon.\n     */\n    this.polyDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polygon.\n     */\n    this.polyDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polygon.\n     */\n    this.polyDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polygon.\n     */\n    this.polyDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polygon.\n     */\n    this.polyMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polygon.\n     */\n    this.polyMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseout.\n     */\n    this.polyMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseover.\n     */\n    this.polyMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polygon\n     */\n    this.polyMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polygon is right-clicked on.\n     */\n    this.polyRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polygon first path changes.\n     */\n    this.polyPathsChange = new EventEmitter();\n    this._polygonAddedToManager = false;\n    this._subscriptions = [];\n  }\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n  }\n  _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.polyClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.polyDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.polyDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.polyDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.polyDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.polyMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.polyMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.polyMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.polyMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.polyMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.polyRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n    this._polygonManager.createPathEventObservable(this).then(paths$ => {\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n  _updatePolygonOptions(changes) {\n    return Object.keys(changes).filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  getPath() {\n    return this._polygonManager.getPath(this);\n  }\n  getPaths() {\n    return this._polygonManager.getPaths(this);\n  }\n}\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) {\n  return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager));\n};\nAgmPolygon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolygon,\n  selectors: [[\"agm-polygon\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polyDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    paths: \"paths\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    polyClick: \"polyClick\",\n    polyDblClick: \"polyDblClick\",\n    polyDrag: \"polyDrag\",\n    polyDragEnd: \"polyDragEnd\",\n    polyDragStart: \"polyDragStart\",\n    polyMouseDown: \"polyMouseDown\",\n    polyMouseMove: \"polyMouseMove\",\n    polyMouseOut: \"polyMouseOut\",\n    polyMouseOver: \"polyMouseOver\",\n    polyMouseUp: \"polyMouseUp\",\n    polyRightClick: \"polyRightClick\",\n    polyPathsChange: \"polyPathsChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\nAgmPolygon.ctorParameters = () => [{\n  type: PolygonManager\n}];\nAgmPolygon.propDecorators = {\n  clickable: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['polyDraggable']\n  }],\n  editable: [{\n    type: Input\n  }],\n  fillColor: [{\n    type: Input\n  }],\n  fillOpacity: [{\n    type: Input\n  }],\n  geodesic: [{\n    type: Input\n  }],\n  paths: [{\n    type: Input\n  }],\n  strokeColor: [{\n    type: Input\n  }],\n  strokeOpacity: [{\n    type: Input\n  }],\n  strokeWeight: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  polyClick: [{\n    type: Output\n  }],\n  polyDblClick: [{\n    type: Output\n  }],\n  polyDrag: [{\n    type: Output\n  }],\n  polyDragEnd: [{\n    type: Output\n  }],\n  polyDragStart: [{\n    type: Output\n  }],\n  polyMouseDown: [{\n    type: Output\n  }],\n  polyMouseMove: [{\n    type: Output\n  }],\n  polyMouseOut: [{\n    type: Output\n  }],\n  polyMouseOver: [{\n    type: Output\n  }],\n  polyMouseUp: [{\n    type: Output\n  }],\n  polyRightClick: [{\n    type: Output\n  }],\n  polyPathsChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polygon'\n    }]\n  }], function () {\n    return [{\n      type: PolygonManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polyDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polyClick: [{\n      type: Output\n    }],\n    polyDblClick: [{\n      type: Output\n    }],\n    polyDrag: [{\n      type: Output\n    }],\n    polyDragEnd: [{\n      type: Output\n    }],\n    polyDragStart: [{\n      type: Output\n    }],\n    polyMouseDown: [{\n      type: Output\n    }],\n    polyMouseMove: [{\n      type: Output\n    }],\n    polyMouseOut: [{\n      type: Output\n    }],\n    polyMouseOver: [{\n      type: Output\n    }],\n    polyMouseUp: [{\n      type: Output\n    }],\n    polyRightClick: [{\n      type: Output\n    }],\n    polyPathsChange: [{\n      type: Output\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n */\nclass AgmPolylineIcon {\n  ngOnInit() {\n    if (this.path == null) {\n      throw new Error('Icon Sequence path is required');\n    }\n  }\n}\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) {\n  return new (t || AgmPolylineIcon)();\n};\nAgmPolylineIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylineIcon,\n  selectors: [[\"agm-icon-sequence\"]],\n  inputs: {\n    fixedRotation: \"fixedRotation\",\n    offset: \"offset\",\n    repeat: \"repeat\",\n    anchorX: \"anchorX\",\n    anchorY: \"anchorY\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    path: \"path\",\n    rotation: \"rotation\",\n    scale: \"scale\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\"\n  }\n});\nAgmPolylineIcon.propDecorators = {\n  fixedRotation: [{\n    type: Input\n  }],\n  offset: [{\n    type: Input\n  }],\n  repeat: [{\n    type: Input\n  }],\n  anchorX: [{\n    type: Input\n  }],\n  anchorY: [{\n    type: Input\n  }],\n  fillColor: [{\n    type: Input\n  }],\n  fillOpacity: [{\n    type: Input\n  }],\n  path: [{\n    type: Input\n  }],\n  rotation: [{\n    type: Input\n  }],\n  scale: [{\n    type: Input\n  }],\n  strokeColor: [{\n    type: Input\n  }],\n  strokeOpacity: [{\n    type: Input\n  }],\n  strokeWeight: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline agm-icon-sequence'\n    }]\n  }], null, {\n    fixedRotation: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    repeat: [{\n      type: Input\n    }],\n    anchorX: [{\n      type: Input\n    }],\n    anchorY: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nclass AgmPolylinePoint {\n  constructor() {\n    /**\n     * This event emitter gets emitted when the position of the point changed.\n     */\n    this.positionChanged = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    // tslint:disable: no-string-literal\n    if (changes['latitude'] || changes['longitude']) {\n      this.positionChanged.emit({\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n      });\n    }\n    // tslint:enable: no-string-literal\n  }\n  /** @internal */\n  getFitBoundsDetails$() {\n    return this.positionChanged.pipe(startWith({\n      lat: this.latitude,\n      lng: this.longitude\n    }), map(position => ({\n      latLng: position\n    })));\n  }\n}\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) {\n  return new (t || AgmPolylinePoint)();\n};\nAgmPolylinePoint.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylinePoint,\n  selectors: [[\"agm-polyline-point\"]],\n  inputs: {\n    latitude: \"latitude\",\n    longitude: \"longitude\"\n  },\n  outputs: {\n    positionChanged: \"positionChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmPolylinePoint)\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolylinePoint.ctorParameters = () => [];\nAgmPolylinePoint.propDecorators = {\n  latitude: [{\n    type: Input\n  }],\n  longitude: [{\n    type: Input\n  }],\n  positionChanged: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline-point',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(() => AgmPolylinePoint)\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    positionChanged: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }]\n  });\n})();\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmPolyline {\n  constructor(_polylineManager) {\n    this._polylineManager = _polylineManager;\n    /**\n     * Indicates whether this Polyline handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic property defines the\n     * mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control points shown at the\n     * vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n     * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n     * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the DOM click event is fired on the Polyline.\n     */\n    this.lineClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polyline.\n     */\n    this.lineDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polyline.\n     */\n    this.lineDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polyline.\n     */\n    this.lineDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polyline.\n     */\n    this.lineDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polyline.\n     */\n    this.lineMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polyline.\n     */\n    this.lineMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseout.\n     */\n    this.lineMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseover.\n     */\n    this.lineMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polyline\n     */\n    this.lineMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polyline is right-clicked on.\n     */\n    this.lineRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polyline's path changes.\n     */\n    this.polyPathChange = new EventEmitter();\n    this._polylineAddedToManager = false;\n    this._subscriptions = [];\n    this._id = (polylineId++).toString();\n  }\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach(point => {\n        const s = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this._subscriptions.push(s);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n    this._subscriptions.push(pointSub);\n    this._polylineManager.updatePolylinePoints(this);\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n    this._subscriptions.push(iconSub);\n  }\n  ngOnChanges(changes) {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n    const options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n  getPath() {\n    return this._polylineManager.getPath(this);\n  }\n  _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.lineClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.lineDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.lineDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.lineDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.lineDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.lineMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.lineMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.lineMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.lineMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.lineMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.lineRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n    this._polylineManager.createPathEventObservable(this).then(ob$ => {\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  _getPoints() {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n  _getIcons() {\n    if (this.iconSequences) {\n      return this.iconSequences.toArray();\n    }\n    return [];\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n}\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) {\n  return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager));\n};\nAgmPolyline.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolyline,\n  selectors: [[\"agm-polyline\"]],\n  contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    }\n  },\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polylineDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    visible: \"visible\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    lineClick: \"lineClick\",\n    lineDblClick: \"lineDblClick\",\n    lineDrag: \"lineDrag\",\n    lineDragEnd: \"lineDragEnd\",\n    lineDragStart: \"lineDragStart\",\n    lineMouseDown: \"lineMouseDown\",\n    lineMouseMove: \"lineMouseMove\",\n    lineMouseOut: \"lineMouseOut\",\n    lineMouseOver: \"lineMouseOver\",\n    lineMouseUp: \"lineMouseUp\",\n    lineRightClick: \"lineRightClick\",\n    polyPathChange: \"polyPathChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\nAgmPolyline.ctorParameters = () => [{\n  type: PolylineManager\n}];\nAgmPolyline.propDecorators = {\n  clickable: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['polylineDraggable']\n  }],\n  editable: [{\n    type: Input\n  }],\n  geodesic: [{\n    type: Input\n  }],\n  strokeColor: [{\n    type: Input\n  }],\n  strokeOpacity: [{\n    type: Input\n  }],\n  strokeWeight: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  lineClick: [{\n    type: Output\n  }],\n  lineDblClick: [{\n    type: Output\n  }],\n  lineDrag: [{\n    type: Output\n  }],\n  lineDragEnd: [{\n    type: Output\n  }],\n  lineDragStart: [{\n    type: Output\n  }],\n  lineMouseDown: [{\n    type: Output\n  }],\n  lineMouseMove: [{\n    type: Output\n  }],\n  lineMouseOut: [{\n    type: Output\n  }],\n  lineMouseOver: [{\n    type: Output\n  }],\n  lineMouseUp: [{\n    type: Output\n  }],\n  lineRightClick: [{\n    type: Output\n  }],\n  polyPathChange: [{\n    type: Output\n  }],\n  points: [{\n    type: ContentChildren,\n    args: [AgmPolylinePoint]\n  }],\n  iconSequences: [{\n    type: ContentChildren,\n    args: [AgmPolylineIcon]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline'\n    }]\n  }], function () {\n    return [{\n      type: PolylineManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polylineDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    lineClick: [{\n      type: Output\n    }],\n    lineDblClick: [{\n      type: Output\n    }],\n    lineDrag: [{\n      type: Output\n    }],\n    lineDragEnd: [{\n      type: Output\n    }],\n    lineDragStart: [{\n      type: Output\n    }],\n    lineMouseDown: [{\n      type: Output\n    }],\n    lineMouseMove: [{\n      type: Output\n    }],\n    lineMouseOut: [{\n      type: Output\n    }],\n    lineMouseOver: [{\n      type: Output\n    }],\n    lineMouseUp: [{\n      type: Output\n    }],\n    lineRightClick: [{\n      type: Output\n    }],\n    polyPathChange: [{\n      type: Output\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    points: [{\n      type: ContentChildren,\n      args: [AgmPolylinePoint]\n    }],\n    iconSequences: [{\n      type: ContentChildren,\n      args: [AgmPolylineIcon]\n    }]\n  });\n})();\nclass AgmRectangle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Rectangle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this rectangle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this rectangle by dragging the control points shown at\n     * the center and around the circumference of the rectangle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this rectangle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the rectangle's is changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the rectangle.\n     */\n    // tslint:disable-next-line: no-output-native\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the rectangle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the rectangle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the rectangle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the rectangle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the rectangle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the rectangle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._rectangleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    // tslint:disable: no-string-literal\n    if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n      this._manager.setBounds(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    // tslint:enable: no-string-literal\n    this._updateRectangleOptionsChanges(changes);\n  }\n  _updateRectangleOptionsChanges(changes) {\n    const options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmRectangle._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _registerEventListeners() {\n    const events = new Map();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'bounds_changed':\n            this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n              north: bounds.getNorthEast().lat(),\n              east: bounds.getNorthEast().lng(),\n              south: bounds.getSouthWest().lat(),\n              west: bounds.getSouthWest().lng()\n            }));\n            break;\n          default:\n            eventEmitter.emit(value);\n        }\n      }));\n    });\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(s => s.unsubscribe());\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n}\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) {\n  return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager));\n};\nAgmRectangle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmRectangle,\n  selectors: [[\"agm-rectangle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"rectangleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    north: \"north\",\n    east: \"east\",\n    south: \"south\",\n    west: \"west\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    boundsChange: \"boundsChange\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblClick: \"rectangleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmRectangle.ctorParameters = () => [{\n  type: RectangleManager\n}];\nAgmRectangle.propDecorators = {\n  north: [{\n    type: Input\n  }],\n  east: [{\n    type: Input\n  }],\n  south: [{\n    type: Input\n  }],\n  west: [{\n    type: Input\n  }],\n  clickable: [{\n    type: Input\n  }],\n  draggable: [{\n    type: Input,\n    args: ['rectangleDraggable']\n  }],\n  editable: [{\n    type: Input\n  }],\n  fillColor: [{\n    type: Input\n  }],\n  fillOpacity: [{\n    type: Input\n  }],\n  strokeColor: [{\n    type: Input\n  }],\n  strokeOpacity: [{\n    type: Input\n  }],\n  strokePosition: [{\n    type: Input\n  }],\n  strokeWeight: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  boundsChange: [{\n    type: Output\n  }],\n  rectangleClick: [{\n    type: Output\n  }],\n  rectangleDblClick: [{\n    type: Output\n  }],\n  drag: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  mouseDown: [{\n    type: Output\n  }],\n  mouseMove: [{\n    type: Output\n  }],\n  mouseOut: [{\n    type: Output\n  }],\n  mouseOver: [{\n    type: Output\n  }],\n  mouseUp: [{\n    type: Output\n  }],\n  rightClick: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-rectangle'\n    }]\n  }], function () {\n    return [{\n      type: RectangleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['rectangleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    north: [{\n      type: Input\n    }],\n    east: [{\n      type: Input\n    }],\n    south: [{\n      type: Input\n    }],\n    west: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nclass AgmTransitLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$3++).toString();\n    /**\n     * Hide/show transit layer\n     */\n    this.visible = true;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addTransitLayer(this);\n    this._addedToManager = true;\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmTransitLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n}\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) {\n  return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\nAgmTransitLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: AgmTransitLayer,\n  selectors: [[\"agm-transit-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  }\n});\nAgmTransitLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\nAgmTransitLayer.propDecorators = {\n  visible: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-transit-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nclass AgmCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(lazyMapsAPILoaderConfig) {\n    return {\n      ngModule: AgmCoreModule,\n      providers: [...BROWSER_GLOBALS_PROVIDERS, {\n        provide: MapsAPILoader,\n        useClass: LazyMapsAPILoader\n      }, {\n        provide: LAZY_MAPS_API_CONFIG,\n        useValue: lazyMapsAPILoaderConfig\n      }]\n    };\n  }\n}\nAgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) {\n  return new (t || AgmCoreModule)();\n};\nAgmCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AgmCoreModule\n});\nAgmCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n    type: NgModule,\n    args: [{\n      declarations: coreDirectives(),\n      exports: coreDirectives()\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, {\n    declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl],\n    exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl]\n  });\n})();\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl, CircleManager, DataLayerManager, FitBoundsAccessor, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, coreDirectives, FitBoundsService as ɵa, AgmMapControl as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };","map":{"version":3,"names":["__awaiter","Injectable","NgZone","ɵɵdefineInjectable","ɵɵinject","InjectionToken","Optional","Inject","LOCALE_ID","Directive","Input","EventEmitter","Output","Self","Component","ElementRef","PLATFORM_ID","ContentChildren","QueryList","forwardRef","NgModule","Observable","BehaviorSubject","from","timer","ReplaySubject","bindCallback","of","throwError","fromEventPattern","merge","Subject","flatMap","sample","switchMap","map","shareReplay","multicast","startWith","skip","distinctUntilChanged","takeUntil","isPlatformServer","ɵngcc0","_c0","MapsAPILoader","ɵfac","MapsAPILoader_Factory","t","ɵprov","token","factory","ngDevMode","ɵsetClassMetadata","type","GoogleMapsAPIWrapper","constructor","_loader","_zone","_map","Promise","resolve","_mapResolver","createMap","el","mapOptions","runOutsideAngular","load","then","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","addToMap","Marker","createInfoWindow","InfoWindow","createCircle","Circle","createRectangle","Rectangle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","createDataLayer","data","Data","createTransitLayer","newLayer","TransitLayer","createBicyclingLayer","BicyclingLayer","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","observer","addListener","run","next","arguments","clearInstanceListeners","event","setCenter","getZoom","getBounds","getMapTypeId","setZoom","zoom","getCenter","panTo","panBy","x","y","fitBounds","padding","panToBounds","triggerMapEvent","trigger","GoogleMapsAPIWrapper_Factory","ctorParameters","CircleManager","_apiWrapper","_circles","addCircle","circle","set","center","lat","latitude","lng","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokePosition","StrokePosition","strokeWeight","visible","zIndex","removeCircle","get","c","delete","actualParam","getRadius","setEditable","setDraggable","setVisible","setRadius","getNativeCircle","createEventObservable","listener","e","remove","CircleManager_Factory","DataLayerManager","_wrapper","_layers","addDataLayer","layer","style","d","geoJson","getDataFeatures","features","deleteDataLayer","l","updateGeoJson","forEach","feature","index","indexOf","splice","setDataOptions","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","DataLayerManager_Factory","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","addToBounds","id","_createIdentifier","value","has","boundsMap","removeFromBounds","changeFitBoundsChangeSampleTime","timeMs","getBounds$","FitBoundsService_Factory","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","geocode","request","geocoder","_getGoogleResults","geocodeObservable","results","status","GeocoderStatus","OK","Geocoder","AgmGeocoder_Factory","providedIn","args","WindowRef","getNativeWindow","window","DocumentRef","getNativeDocument","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","w","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","_scriptLoadingPromise","scriptOnPage","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","callback","key","apiKey","client","clientId","channel","libraries","region","language","params","Object","keys","filter","k","Array","isArray","length","i","join","entry","LazyMapsAPILoader_Factory","undefined","decorators","String","MarkerManager","_mapsWrapper","_markers","convertAnimation","uiAnim","Animation","deleteMarker","markerDirective","markerPromise","marker","updateMarkerPosition","setPosition","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","updateZIndex","setZIndex","updateClickable","setClickable","updateAnimation","setAnimation","animation","addMarker","position","icon","getNativeMarker","MarkerManager_Factory","InfoWindowManager","_markerManager","_infoWindows","deleteInfoWindow","infoWindow","iWindow","close","open","hostMarker","addInfoWindow","content","maxWidth","disableAutoPan","infoWindowPromise","InfoWindowManager_Factory","KmlLayerManager","addKmlLayer","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","deleteKmlLayer","KmlLayerManager_Factory","LayerManager","addTransitLayer","addBicyclingLayer","deleteLayer","currentLayer","LayerManager_Factory","NoOpMapsAPILoader","Error","createMVCEventObservable","array","eventNames","handler","previous","apply","newArr","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","listeners","remove_at","insert_at","set_at","clear","removeAt","getAt","getLength","insertAt","elem","pop","deleted","push","setAt","listenerArr","bindTo","changed","notify","setValues","unbind","unbindAll","PolygonManager","_polygons","addPolygon","path","polygonPromise","geodesic","paths","updatePolygon","setPaths","setPolygonOptions","deletePolygon","getPath","polygonDirective","getPaths","p","createPathEventObservable","agmPolygon","pathsChanges$","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolygonManager_Factory","PolylineManager","_polylines","_convertPoints","_getPoints","point","_convertPath","symbolPath","SymbolPath","_convertIcons","icons","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","rotation","scale","entries","val","addPolyline","polylinePromise","updatePolylinePoints","setPath","updateIconSequences","setPolylineOptions","deletePolyline","getMVCPath","agmPolyline","polyline","mvcPath","PolylineManager_Factory","RectangleManager","_rectangles","addRectangle","rectangle","north","east","south","west","removeRectangle","r","actualStrokePosition","setBounds","subsrciber","RectangleManager_Factory","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","ngOnInit","ngOnDestroy","AgmBicyclingLayer_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","propDecorators","selector","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","_registerEventListeners","ngOnChanges","changes","_updateCircleOptionsChanges","optionKeys","_mapOptions","currentValue","events","eventEmitter","subscribe","emit","s","unsubscribe","AgmCircle_Factory","outputs","ɵɵNgOnChangesFeature","layerId$1","AgmDataLayer","_subscriptions","layerClick","_addEventListeners","name","ev","obj","os","geoJsonChange","dataOptions","_dataOptionsAttributes","reduce","hasOwnProperty","AgmDataLayer_Factory","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","complete","AgmFitBounds_Factory","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","AgmInfoWindow_Factory","ɵcmp","ɵɵdefineComponent","ngContentSelectors","decls","vars","consts","template","AgmInfoWindow_Template","rf","ctx","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","encapsulation","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","_updatePolygonOptions","_kmlLayerOptions","AgmKmlLayer_Factory","AgmMapControl","AgmMapControl_Factory","AgmFullscreenControl","getOptions","fullscreenControl","fullscreenControlOptions","ControlPosition","ɵAgmFullscreenControl_BaseFactory","AgmFullscreenControl_Factory","ɵɵgetInheritedFactory","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","providers","AgmMapTypeControl","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","mapTypeIds","mapTypeId","MapTypeId","ɵAgmMapTypeControl_BaseFactory","AgmMapTypeControl_Factory","AgmPanControl","panControl","panControlOptions","ɵAgmPanControl_BaseFactory","AgmPanControl_Factory","AgmRotateControl","rotateControl","rotateControlOptions","ɵAgmRotateControl_BaseFactory","AgmRotateControl_Factory","AgmScaleControl","scaleControl","ɵAgmScaleControl_BaseFactory","AgmScaleControl_Factory","AgmStreetViewControl","streetViewControl","streetViewControlOptions","ɵAgmStreetViewControl_BaseFactory","AgmStreetViewControl_Factory","AgmZoomControl","zoomControl","zoomControlOptions","ZoomControlStyle","ɵAgmZoomControl_BaseFactory","AgmZoomControl_Factory","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","styles","usePanning","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","ngAfterContentInit","container","_initMapInstance","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","toLocaleLowerCase","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_handleControlChange","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","triggerResize","recenter","setTimeout","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","_isLatLngBoundsLiteral","newBounds","union","z","emitter","placeId","stop","_setControls","mapControls","controlOptions","control","assign","AgmMap_Factory","contentQueries","AgmMap_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","AgmMap_Template","ɵɵelement","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","handleInfoWindowUpdate","Number","_updateFitBoundsDetails","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","AgmMarker_Factory","AgmMarker_ContentQueries","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","handlers","paths$","pathEvent","_polygonOptionsAttributes","AgmPolygon_Factory","AgmPolylineIcon","AgmPolylineIcon_Factory","AgmPolylinePoint","positionChanged","AgmPolylinePoint_Factory","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","pointSub","iconSub","iconSequences","_polylineOptionsAttributes","ob$","toArray","AgmPolyline_Factory","AgmPolyline_ContentQueries","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","AgmRectangle_Factory","layerId$3","AgmTransitLayer","AgmTransitLayer_Factory","coreDirectives","AgmCoreModule","forRoot","lazyMapsAPILoaderConfig","ngModule","useClass","useValue","AgmCoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe"],"sources":["C:/Users/willi/Documents/GitHub/platform-test/WebRota/node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js"],"sourcesContent":["import { __awaiter } from 'tslib';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, Inject, LOCALE_ID, Directive, Input, EventEmitter, Output, Self, Component, ElementRef, PLATFORM_ID, ContentChildren, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, ReplaySubject, bindCallback, of, throwError, fromEventPattern, merge, Subject } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, multicast, startWith, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nclass MapsAPILoader {\n}\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) { return new (t || MapsAPILoader)(); };\nMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MapsAPILoader, factory: MapsAPILoader.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nclass GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => new google.maps.InfoWindow(options));\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                const line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                const polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                const data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @returns a new transit layer object\n     */\n    createTransitLayer() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                const newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(map);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @returns a new bicycling layer object\n     */\n    createBicyclingLayer() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                const newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(map);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return this._map.then(() => google.maps.geometry.poly.containsLocation(latLng, polygon));\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then(m => m.addListener(eventName, () => this._zone.run(() => observer.next(arguments[0]))));\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n}\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) { return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nGoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GoogleMapsAPIWrapper, factory: GoogleMapsAPIWrapper.ɵfac });\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._apiWrapper.getNativeMap().then(() => this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: google.maps.StrokePosition[circle.strokePosition],\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        })));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._circles.get(circle).then((c) => {\n                const actualParam = options.strokePosition;\n                options.strokePosition = google.maps.StrokePosition[actualParam];\n                c.setOptions(options);\n            });\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then(c => c.setCenter({ lat: circle.latitude, lng: circle.longitude }));\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then(c => c.setEditable(circle.editable));\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then(c => c.setDraggable(circle.draggable));\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then(c => c.setVisible(circle.visible));\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then(c => c.setRadius(circle.radius));\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n}\nCircleManager.ɵfac = function CircleManager_Factory(t) { return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCircleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CircleManager, factory: CircleManager.ɵfac });\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nclass DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                // NOTE: accessing \"features\" on google.maps.Data is undocumented\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(feature => {\n                l.remove(feature);\n                // NOTE: accessing \"features\" on google.maps.Data is undocumented\n                const index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n}\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) { return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nDataLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DataLayerManager, factory: DataLayerManager.ɵfac });\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nclass FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const boundsMap = this._includeInBounds$.value;\n        boundsMap.set(id, latLng);\n        this._includeInBounds$.next(boundsMap);\n    }\n    removeFromBounds(latLng) {\n        const boundsMap = this._includeInBounds$.value;\n        boundsMap.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(boundsMap);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n}\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) { return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nFitBoundsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FitBoundsService, factory: FitBoundsService.ɵfac });\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n\nclass AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === google.maps.GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n}\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) { return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nAgmGeocoder.ɵprov = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nclass LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        const protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null),\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            const i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n}\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) { return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID)); };\nLazyMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LazyMapsAPILoader, factory: LazyMapsAPILoader.ɵfac });\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LAZY_MAPS_API_CONFIG]\n            }] }, { type: WindowRef }, { type: DocumentRef }, { type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\nclass MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(markerDirective) {\n        const markerPromise = this._markers.get(markerDirective);\n        if (markerPromise == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return markerPromise.then((marker) => {\n            return this._zone.run(() => {\n                marker.setMap(null);\n                this._markers.delete(markerDirective);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable(observer => {\n            this._markers.get(marker).then(m => m.addListener(eventName, e => this._zone.run(() => observer.next(e))));\n        });\n    }\n}\nMarkerManager.ɵfac = function MarkerManager_Factory(t) { return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nMarkerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MarkerManager, factory: MarkerManager.ɵfac });\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n}\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) { return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager)); };\nInfoWindowManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: InfoWindowManager, factory: InfoWindowManager.ɵfac });\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }, { type: MarkerManager }]; }, null); })();\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nclass KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n}\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) { return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nKmlLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KmlLayerManager, factory: KmlLayerManager.ɵfac });\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nclass LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param layer - a TransitLayer object\n     * @param _options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer) {\n        const newLayer = this._wrapper.createTransitLayer();\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param layer - a bicycling layer object\n     * @param _options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer) {\n        const newLayer = this._wrapper.createBicyclingLayer();\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param layer - the layer to delete\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n}\nLayerManager.ɵfac = function LayerManager_Factory(t) { return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper)); };\nLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LayerManager, factory: LayerManager.ɵfac });\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }]; }, null); })();\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern(handler => eventNames.map(eventName => array.addListener(eventName, (index, previous) => handler.apply(array, [{ newArr: array.getArray(), eventName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            remove_at: [],\n            insert_at: [],\n            set_at: [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.forEach(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.forEach(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.forEach(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.forEach(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.forEach(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n    bindTo() { throw new Error('Not implemented'); }\n    changed() { throw new Error('Not implemented'); }\n    get() { throw new Error('Not implemented'); }\n    notify() { throw new Error('Not implemented'); }\n    set() { throw new Error('Not implemented'); }\n    setValues() { throw new Error('Not implemented'); }\n    unbind() { throw new Error('Not implemented'); }\n    unbindAll() { throw new Error('Not implemented'); }\n}\n\nclass PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygonDirective) {\n        return this._polygons.get(polygonDirective)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygonDirective) {\n        return this._polygons.get(polygonDirective)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(// start the merged ob with an event signinifing change to parent\n            startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.eventName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.eventName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n}\nPolygonManager.ɵfac = function PolygonManager_Factory(t) { return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolygonManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolygonManager, factory: PolygonManager.ɵfac });\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager._convertPoints(line),\n            PolylineManager._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path,\n            icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => l.setPath(path)));\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n}\nPolylineManager.ɵfac = function PolylineManager_Factory(t) { return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolylineManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolylineManager, factory: PolylineManager.ɵfac });\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._apiWrapper.getNativeMap().then(() => this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: google.maps.StrokePosition[rectangle.strokePosition],\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        })));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => {\n            const actualStrokePosition = options.strokePosition;\n            options.strokePosition = google.maps.StrokePosition[actualStrokePosition];\n            r.setOptions(options);\n        });\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return new Observable((subsrciber) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => subsrciber.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n}\nRectangleManager.ɵfac = function RectangleManager_Factory(t) { return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nRectangleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RectangleManager, factory: RectangleManager.ɵfac });\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nclass AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this);\n        this._addedToManager = true;\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n}\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) { return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmBicyclingLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmBicyclingLayer, selectors: [[\"agm-bicycling-layer\"]], inputs: { visible: \"visible\" } });\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\nAgmBicyclingLayer.propDecorators = {\n    visible: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-bicycling-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n\nclass AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        // tslint:enable: no-string-literal\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        const events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit(value);\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(s => s.unsubscribe());\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n}\nAgmCircle.ɵfac = function AgmCircle_Factory(t) { return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager)); };\nAgmCircle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmCircle, selectors: [[\"agm-circle\"]], inputs: { clickable: \"clickable\", draggable: [\"circleDraggable\", \"draggable\"], editable: \"editable\", radius: \"radius\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", latitude: \"latitude\", longitude: \"longitude\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { centerChange: \"centerChange\", circleClick: \"circleClick\", circleDblClick: \"circleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", radiusChange: \"radiusChange\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\nAgmCircle.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['circleDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    radius: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokePosition: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    centerChange: [{ type: Output }],\n    circleClick: [{ type: Output }],\n    circleDblClick: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    mouseDown: [{ type: Output }],\n    mouseMove: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseUp: [{ type: Output }],\n    radiusChange: [{ type: Output }],\n    rightClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-circle'\n            }]\n    }], function () { return [{ type: CircleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['circleDraggable']\n        }], editable: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], centerChange: [{\n            type: Output\n        }], circleClick: [{\n            type: Output\n        }], circleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], radiusChange: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nclass AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        // tslint:disable-next-line: no-string-literal\n        const geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        const dataOptions = AgmDataLayer._dataOptionsAttributes.reduce((options, k) => options[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k], {});\n        this._manager.setDataOptions(this, dataOptions);\n    }\n}\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) { return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager)); };\nAgmDataLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmDataLayer, selectors: [[\"agm-data-layer\"]], inputs: { geoJson: \"geoJson\", style: \"style\" }, outputs: { layerClick: \"layerClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\nAgmDataLayer.propDecorators = {\n    layerClick: [{ type: Output }],\n    geoJson: [{ type: Input }],\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-data-layer'\n            }]\n    }], function () { return [{ type: DataLayerManager }]; }, { layerClick: [{\n            type: Output\n        }], geoJson: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nclass AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n}\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) { return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService)); };\nAgmFitBounds.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmFitBounds, selectors: [[\"\", \"agmFitBounds\", \"\"]], inputs: { agmFitBounds: \"agmFitBounds\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\nAgmFitBounds.propDecorators = {\n    agmFitBounds: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n        type: Directive,\n        args: [{\n                selector: '[agmFitBounds]'\n            }]\n    }], function () { return [{ type: FitBoundsAccessor, decorators: [{\n                type: Self\n            }] }, { type: FitBoundsService }]; }, { agmFitBounds: [{\n            type: Input\n        }] }); })();\n\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    // tslint:enable: no-string-literal\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n}\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) { return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nAgmInfoWindow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmInfoWindow, selectors: [[\"agm-info-window\"]], inputs: { isOpen: \"isOpen\", latitude: \"latitude\", longitude: \"longitude\", disableAutoPan: \"disableAutoPan\", zIndex: \"zIndex\", maxWidth: \"maxWidth\" }, outputs: { infoWindowClose: \"infoWindowClose\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"agm-info-window-content\"]], template: function AgmInfoWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\nAgmInfoWindow.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    disableAutoPan: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    isOpen: [{ type: Input }],\n    infoWindowClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n        type: Component,\n        args: [{\n                selector: 'agm-info-window',\n                template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: InfoWindowManager }, { type: ɵngcc0.ElementRef }]; }, { isOpen: [{\n            type: Input\n        }], infoWindowClose: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], disableAutoPan: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }] }); })();\n\nlet layerId$2 = 0;\nclass AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) { return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager)); };\nAgmKmlLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmKmlLayer, selectors: [[\"agm-kml-layer\"]], inputs: { clickable: \"clickable\", preserveViewport: \"preserveViewport\", screenOverlays: \"screenOverlays\", suppressInfoWindows: \"suppressInfoWindows\", url: \"url\", zIndex: \"zIndex\" }, outputs: { layerClick: \"layerClick\", defaultViewportChange: \"defaultViewportChange\", statusChange: \"statusChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\nAgmKmlLayer.propDecorators = {\n    clickable: [{ type: Input }],\n    preserveViewport: [{ type: Input }],\n    screenOverlays: [{ type: Input }],\n    suppressInfoWindows: [{ type: Input }],\n    url: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    layerClick: [{ type: Output }],\n    defaultViewportChange: [{ type: Output }],\n    statusChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-kml-layer'\n            }]\n    }], function () { return [{ type: KmlLayerManager }]; }, { clickable: [{\n            type: Input\n        }], preserveViewport: [{\n            type: Input\n        }], screenOverlays: [{\n            type: Input\n        }], suppressInfoWindows: [{\n            type: Input\n        }], url: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], layerClick: [{\n            type: Output\n        }], defaultViewportChange: [{\n            type: Output\n        }], statusChange: [{\n            type: Output\n        }] }); })();\n\nclass AgmMapControl {\n}\nAgmMapControl.ɵfac = function AgmMapControl_Factory(t) { return new (t || AgmMapControl)(); };\nAgmMapControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMapControl, inputs: { position: \"position\" } });\nAgmMapControl.propDecorators = {\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapControl, [{\n        type: Directive\n    }], null, { position: [{\n            type: Input\n        }] }); })();\nclass AgmFullscreenControl extends AgmMapControl {\n    getOptions() {\n        return {\n            fullscreenControl: true,\n            fullscreenControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmFullscreenControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmFullscreenControl_BaseFactory; return function AgmFullscreenControl_Factory(t) { return (ɵAgmFullscreenControl_BaseFactory || (ɵAgmFullscreenControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmFullscreenControl)))(t || AgmFullscreenControl); }; }();\nAgmFullscreenControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmFullscreenControl, selectors: [[\"agm-fullscreen-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmFullscreenControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFullscreenControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-fullscreen-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmFullscreenControl }]\n            }]\n    }], null, null); })();\nclass AgmMapTypeControl extends AgmMapControl {\n    getOptions() {\n        return {\n            mapTypeControl: true,\n            mapTypeControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n                style: this.style && google.maps.MapTypeControlStyle[this.style],\n                mapTypeIds: this.mapTypeIds && this.mapTypeIds.map(mapTypeId => google.maps.MapTypeId[mapTypeId]),\n            },\n        };\n    }\n}\nAgmMapTypeControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmMapTypeControl_BaseFactory; return function AgmMapTypeControl_Factory(t) { return (ɵAgmMapTypeControl_BaseFactory || (ɵAgmMapTypeControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmMapTypeControl)))(t || AgmMapTypeControl); }; }();\nAgmMapTypeControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMapTypeControl, selectors: [[\"agm-map-type-control\"]], inputs: { mapTypeIds: \"mapTypeIds\", style: \"style\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmMapTypeControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nAgmMapTypeControl.propDecorators = {\n    mapTypeIds: [{ type: Input }],\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapTypeControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-map-type-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmMapTypeControl }]\n            }]\n    }], null, { mapTypeIds: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\nclass AgmPanControl extends AgmMapControl {\n    getOptions() {\n        return {\n            panControl: true,\n            panControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmPanControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmPanControl_BaseFactory; return function AgmPanControl_Factory(t) { return (ɵAgmPanControl_BaseFactory || (ɵAgmPanControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmPanControl)))(t || AgmPanControl); }; }();\nAgmPanControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPanControl, selectors: [[\"agm-pan-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmPanControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPanControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-pan-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmPanControl }]\n            }]\n    }], null, null); })();\nclass AgmRotateControl extends AgmMapControl {\n    getOptions() {\n        return {\n            rotateControl: true,\n            rotateControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmRotateControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmRotateControl_BaseFactory; return function AgmRotateControl_Factory(t) { return (ɵAgmRotateControl_BaseFactory || (ɵAgmRotateControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmRotateControl)))(t || AgmRotateControl); }; }();\nAgmRotateControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmRotateControl, selectors: [[\"agm-rotate-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmRotateControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRotateControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-rotate-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmRotateControl }]\n            }]\n    }], null, null); })();\nclass AgmScaleControl extends AgmMapControl {\n    getOptions() {\n        return {\n            scaleControl: true,\n        };\n    }\n}\nAgmScaleControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmScaleControl_BaseFactory; return function AgmScaleControl_Factory(t) { return (ɵAgmScaleControl_BaseFactory || (ɵAgmScaleControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmScaleControl)))(t || AgmScaleControl); }; }();\nAgmScaleControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmScaleControl, selectors: [[\"agm-scale-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmScaleControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmScaleControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-scale-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmScaleControl }]\n            }]\n    }], null, null); })();\nclass AgmStreetViewControl extends AgmMapControl {\n    getOptions() {\n        return {\n            streetViewControl: true,\n            streetViewControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmStreetViewControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmStreetViewControl_BaseFactory; return function AgmStreetViewControl_Factory(t) { return (ɵAgmStreetViewControl_BaseFactory || (ɵAgmStreetViewControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmStreetViewControl)))(t || AgmStreetViewControl); }; }();\nAgmStreetViewControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmStreetViewControl, selectors: [[\"agm-street-view-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmStreetViewControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmStreetViewControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-street-view-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmStreetViewControl }]\n            }]\n    }], null, null); })();\nclass AgmZoomControl extends AgmMapControl {\n    getOptions() {\n        return {\n            zoomControl: true,\n            zoomControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n                style: this.style && google.maps.ZoomControlStyle[this.style],\n            },\n        };\n    }\n}\nAgmZoomControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmZoomControl_BaseFactory; return function AgmZoomControl_Factory(t) { return (ɵAgmZoomControl_BaseFactory || (ɵAgmZoomControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmZoomControl)))(t || AgmZoomControl); }; }();\nAgmZoomControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmZoomControl, selectors: [[\"agm-zoom-control\"]], inputs: { style: \"style\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmZoomControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nAgmZoomControl.propDecorators = {\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmZoomControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-zoom-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmZoomControl }]\n            }]\n    }], null, { style: [{\n            type: Input\n        }] }); })();\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMap {\n    constructor(_elem, _mapsWrapper, \n    // tslint:disable-next-line: ban-types\n    _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'ROADMAP';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        // tslint:disable-next-line: max-line-length\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            mapTypeId: this.mapTypeId.toLocaleLowerCase(),\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n        this._handleControlChange();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // tslint:enable: no-string-literal\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        const newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(e => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(([event]) => {\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (event.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(event);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n    _handleControlChange() {\n        this._setControls();\n        this.mapControls.changes.subscribe(() => this._setControls());\n    }\n    _setControls() {\n        const controlOptions = {\n            fullscreenControl: !this.disableDefaultUI,\n            mapTypeControl: false,\n            panControl: false,\n            rotateControl: false,\n            scaleControl: false,\n            streetViewControl: !this.disableDefaultUI,\n            zoomControl: !this.disableDefaultUI,\n        };\n        this._mapsWrapper.getNativeMap().then(() => {\n            this.mapControls.forEach(control => Object.assign(controlOptions, control.getOptions()));\n            this._mapsWrapper.setMapOptions(controlOptions);\n        });\n    }\n}\nAgmMap.ɵfac = function AgmMap_Factory(t) { return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAgmMap.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmMap, selectors: [[\"agm-map\"]], contentQueries: function AgmMap_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmMapControl, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mapControls = _t);\n    } }, inputs: { longitude: \"longitude\", latitude: \"latitude\", zoom: \"zoom\", draggable: [\"mapDraggable\", \"draggable\"], disableDoubleClickZoom: \"disableDoubleClickZoom\", disableDefaultUI: \"disableDefaultUI\", scrollwheel: \"scrollwheel\", keyboardShortcuts: \"keyboardShortcuts\", styles: \"styles\", usePanning: \"usePanning\", fitBounds: \"fitBounds\", mapTypeId: \"mapTypeId\", clickableIcons: \"clickableIcons\", showDefaultInfoWindow: \"showDefaultInfoWindow\", gestureHandling: \"gestureHandling\", tilt: \"tilt\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", controlSize: \"controlSize\", backgroundColor: \"backgroundColor\", draggableCursor: \"draggableCursor\", draggingCursor: \"draggingCursor\", fitBoundsPadding: \"fitBoundsPadding\", restriction: \"restriction\" }, outputs: { mapClick: \"mapClick\", mapRightClick: \"mapRightClick\", mapDblClick: \"mapDblClick\", centerChange: \"centerChange\", boundsChange: \"boundsChange\", mapTypeIdChange: \"mapTypeIdChange\", idle: \"idle\", zoomChange: \"zoomChange\", mapReady: \"mapReady\", tilesLoaded: \"tilesLoaded\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]], template: function AgmMap_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"] });\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'styles', 'zoom', 'minZoom', 'maxZoom', 'mapTypeId', 'clickableIcons',\n    'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\nAgmMap.propDecorators = {\n    longitude: [{ type: Input }],\n    latitude: [{ type: Input }],\n    zoom: [{ type: Input }],\n    minZoom: [{ type: Input }],\n    maxZoom: [{ type: Input }],\n    controlSize: [{ type: Input }],\n    draggable: [{ type: Input, args: ['mapDraggable',] }],\n    disableDoubleClickZoom: [{ type: Input }],\n    disableDefaultUI: [{ type: Input }],\n    scrollwheel: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    draggableCursor: [{ type: Input }],\n    draggingCursor: [{ type: Input }],\n    keyboardShortcuts: [{ type: Input }],\n    styles: [{ type: Input }],\n    usePanning: [{ type: Input }],\n    fitBounds: [{ type: Input }],\n    fitBoundsPadding: [{ type: Input }],\n    mapTypeId: [{ type: Input }],\n    clickableIcons: [{ type: Input }],\n    showDefaultInfoWindow: [{ type: Input }],\n    gestureHandling: [{ type: Input }],\n    tilt: [{ type: Input }],\n    restriction: [{ type: Input }],\n    mapClick: [{ type: Output }],\n    mapRightClick: [{ type: Output }],\n    mapDblClick: [{ type: Output }],\n    centerChange: [{ type: Output }],\n    boundsChange: [{ type: Output }],\n    mapTypeIdChange: [{ type: Output }],\n    idle: [{ type: Output }],\n    zoomChange: [{ type: Output }],\n    mapReady: [{ type: Output }],\n    tilesLoaded: [{ type: Output }],\n    mapControls: [{ type: ContentChildren, args: [AgmMapControl,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n        type: Component,\n        args: [{ selector: 'agm-map', providers: [\n                    CircleManager,\n                    DataLayerManager,\n                    DataLayerManager,\n                    FitBoundsService,\n                    GoogleMapsAPIWrapper,\n                    InfoWindowManager,\n                    KmlLayerManager,\n                    LayerManager,\n                    MarkerManager,\n                    PolygonManager,\n                    PolylineManager,\n                    RectangleManager,\n                ], template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `, styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleMapsAPIWrapper }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: FitBoundsService }, { type: ɵngcc0.NgZone }]; }, { longitude: [{\n            type: Input\n        }], latitude: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['mapDraggable']\n        }], disableDoubleClickZoom: [{\n            type: Input\n        }], disableDefaultUI: [{\n            type: Input\n        }], scrollwheel: [{\n            type: Input\n        }], keyboardShortcuts: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], usePanning: [{\n            type: Input\n        }], fitBounds: [{\n            type: Input\n        }], mapTypeId: [{\n            type: Input\n        }], clickableIcons: [{\n            type: Input\n        }], showDefaultInfoWindow: [{\n            type: Input\n        }], gestureHandling: [{\n            type: Input\n        }], tilt: [{\n            type: Input\n        }], mapClick: [{\n            type: Output\n        }], mapRightClick: [{\n            type: Output\n        }], mapDblClick: [{\n            type: Output\n        }], centerChange: [{\n            type: Output\n        }], boundsChange: [{\n            type: Output\n        }], mapTypeIdChange: [{\n            type: Output\n        }], idle: [{\n            type: Output\n        }], zoomChange: [{\n            type: Output\n        }], mapReady: [{\n            type: Output\n        }], tilesLoaded: [{\n            type: Output\n        }], minZoom: [{\n            type: Input\n        }], maxZoom: [{\n            type: Input\n        }], controlSize: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], draggableCursor: [{\n            type: Input\n        }], draggingCursor: [{\n            type: Input\n        }], fitBoundsPadding: [{\n            type: Input\n        }], restriction: [{\n            type: Input\n        }], mapControls: [{\n            type: ContentChildren,\n            args: [AgmMapControl]\n        }] }); })();\n\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n        // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe(e => this.dragStart.emit(e));\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe(e => this.drag.emit(e));\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(e => this.dragEnd.emit(e));\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(e => this.mouseOver.emit(e));\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(e => this.mouseOut.emit(e));\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nAgmMarker.ɵfac = function AgmMarker_Factory(t) { return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager)); };\nAgmMarker.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMarker, selectors: [[\"agm-marker\"]], contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    } }, inputs: { draggable: [\"markerDraggable\", \"draggable\"], visible: \"visible\", openInfoWindow: \"openInfoWindow\", opacity: \"opacity\", zIndex: \"zIndex\", clickable: [\"markerClickable\", \"clickable\"], latitude: \"latitude\", longitude: \"longitude\", title: \"title\", label: \"label\", iconUrl: \"iconUrl\", animation: \"animation\" }, outputs: { animationChange: \"animationChange\", markerClick: \"markerClick\", markerDblClick: \"markerDblClick\", markerRightClick: \"markerRightClick\", dragStart: \"dragStart\", drag: \"drag\", dragEnd: \"dragEnd\", mouseOver: \"mouseOver\", mouseOut: \"mouseOut\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\nAgmMarker.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    title: [{ type: Input }],\n    label: [{ type: Input }],\n    draggable: [{ type: Input, args: ['markerDraggable',] }],\n    iconUrl: [{ type: Input }],\n    visible: [{ type: Input }],\n    openInfoWindow: [{ type: Input }],\n    opacity: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    clickable: [{ type: Input, args: ['markerClickable',] }],\n    animation: [{ type: Input }],\n    animationChange: [{ type: Output }],\n    markerClick: [{ type: Output }],\n    markerDblClick: [{ type: Output }],\n    markerRightClick: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    infoWindow: [{ type: ContentChildren, args: [AgmInfoWindow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-marker',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n                ]\n            }]\n    }], function () { return [{ type: MarkerManager }]; }, { draggable: [{\n            type: Input,\n            args: ['markerDraggable']\n        }], visible: [{\n            type: Input\n        }], openInfoWindow: [{\n            type: Input\n        }], opacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], clickable: [{\n            type: Input,\n            args: ['markerClickable']\n        }], animationChange: [{\n            type: Output\n        }], markerClick: [{\n            type: Output\n        }], markerDblClick: [{\n            type: Output\n        }], markerRightClick: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], infoWindow: [{\n            type: ContentChildren,\n            args: [AgmInfoWindow]\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], iconUrl: [{\n            type: Input\n        }], animation: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: LatLngLiteral[] = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: LatLngLiteral[][] = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nclass AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n}\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) { return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager)); };\nAgmPolygon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolygon, selectors: [[\"agm-polygon\"]], inputs: { clickable: \"clickable\", draggable: [\"polyDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", paths: \"paths\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\" }, outputs: { polyClick: \"polyClick\", polyDblClick: \"polyDblClick\", polyDrag: \"polyDrag\", polyDragEnd: \"polyDragEnd\", polyDragStart: \"polyDragStart\", polyMouseDown: \"polyMouseDown\", polyMouseMove: \"polyMouseMove\", polyMouseOut: \"polyMouseOut\", polyMouseOver: \"polyMouseOver\", polyMouseUp: \"polyMouseUp\", polyRightClick: \"polyRightClick\", polyPathsChange: \"polyPathsChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\nAgmPolygon.propDecorators = {\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['polyDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    geodesic: [{ type: Input }],\n    paths: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    polyClick: [{ type: Output }],\n    polyDblClick: [{ type: Output }],\n    polyDrag: [{ type: Output }],\n    polyDragEnd: [{ type: Output }],\n    polyDragStart: [{ type: Output }],\n    polyMouseDown: [{ type: Output }],\n    polyMouseMove: [{ type: Output }],\n    polyMouseOut: [{ type: Output }],\n    polyMouseOver: [{ type: Output }],\n    polyMouseUp: [{ type: Output }],\n    polyRightClick: [{ type: Output }],\n    polyPathsChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polygon'\n            }]\n    }], function () { return [{ type: PolygonManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polyDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], paths: [{\n            type: Input\n        }], polyClick: [{\n            type: Output\n        }], polyDblClick: [{\n            type: Output\n        }], polyDrag: [{\n            type: Output\n        }], polyDragEnd: [{\n            type: Output\n        }], polyDragStart: [{\n            type: Output\n        }], polyMouseDown: [{\n            type: Output\n        }], polyMouseMove: [{\n            type: Output\n        }], polyMouseOut: [{\n            type: Output\n        }], polyMouseOver: [{\n            type: Output\n        }], polyMouseUp: [{\n            type: Output\n        }], polyRightClick: [{\n            type: Output\n        }], polyPathsChange: [{\n            type: Output\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n */\nclass AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n}\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) { return new (t || AgmPolylineIcon)(); };\nAgmPolylineIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylineIcon, selectors: [[\"agm-icon-sequence\"]], inputs: { fixedRotation: \"fixedRotation\", offset: \"offset\", repeat: \"repeat\", anchorX: \"anchorX\", anchorY: \"anchorY\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", path: \"path\", rotation: \"rotation\", scale: \"scale\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\" } });\nAgmPolylineIcon.propDecorators = {\n    fixedRotation: [{ type: Input }],\n    offset: [{ type: Input }],\n    repeat: [{ type: Input }],\n    anchorX: [{ type: Input }],\n    anchorY: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    path: [{ type: Input }],\n    rotation: [{ type: Input }],\n    scale: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n        type: Directive,\n        args: [{ selector: 'agm-polyline agm-icon-sequence' }]\n    }], null, { fixedRotation: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], repeat: [{\n            type: Input\n        }], anchorX: [{\n            type: Input\n        }], anchorY: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], rotation: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nclass AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this.positionChanged.emit({\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            });\n        }\n        // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n}\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) { return new (t || AgmPolylinePoint)(); };\nAgmPolylinePoint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylinePoint, selectors: [[\"agm-polyline-point\"]], inputs: { latitude: \"latitude\", longitude: \"longitude\" }, outputs: { positionChanged: \"positionChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolylinePoint.ctorParameters = () => [];\nAgmPolylinePoint.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    positionChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline-point',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint) },\n                ]\n            }]\n    }], function () { return []; }, { positionChanged: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }] }); })();\n\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) { return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager)); };\nAgmPolyline.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolyline, selectors: [[\"agm-polyline\"]], contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    } }, inputs: { clickable: \"clickable\", draggable: [\"polylineDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", visible: \"visible\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", zIndex: \"zIndex\" }, outputs: { lineClick: \"lineClick\", lineDblClick: \"lineDblClick\", lineDrag: \"lineDrag\", lineDragEnd: \"lineDragEnd\", lineDragStart: \"lineDragStart\", lineMouseDown: \"lineMouseDown\", lineMouseMove: \"lineMouseMove\", lineMouseOut: \"lineMouseOut\", lineMouseOver: \"lineMouseOver\", lineMouseUp: \"lineMouseUp\", lineRightClick: \"lineRightClick\", polyPathChange: \"polyPathChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\nAgmPolyline.propDecorators = {\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['polylineDraggable',] }],\n    editable: [{ type: Input }],\n    geodesic: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    lineClick: [{ type: Output }],\n    lineDblClick: [{ type: Output }],\n    lineDrag: [{ type: Output }],\n    lineDragEnd: [{ type: Output }],\n    lineDragStart: [{ type: Output }],\n    lineMouseDown: [{ type: Output }],\n    lineMouseMove: [{ type: Output }],\n    lineMouseOut: [{ type: Output }],\n    lineMouseOver: [{ type: Output }],\n    lineMouseUp: [{ type: Output }],\n    lineRightClick: [{ type: Output }],\n    polyPathChange: [{ type: Output }],\n    points: [{ type: ContentChildren, args: [AgmPolylinePoint,] }],\n    iconSequences: [{ type: ContentChildren, args: [AgmPolylineIcon,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline'\n            }]\n    }], function () { return [{ type: PolylineManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polylineDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], lineClick: [{\n            type: Output\n        }], lineDblClick: [{\n            type: Output\n        }], lineDrag: [{\n            type: Output\n        }], lineDragEnd: [{\n            type: Output\n        }], lineDragStart: [{\n            type: Output\n        }], lineMouseDown: [{\n            type: Output\n        }], lineMouseMove: [{\n            type: Output\n        }], lineMouseOut: [{\n            type: Output\n        }], lineMouseOver: [{\n            type: Output\n        }], lineMouseUp: [{\n            type: Output\n        }], lineRightClick: [{\n            type: Output\n        }], polyPathChange: [{\n            type: Output\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], points: [{\n            type: ContentChildren,\n            args: [AgmPolylinePoint]\n        }], iconSequences: [{\n            type: ContentChildren,\n            args: [AgmPolylineIcon]\n        }] }); })();\n\nclass AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        // tslint:enable: no-string-literal\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmRectangle._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        const events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit(value);\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(s => s.unsubscribe());\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n}\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) { return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager)); };\nAgmRectangle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmRectangle, selectors: [[\"agm-rectangle\"]], inputs: { clickable: \"clickable\", draggable: [\"rectangleDraggable\", \"draggable\"], editable: \"editable\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", north: \"north\", east: \"east\", south: \"south\", west: \"west\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { boundsChange: \"boundsChange\", rectangleClick: \"rectangleClick\", rectangleDblClick: \"rectangleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\nAgmRectangle.propDecorators = {\n    north: [{ type: Input }],\n    east: [{ type: Input }],\n    south: [{ type: Input }],\n    west: [{ type: Input }],\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['rectangleDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokePosition: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    boundsChange: [{ type: Output }],\n    rectangleClick: [{ type: Output }],\n    rectangleDblClick: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    mouseDown: [{ type: Output }],\n    mouseMove: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseUp: [{ type: Output }],\n    rightClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-rectangle'\n            }]\n    }], function () { return [{ type: RectangleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['rectangleDraggable']\n        }], editable: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], boundsChange: [{\n            type: Output\n        }], rectangleClick: [{\n            type: Output\n        }], rectangleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], north: [{\n            type: Input\n        }], east: [{\n            type: Input\n        }], south: [{\n            type: Input\n        }], west: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nclass AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this);\n        this._addedToManager = true;\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n}\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) { return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmTransitLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmTransitLayer, selectors: [[\"agm-transit-layer\"]], inputs: { visible: \"visible\" } });\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\nAgmTransitLayer.propDecorators = {\n    visible: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-transit-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmFullscreenControl,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMapTypeControl,\n        AgmMarker,\n        AgmPanControl,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmRotateControl,\n        AgmScaleControl,\n        AgmStreetViewControl,\n        AgmTransitLayer,\n        AgmZoomControl,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nclass AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n}\nAgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) { return new (t || AgmCoreModule)(); };\nAgmCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AgmCoreModule });\nAgmCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n        type: NgModule,\n        args: [{ declarations: coreDirectives(), exports: coreDirectives() }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, { declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl], exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl] }); })();\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl, CircleManager, DataLayerManager, FitBoundsAccessor, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, coreDirectives, FitBoundsService as ɵa, AgmMapControl as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n\n"],"mappings":"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AE3a,QAAQ,EAAE,CAAC;MACXtF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEoI,SAAS,EAAE,CAAC;MACZxF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4T,KAAK,EAAE,CAAC;MACRhR,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE+T,KAAK,EAAE,CAAC;MACRnR,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEmU,OAAO,EAAE,CAAC;MACVvR,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE8U,SAAS,EAAE,CAAC;MACZlS,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmuB,UAAU,CAAC;EACbrrB,WAAW,CAACsrB,eAAe,EAAE;IACzB,IAAI,CAACA,eAAe,GAAGA,eAAe;IACtC;AACR;AACA;IACQ,IAAI,CAAC/lB,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACoR,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,KAAK,GAAG,EAAE;IACf;AACR;AACA;IACQ,IAAI,CAACyU,SAAS,GAAG,IAAIpuB,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACquB,YAAY,GAAG,IAAIruB,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAACsuB,QAAQ,GAAG,IAAItuB,YAAY,EAAE;IAClC;AACR;AACA;IACQ,IAAI,CAACuuB,WAAW,GAAG,IAAIvuB,YAAY,EAAE;IACrC;AACR;AACA;IACQ,IAAI,CAACwuB,aAAa,GAAG,IAAIxuB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAACyuB,aAAa,GAAG,IAAIzuB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAAC0uB,aAAa,GAAG,IAAI1uB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAAC2uB,YAAY,GAAG,IAAI3uB,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAAC4uB,aAAa,GAAG,IAAI5uB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAAC6uB,WAAW,GAAG,IAAI7uB,YAAY,EAAE;IACrC;AACR;AACA;IACQ,IAAI,CAAC8uB,cAAc,GAAG,IAAI9uB,YAAY,EAAE;IACxC;AACR;AACA;IACQ,IAAI,CAAC+uB,eAAe,GAAG,IAAI/uB,YAAY,EAAE;IACzC,IAAI,CAACgvB,sBAAsB,GAAG,KAAK;IACnC,IAAI,CAAC9N,cAAc,GAAG,EAAE;EAC5B;EACA;EACAoI,kBAAkB,GAAG;IACjB,IAAI,CAAC,IAAI,CAAC0F,sBAAsB,EAAE;MAC9B,IAAI,CAACC,KAAK,EAAE;IAChB;EACJ;EACAhP,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAAC8O,sBAAsB,EAAE;MAC9B,IAAI,CAACC,KAAK,EAAE;MACZ;IACJ;IACA,IAAI,CAACd,eAAe,CAACrU,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC6K,qBAAqB,CAACzE,OAAO,CAAC,CAAC;EACrF;EACA+O,KAAK,GAAG;IACJ,IAAI,CAACd,eAAe,CAAC5U,UAAU,CAAC,IAAI,CAAC;IACrC,IAAI,CAACyV,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAAC5N,kBAAkB,EAAE;EAC7B;EACAA,kBAAkB,GAAG;IACjB,MAAM8N,QAAQ,GAAG,CACb;MAAE7N,IAAI,EAAE,OAAO;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC8M,SAAS,CAAC1N,IAAI,CAACY,EAAE;IAAE,CAAC,EAC3D;MAAED,IAAI,EAAE,UAAU;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC+M,YAAY,CAAC3N,IAAI,CAACY,EAAE;IAAE,CAAC,EACjE;MAAED,IAAI,EAAE,MAAM;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACgN,QAAQ,CAAC5N,IAAI,CAACY,EAAE;IAAE,CAAC,EACzD;MAAED,IAAI,EAAE,SAAS;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACiN,WAAW,CAAC7N,IAAI,CAACY,EAAE;IAAE,CAAC,EAC/D;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACkN,aAAa,CAAC9N,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACmN,aAAa,CAAC/N,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACoN,aAAa,CAAChO,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,UAAU;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACqN,YAAY,CAACjO,IAAI,CAACY,EAAE;IAAE,CAAC,EACjE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACsN,aAAa,CAAClO,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,SAAS;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACuN,WAAW,CAACnO,IAAI,CAACY,EAAE;IAAE,CAAC,EAC/D;MAAED,IAAI,EAAE,YAAY;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACwN,cAAc,CAACpO,IAAI,CAACY,EAAE;IAAE,CAAC,CACxE;IACD4N,QAAQ,CAACpkB,OAAO,CAAEyW,GAAG,IAAK;MACtB,MAAMC,EAAE,GAAG,IAAI,CAAC2M,eAAe,CAACvkB,qBAAqB,CAAC2X,GAAG,CAACF,IAAI,EAAE,IAAI,CAAC,CAACZ,SAAS,CAACc,GAAG,CAACjK,OAAO,CAAC;MAC5F,IAAI,CAAC4J,cAAc,CAACtI,IAAI,CAAC4I,EAAE,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAAC2M,eAAe,CAAC/T,yBAAyB,CAAC,IAAI,CAAC,CAC/C3W,IAAI,CAAC0rB,MAAM,IAAI;MAChB,MAAM3N,EAAE,GAAG2N,MAAM,CAAC1O,SAAS,CAAC2O,SAAS,IAAI,IAAI,CAACL,eAAe,CAACrO,IAAI,CAAC0O,SAAS,CAAC,CAAC;MAC9E,IAAI,CAAClO,cAAc,CAACtI,IAAI,CAAC4I,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACAmD,qBAAqB,CAACzE,OAAO,EAAE;IAC3B,OAAOnO,MAAM,CAACC,IAAI,CAACkO,OAAO,CAAC,CACtBjO,MAAM,CAACC,CAAC,IAAIgc,UAAU,CAACmB,yBAAyB,CAACpkB,OAAO,CAACiH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CACnE0P,MAAM,CAAC,CAACL,GAAG,EAAErP,CAAC,KAAK;MACpBqP,GAAG,CAACrP,CAAC,CAAC,GAAGgO,OAAO,CAAChO,CAAC,CAAC,CAACoO,YAAY;MAChC,OAAOiB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;EACA;EACAzU,EAAE,GAAG;IAAE,OAAO,IAAI,CAACsR,GAAG;EAAE;EACxB;EACAG,WAAW,GAAG;IACV,IAAI,CAAC4P,eAAe,CAACpU,aAAa,CAAC,IAAI,CAAC;IACxC;IACA,IAAI,CAACmH,cAAc,CAACpW,OAAO,CAAE6V,CAAC,IAAKA,CAAC,CAACC,WAAW,EAAE,CAAC;EACvD;EACA5G,OAAO,GAAG;IACN,OAAO,IAAI,CAACmU,eAAe,CAACnU,OAAO,CAAC,IAAI,CAAC;EAC7C;EACAE,QAAQ,GAAG;IACP,OAAO,IAAI,CAACiU,eAAe,CAACjU,QAAQ,CAAC,IAAI,CAAC;EAC9C;AACJ;AACAgU,UAAU,CAAC/rB,IAAI,GAAG,SAASmtB,kBAAkB,CAACjtB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAI6rB,UAAU,EAAElsB,MAAM,CAACyc,iBAAiB,CAACpF,cAAc,CAAC,CAAC;AAAE,CAAC;AAC5H6U,UAAU,CAACxP,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAEurB,UAAU;EAAEtP,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAEzW,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,CAAC,eAAe,EAAE,WAAW,CAAC;IAAEC,QAAQ,EAAE,UAAU;IAAEoR,QAAQ,EAAE,UAAU;IAAEC,KAAK,EAAE,OAAO;IAAEpR,SAAS,EAAE,WAAW;IAAEC,WAAW,EAAE,aAAa;IAAEE,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEG,YAAY,EAAE,cAAc;IAAEC,OAAO,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAS,CAAC;EAAE8X,OAAO,EAAE;IAAEsN,SAAS,EAAE,WAAW;IAAEC,YAAY,EAAE,cAAc;IAAEC,QAAQ,EAAE,UAAU;IAAEC,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEC,aAAa,EAAE,eAAe;IAAEC,aAAa,EAAE,eAAe;IAAEC,YAAY,EAAE,cAAc;IAAEC,aAAa,EAAE,eAAe;IAAEC,WAAW,EAAE,aAAa;IAAEC,cAAc,EAAE,gBAAgB;IAAEC,eAAe,EAAE;EAAkB,CAAC;EAAErkB,QAAQ,EAAE,CAAC1I,MAAM,CAAC+e,oBAAoB;AAAE,CAAC,CAAC;AACz0BmN,UAAU,CAACmB,yBAAyB,GAAG,CACnC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAC3F,OAAO,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EACzF,UAAU,EAAE,SAAS,CACxB;AACDnB,UAAU,CAAC1mB,cAAc,GAAG,MAAM,CAC9B;EAAE7E,IAAI,EAAE0W;AAAe,CAAC,CAC3B;AACD6U,UAAU,CAACpP,cAAc,GAAG;EACxB1W,SAAS,EAAE,CAAC;IAAEzF,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5BsI,SAAS,EAAE,CAAC;IAAE1F,IAAI,EAAE5C,KAAK;IAAE2O,IAAI,EAAE,CAAC,eAAe;EAAG,CAAC,CAAC;EACtDpG,QAAQ,EAAE,CAAC;IAAE3F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3BwI,SAAS,EAAE,CAAC;IAAE5F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5ByI,WAAW,EAAE,CAAC;IAAE7F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B2Z,QAAQ,EAAE,CAAC;IAAE/W,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3B4Z,KAAK,EAAE,CAAC;IAAEhX,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACxB2I,WAAW,EAAE,CAAC;IAAE/F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B4I,aAAa,EAAE,CAAC;IAAEhG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAChC+I,YAAY,EAAE,CAAC;IAAEnG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC/BgJ,OAAO,EAAE,CAAC;IAAEpG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC1BiJ,MAAM,EAAE,CAAC;IAAErG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACzBquB,SAAS,EAAE,CAAC;IAAEzrB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7BouB,YAAY,EAAE,CAAC;IAAE1rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAChCquB,QAAQ,EAAE,CAAC;IAAE3rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC5BsuB,WAAW,EAAE,CAAC;IAAE5rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC/BuuB,aAAa,EAAE,CAAC;IAAE7rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCwuB,aAAa,EAAE,CAAC;IAAE9rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCyuB,aAAa,EAAE,CAAC;IAAE/rB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjC0uB,YAAY,EAAE,CAAC;IAAEhsB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAChC2uB,aAAa,EAAE,CAAC;IAAEjsB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjC4uB,WAAW,EAAE,CAAC;IAAElsB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC/B6uB,cAAc,EAAE,CAAC;IAAEnsB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAClC8uB,eAAe,EAAE,CAAC;IAAEpsB,IAAI,EAAE1C;EAAO,CAAC;AACtC,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOwC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAACwrB,UAAU,EAAE,CAAC;IAChGvrB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MACCqQ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEpc,IAAI,EAAE0W;IAAe,CAAC,CAAC;EAAE,CAAC,EAAE;IAAEjR,SAAS,EAAE,CAAC;MAC9DzF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEsI,SAAS,EAAE,CAAC;MACZ1F,IAAI,EAAE5C,KAAK;MACX2O,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC,CAAC;IAAEpG,QAAQ,EAAE,CAAC;MACX3F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE2Z,QAAQ,EAAE,CAAC;MACX/W,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4Z,KAAK,EAAE,CAAC;MACRhX,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEquB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEouB,YAAY,EAAE,CAAC;MACf1rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEquB,QAAQ,EAAE,CAAC;MACX3rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEsuB,WAAW,EAAE,CAAC;MACd5rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEuuB,aAAa,EAAE,CAAC;MAChB7rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEwuB,aAAa,EAAE,CAAC;MAChB9rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEyuB,aAAa,EAAE,CAAC;MAChB/rB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE0uB,YAAY,EAAE,CAAC;MACfhsB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE2uB,aAAa,EAAE,CAAC;MAChBjsB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE4uB,WAAW,EAAE,CAAC;MACdlsB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE6uB,cAAc,EAAE,CAAC;MACjBnsB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE8uB,eAAe,EAAE,CAAC;MAClBpsB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEsI,SAAS,EAAE,CAAC;MACZ5F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEyI,WAAW,EAAE,CAAC;MACd7F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE2I,WAAW,EAAE,CAAC;MACd/F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4I,aAAa,EAAE,CAAC;MAChBhG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE+I,YAAY,EAAE,CAAC;MACfnG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEgJ,OAAO,EAAE,CAAC;MACVpG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEiJ,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwvB,eAAe,CAAC;EAClBjR,QAAQ,GAAG;IACP,IAAI,IAAI,CAAC9E,IAAI,IAAI,IAAI,EAAE;MACnB,MAAM,IAAItC,KAAK,CAAC,gCAAgC,CAAC;IACrD;EACJ;AACJ;AACAqY,eAAe,CAACptB,IAAI,GAAG,SAASqtB,uBAAuB,CAACntB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIktB,eAAe,GAAG;AAAE,CAAC;AACnGA,eAAe,CAAC7Q,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAE4sB,eAAe;EAAE3Q,SAAS,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAElD,aAAa,EAAE,eAAe;IAAEC,MAAM,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEG,OAAO,EAAE,SAAS;IAAEC,OAAO,EAAE,SAAS;IAAE1T,SAAS,EAAE,WAAW;IAAEC,WAAW,EAAE,aAAa;IAAEgR,IAAI,EAAE,MAAM;IAAE0C,QAAQ,EAAE,UAAU;IAAEC,KAAK,EAAE,OAAO;IAAEzT,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEG,YAAY,EAAE;EAAe;AAAE,CAAC,CAAC;AACtbymB,eAAe,CAACzQ,cAAc,GAAG;EAC7BnD,aAAa,EAAE,CAAC;IAAEhZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAChC6b,MAAM,EAAE,CAAC;IAAEjZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACzB8b,MAAM,EAAE,CAAC;IAAElZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACzBic,OAAO,EAAE,CAAC;IAAErZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC1Bkc,OAAO,EAAE,CAAC;IAAEtZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC1BwI,SAAS,EAAE,CAAC;IAAE5F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5ByI,WAAW,EAAE,CAAC;IAAE7F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9ByZ,IAAI,EAAE,CAAC;IAAE7W,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACvBmc,QAAQ,EAAE,CAAC;IAAEvZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3Boc,KAAK,EAAE,CAAC;IAAExZ,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACxB2I,WAAW,EAAE,CAAC;IAAE/F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B4I,aAAa,EAAE,CAAC;IAAEhG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAChC+I,YAAY,EAAE,CAAC;IAAEnG,IAAI,EAAE5C;EAAM,CAAC;AAClC,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAO0C,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAAC6sB,eAAe,EAAE,CAAC;IACrG5sB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MAAEqQ,QAAQ,EAAE;IAAiC,CAAC;EACzD,CAAC,CAAC,EAAE,IAAI,EAAE;IAAEpD,aAAa,EAAE,CAAC;MACpBhZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE6b,MAAM,EAAE,CAAC;MACTjZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE8b,MAAM,EAAE,CAAC;MACTlZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEic,OAAO,EAAE,CAAC;MACVrZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEkc,OAAO,EAAE,CAAC;MACVtZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEwI,SAAS,EAAE,CAAC;MACZ5F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEyI,WAAW,EAAE,CAAC;MACd7F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEyZ,IAAI,EAAE,CAAC;MACP7W,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEmc,QAAQ,EAAE,CAAC;MACXvZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEoc,KAAK,EAAE,CAAC;MACRxZ,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE2I,WAAW,EAAE,CAAC;MACd/F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4I,aAAa,EAAE,CAAC;MAChBhG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE+I,YAAY,EAAE,CAAC;MACfnG,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA,MAAM0vB,gBAAgB,CAAC;EACnB5sB,WAAW,GAAG;IACV;AACR;AACA;IACQ,IAAI,CAAC6sB,eAAe,GAAG,IAAI1vB,YAAY,EAAE;EAC7C;EACAigB,WAAW,CAACC,OAAO,EAAE;IACjB;IACA,IAAIA,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;MAC7C,IAAI,CAACwP,eAAe,CAAChP,IAAI,CAAC;QACtB1Y,GAAG,EAAEkY,OAAO,CAAC,UAAU,CAAC,GAAGA,OAAO,CAAC,UAAU,CAAC,CAACI,YAAY,GAAG,IAAI,CAACrY,QAAQ;QAC3EC,GAAG,EAAEgY,OAAO,CAAC,WAAW,CAAC,GAAGA,OAAO,CAAC,WAAW,CAAC,CAACI,YAAY,GAAG,IAAI,CAACnY;MACzE,CAAC,CAAC;IACN;IACA;EACJ;EACA;EACAma,oBAAoB,GAAG;IACnB,OAAO,IAAI,CAACoN,eAAe,CAACrjB,IAAI,CAAC1K,SAAS,CAAC;MAAEqG,GAAG,EAAE,IAAI,CAACC,QAAQ;MAAEC,GAAG,EAAE,IAAI,CAACC;IAAU,CAAC,CAAC,EAAE3G,GAAG,CAACuT,QAAQ,KAAK;MAAEpP,MAAM,EAAEoP;IAAS,CAAC,CAAC,CAAC,CAAC;EACrI;AACJ;AACA0a,gBAAgB,CAACttB,IAAI,GAAG,SAASwtB,wBAAwB,CAACttB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIotB,gBAAgB,GAAG;AAAE,CAAC;AACtGA,gBAAgB,CAAC/Q,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAE8sB,gBAAgB;EAAE7Q,SAAS,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAE5W,QAAQ,EAAE,UAAU;IAAEE,SAAS,EAAE;EAAY,CAAC;EAAE2Y,OAAO,EAAE;IAAE4O,eAAe,EAAE;EAAkB,CAAC;EAAEhlB,QAAQ,EAAE,CAAC1I,MAAM,CAACwjB,kBAAkB,CAAC,CAClQ;IAAEC,OAAO,EAAE1Z,iBAAiB;IAAE2Z,WAAW,EAAEllB,UAAU,CAAC,MAAMivB,gBAAgB;EAAE,CAAC,CAClF,CAAC,EAAEztB,MAAM,CAAC+e,oBAAoB;AAAE,CAAC,CAAC;AAC3C0O,gBAAgB,CAACjoB,cAAc,GAAG,MAAM,EAAE;AAC1CioB,gBAAgB,CAAC3Q,cAAc,GAAG;EAC9B7W,QAAQ,EAAE,CAAC;IAAEtF,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3BoI,SAAS,EAAE,CAAC;IAAExF,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5B2vB,eAAe,EAAE,CAAC;IAAE/sB,IAAI,EAAE1C;EAAO,CAAC;AACtC,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOwC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAAC+sB,gBAAgB,EAAE,CAAC;IACtG9sB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MACCqQ,QAAQ,EAAE,oBAAoB;MAC9B6G,SAAS,EAAE,CACP;QAAEH,OAAO,EAAE1Z,iBAAiB;QAAE2Z,WAAW,EAAEllB,UAAU,CAAC,MAAMivB,gBAAgB;MAAE,CAAC;IAEvF,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC,EAAE;IAAEC,eAAe,EAAE,CAAC;MAC5C/sB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEgI,QAAQ,EAAE,CAAC;MACXtF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEoI,SAAS,EAAE,CAAC;MACZxF,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;AAEnB,IAAI6vB,UAAU,GAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,CAAC;EACdhtB,WAAW,CAACitB,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC;AACR;AACA;IACQ,IAAI,CAAC1nB,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACoR,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;IACQ,IAAI,CAAC3Q,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAACgnB,SAAS,GAAG,IAAI/vB,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACgwB,YAAY,GAAG,IAAIhwB,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAACiwB,QAAQ,GAAG,IAAIjwB,YAAY,EAAE;IAClC;AACR;AACA;IACQ,IAAI,CAACkwB,WAAW,GAAG,IAAIlwB,YAAY,EAAE;IACrC;AACR;AACA;IACQ,IAAI,CAACmwB,aAAa,GAAG,IAAInwB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAACowB,aAAa,GAAG,IAAIpwB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAACqwB,aAAa,GAAG,IAAIrwB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAACswB,YAAY,GAAG,IAAItwB,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAACuwB,aAAa,GAAG,IAAIvwB,YAAY,EAAE;IACvC;AACR;AACA;IACQ,IAAI,CAACwwB,WAAW,GAAG,IAAIxwB,YAAY,EAAE;IACrC;AACR;AACA;IACQ,IAAI,CAACywB,cAAc,GAAG,IAAIzwB,YAAY,EAAE;IACxC;AACR;AACA;IACQ,IAAI,CAAC0wB,cAAc,GAAG,IAAI1wB,YAAY,EAAE;IACxC,IAAI,CAAC2wB,uBAAuB,GAAG,KAAK;IACpC,IAAI,CAACzP,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC9C,GAAG,GAAG,CAACwR,UAAU,EAAE,EAAEvR,QAAQ,EAAE;EACxC;EACA;EACAiL,kBAAkB,GAAG;IACjB,IAAI,IAAI,CAACsH,MAAM,CAACve,MAAM,EAAE;MACpB,IAAI,CAACue,MAAM,CAAC9lB,OAAO,CAAEqQ,KAAK,IAAK;QAC3B,MAAMwF,CAAC,GAAGxF,KAAK,CAACuU,eAAe,CAACjP,SAAS,CAAC,MAAM;UAAE,IAAI,CAACqP,gBAAgB,CAACtT,oBAAoB,CAAC,IAAI,CAAC;QAAE,CAAC,CAAC;QACtG,IAAI,CAAC0E,cAAc,CAACtI,IAAI,CAAC+H,CAAC,CAAC;MAC/B,CAAC,CAAC;IACN;IACA,IAAI,CAAC,IAAI,CAACgQ,uBAAuB,EAAE;MAC/B,IAAI,CAAC1B,KAAK,EAAE;IAChB;IACA,MAAM4B,QAAQ,GAAG,IAAI,CAACD,MAAM,CAAC1Q,OAAO,CAACO,SAAS,CAAC,MAAM,IAAI,CAACqP,gBAAgB,CAACtT,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACtG,IAAI,CAAC0E,cAAc,CAACtI,IAAI,CAACiY,QAAQ,CAAC;IAClC,IAAI,CAACf,gBAAgB,CAACtT,oBAAoB,CAAC,IAAI,CAAC;IAChD,MAAMsU,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC7Q,OAAO,CAACO,SAAS,CAAC,MAAM,IAAI,CAACqP,gBAAgB,CAACpT,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC3G,IAAI,CAACwE,cAAc,CAACtI,IAAI,CAACkY,OAAO,CAAC;EACrC;EACA7Q,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACyQ,uBAAuB,EAAE;MAC/B,IAAI,CAAC1B,KAAK,EAAE;MACZ;IACJ;IACA,MAAMnrB,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMsc,UAAU,GAAGrO,MAAM,CAACC,IAAI,CAACkO,OAAO,CAAC,CAACjO,MAAM,CAACC,CAAC,IAAI2d,WAAW,CAACmB,0BAA0B,CAAC/lB,OAAO,CAACiH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7GkO,UAAU,CAACtV,OAAO,CAACoH,CAAC,IAAIpO,OAAO,CAACoO,CAAC,CAAC,GAAGgO,OAAO,CAAChO,CAAC,CAAC,CAACoO,YAAY,CAAC;IAC7D,IAAI,CAACwP,gBAAgB,CAACnT,kBAAkB,CAAC,IAAI,EAAE7Y,OAAO,CAAC;EAC3D;EACAkW,OAAO,GAAG;IACN,OAAO,IAAI,CAAC8V,gBAAgB,CAAC9V,OAAO,CAAC,IAAI,CAAC;EAC9C;EACAiV,KAAK,GAAG;IACJ,IAAI,CAACa,gBAAgB,CAACxT,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAACqU,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACvP,kBAAkB,EAAE;EAC7B;EACAA,kBAAkB,GAAG;IACjB,MAAM8N,QAAQ,GAAG,CACb;MAAE7N,IAAI,EAAE,OAAO;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACyO,SAAS,CAACrP,IAAI,CAACY,EAAE;IAAE,CAAC,EAC3D;MAAED,IAAI,EAAE,UAAU;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC0O,YAAY,CAACtP,IAAI,CAACY,EAAE;IAAE,CAAC,EACjE;MAAED,IAAI,EAAE,MAAM;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC2O,QAAQ,CAACvP,IAAI,CAACY,EAAE;IAAE,CAAC,EACzD;MAAED,IAAI,EAAE,SAAS;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC4O,WAAW,CAACxP,IAAI,CAACY,EAAE;IAAE,CAAC,EAC/D;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC6O,aAAa,CAACzP,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC8O,aAAa,CAAC1P,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAAC+O,aAAa,CAAC3P,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,UAAU;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACgP,YAAY,CAAC5P,IAAI,CAACY,EAAE;IAAE,CAAC,EACjE;MAAED,IAAI,EAAE,WAAW;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACiP,aAAa,CAAC7P,IAAI,CAACY,EAAE;IAAE,CAAC,EACnE;MAAED,IAAI,EAAE,SAAS;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACkP,WAAW,CAAC9P,IAAI,CAACY,EAAE;IAAE,CAAC,EAC/D;MAAED,IAAI,EAAE,YAAY;MAAE/J,OAAO,EAAGgK,EAAE,IAAK,IAAI,CAACmP,cAAc,CAAC/P,IAAI,CAACY,EAAE;IAAE,CAAC,CACxE;IACD4N,QAAQ,CAACpkB,OAAO,CAAEyW,GAAG,IAAK;MACtB,MAAMC,EAAE,GAAG,IAAI,CAACsO,gBAAgB,CAAClmB,qBAAqB,CAAC2X,GAAG,CAACF,IAAI,EAAE,IAAI,CAAC,CAACZ,SAAS,CAACc,GAAG,CAACjK,OAAO,CAAC;MAC7F,IAAI,CAAC4J,cAAc,CAACtI,IAAI,CAAC4I,EAAE,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAACsO,gBAAgB,CAAC1V,yBAAyB,CAAC,IAAI,CAAC,CAAC3W,IAAI,CAAEwtB,GAAG,IAAK;MAChE,MAAMzP,EAAE,GAAGyP,GAAG,CAACxQ,SAAS,CAAC2O,SAAS,IAAI,IAAI,CAACsB,cAAc,CAAChQ,IAAI,CAAC0O,SAAS,CAAC,CAAC;MAC1E,IAAI,CAAClO,cAAc,CAACtI,IAAI,CAAC4I,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACA;EACAtG,UAAU,GAAG;IACT,IAAI,IAAI,CAAC0V,MAAM,EAAE;MACb,OAAO,IAAI,CAACA,MAAM,CAACM,OAAO,EAAE;IAChC;IACA,OAAO,EAAE;EACb;EACAzV,SAAS,GAAG;IACR,IAAI,IAAI,CAACsV,aAAa,EAAE;MACpB,OAAO,IAAI,CAACA,aAAa,CAACG,OAAO,EAAE;IACvC;IACA,OAAO,EAAE;EACb;EACA;EACApkB,EAAE,GAAG;IAAE,OAAO,IAAI,CAACsR,GAAG;EAAE;EACxB;EACAG,WAAW,GAAG;IACV,IAAI,CAACuR,gBAAgB,CAAClT,cAAc,CAAC,IAAI,CAAC;IAC1C;IACA,IAAI,CAACsE,cAAc,CAACpW,OAAO,CAAE6V,CAAC,IAAKA,CAAC,CAACC,WAAW,EAAE,CAAC;EACvD;AACJ;AACAiP,WAAW,CAAC1tB,IAAI,GAAG,SAASgvB,mBAAmB,CAAC9uB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIwtB,WAAW,EAAE7tB,MAAM,CAACyc,iBAAiB,CAAC1D,eAAe,CAAC,CAAC;AAAE,CAAC;AAChI8U,WAAW,CAACnR,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAEktB,WAAW;EAAEjR,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC;EAAEsN,cAAc,EAAE,SAASkF,0BAA0B,CAACpN,EAAE,EAAEC,GAAG,EAAEmI,QAAQ,EAAE;IAAE,IAAIpI,EAAE,GAAG,CAAC,EAAE;MAC3LhiB,MAAM,CAACqqB,cAAc,CAACD,QAAQ,EAAEqD,gBAAgB,EAAE,CAAC,CAAC;MACpDztB,MAAM,CAACqqB,cAAc,CAACD,QAAQ,EAAEmD,eAAe,EAAE,CAAC,CAAC;IACvD;IAAE,IAAIvL,EAAE,GAAG,CAAC,EAAE;MACV,IAAIsI,EAAE;MACNtqB,MAAM,CAACuqB,cAAc,CAACD,EAAE,GAAGtqB,MAAM,CAACwqB,WAAW,EAAE,CAAC,KAAKvI,GAAG,CAAC2M,MAAM,GAAGtE,EAAE,CAAC;MACrEtqB,MAAM,CAACuqB,cAAc,CAACD,EAAE,GAAGtqB,MAAM,CAACwqB,WAAW,EAAE,CAAC,KAAKvI,GAAG,CAAC8M,aAAa,GAAGzE,EAAE,CAAC;IAChF;EAAE,CAAC;EAAEzN,MAAM,EAAE;IAAEzW,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,CAAC,mBAAmB,EAAE,WAAW,CAAC;IAAEC,QAAQ,EAAE,UAAU;IAAEoR,QAAQ,EAAE,UAAU;IAAE3Q,OAAO,EAAE,SAAS;IAAEL,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEG,YAAY,EAAE,cAAc;IAAEE,MAAM,EAAE;EAAS,CAAC;EAAE8X,OAAO,EAAE;IAAEiP,SAAS,EAAE,WAAW;IAAEC,YAAY,EAAE,cAAc;IAAEC,QAAQ,EAAE,UAAU;IAAEC,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEC,aAAa,EAAE,eAAe;IAAEC,aAAa,EAAE,eAAe;IAAEC,YAAY,EAAE,cAAc;IAAEC,aAAa,EAAE,eAAe;IAAEC,WAAW,EAAE,aAAa;IAAEC,cAAc,EAAE,gBAAgB;IAAEC,cAAc,EAAE;EAAiB,CAAC;EAAEhmB,QAAQ,EAAE,CAAC1I,MAAM,CAAC+e,oBAAoB;AAAE,CAAC,CAAC;AACrqB8O,WAAW,CAACmB,0BAA0B,GAAG,CACrC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAC9F,QAAQ,CACX;AACDnB,WAAW,CAACroB,cAAc,GAAG,MAAM,CAC/B;EAAE7E,IAAI,EAAEoY;AAAgB,CAAC,CAC5B;AACD8U,WAAW,CAAC/Q,cAAc,GAAG;EACzB1W,SAAS,EAAE,CAAC;IAAEzF,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5BsI,SAAS,EAAE,CAAC;IAAE1F,IAAI,EAAE5C,KAAK;IAAE2O,IAAI,EAAE,CAAC,mBAAmB;EAAG,CAAC,CAAC;EAC1DpG,QAAQ,EAAE,CAAC;IAAE3F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3B2Z,QAAQ,EAAE,CAAC;IAAE/W,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3B2I,WAAW,EAAE,CAAC;IAAE/F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B4I,aAAa,EAAE,CAAC;IAAEhG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAChC+I,YAAY,EAAE,CAAC;IAAEnG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC/BgJ,OAAO,EAAE,CAAC;IAAEpG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC1BiJ,MAAM,EAAE,CAAC;IAAErG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACzBgwB,SAAS,EAAE,CAAC;IAAEptB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7B+vB,YAAY,EAAE,CAAC;IAAErtB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAChCgwB,QAAQ,EAAE,CAAC;IAAEttB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC5BiwB,WAAW,EAAE,CAAC;IAAEvtB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC/BkwB,aAAa,EAAE,CAAC;IAAExtB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCmwB,aAAa,EAAE,CAAC;IAAEztB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCowB,aAAa,EAAE,CAAC;IAAE1tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCqwB,YAAY,EAAE,CAAC;IAAE3tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAChCswB,aAAa,EAAE,CAAC;IAAE5tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACjCuwB,WAAW,EAAE,CAAC;IAAE7tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC/BwwB,cAAc,EAAE,CAAC;IAAE9tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAClCywB,cAAc,EAAE,CAAC;IAAE/tB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAClC2wB,MAAM,EAAE,CAAC;IAAEjuB,IAAI,EAAErC,eAAe;IAAEoO,IAAI,EAAE,CAAC+gB,gBAAgB;EAAG,CAAC,CAAC;EAC9DsB,aAAa,EAAE,CAAC;IAAEpuB,IAAI,EAAErC,eAAe;IAAEoO,IAAI,EAAE,CAAC6gB,eAAe;EAAG,CAAC;AACvE,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAO9sB,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAACmtB,WAAW,EAAE,CAAC;IACjGltB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MACCqQ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEpc,IAAI,EAAEoY;IAAgB,CAAC,CAAC;EAAE,CAAC,EAAE;IAAE3S,SAAS,EAAE,CAAC;MAC/DzF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEsI,SAAS,EAAE,CAAC;MACZ1F,IAAI,EAAE5C,KAAK;MACX2O,IAAI,EAAE,CAAC,mBAAmB;IAC9B,CAAC,CAAC;IAAEpG,QAAQ,EAAE,CAAC;MACX3F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE2Z,QAAQ,EAAE,CAAC;MACX/W,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEgJ,OAAO,EAAE,CAAC;MACVpG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEgwB,SAAS,EAAE,CAAC;MACZptB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE+vB,YAAY,EAAE,CAAC;MACfrtB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEgwB,QAAQ,EAAE,CAAC;MACXttB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEiwB,WAAW,EAAE,CAAC;MACdvtB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEkwB,aAAa,EAAE,CAAC;MAChBxtB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEmwB,aAAa,EAAE,CAAC;MAChBztB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEowB,aAAa,EAAE,CAAC;MAChB1tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEqwB,YAAY,EAAE,CAAC;MACf3tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEswB,aAAa,EAAE,CAAC;MAChB5tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEuwB,WAAW,EAAE,CAAC;MACd7tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEwwB,cAAc,EAAE,CAAC;MACjB9tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEywB,cAAc,EAAE,CAAC;MACjB/tB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEyI,WAAW,EAAE,CAAC;MACd/F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4I,aAAa,EAAE,CAAC;MAChBhG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE+I,YAAY,EAAE,CAAC;MACfnG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEiJ,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE6wB,MAAM,EAAE,CAAC;MACTjuB,IAAI,EAAErC,eAAe;MACrBoO,IAAI,EAAE,CAAC+gB,gBAAgB;IAC3B,CAAC,CAAC;IAAEsB,aAAa,EAAE,CAAC;MAChBpuB,IAAI,EAAErC,eAAe;MACrBoO,IAAI,EAAE,CAAC6gB,eAAe;IAC1B,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;AAEnB,MAAM8B,YAAY,CAAC;EACfxuB,WAAW,CAACqb,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAAC9V,SAAS,GAAG,IAAI;IACrB;AACR;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;IACQ,IAAI,CAACM,cAAc,GAAG,QAAQ;IAC9B;AACR;AACA;IACQ,IAAI,CAACE,YAAY,GAAG,CAAC;IACrB;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAACigB,YAAY,GAAG,IAAIhpB,YAAY,EAAE;IACtC;AACR;AACA;IACQ,IAAI,CAACsxB,cAAc,GAAG,IAAItxB,YAAY,EAAE;IACxC;AACR;AACA;IACQ,IAAI,CAACuxB,iBAAiB,GAAG,IAAIvxB,YAAY,EAAE;IAC3C;AACR;AACA;IACQ;IACA,IAAI,CAACof,IAAI,GAAG,IAAIpf,YAAY,EAAE;IAC9B;AACR;AACA;IACQ,IAAI,CAACqf,OAAO,GAAG,IAAIrf,YAAY,EAAE;IACjC;AACR;AACA;IACQ,IAAI,CAACsf,SAAS,GAAG,IAAItf,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACuf,SAAS,GAAG,IAAIvf,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACwf,SAAS,GAAG,IAAIxf,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACyf,QAAQ,GAAG,IAAIzf,YAAY,EAAE;IAClC;AACR;AACA;IACQ,IAAI,CAAC0f,SAAS,GAAG,IAAI1f,YAAY,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAAC2f,OAAO,GAAG,IAAI3f,YAAY,EAAE;IACjC;AACR;AACA;IACQ,IAAI,CAAC6f,UAAU,GAAG,IAAI7f,YAAY,EAAE;IACpC,IAAI,CAACwxB,wBAAwB,GAAG,KAAK;IACrC,IAAI,CAACzR,mBAAmB,GAAG,EAAE;EACjC;EACA;EACAzB,QAAQ,GAAG;IACP,IAAI,CAACJ,QAAQ,CAACd,YAAY,CAAC,IAAI,CAAC;IAChC,IAAI,CAACoU,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACxR,uBAAuB,EAAE;EAClC;EACA;EACAC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACsR,wBAAwB,EAAE;MAChC;IACJ;IACA;IACA,IAAItR,OAAO,CAAC,OAAO,CAAC,IAChBA,OAAO,CAAC,MAAM,CAAC,IACfA,OAAO,CAAC,OAAO,CAAC,IAChBA,OAAO,CAAC,MAAM,CAAC,EAAE;MACjB,IAAI,CAAChC,QAAQ,CAACL,SAAS,CAAC,IAAI,CAAC;IACjC;IACA,IAAIqC,OAAO,CAAC,UAAU,CAAC,EAAE;MACrB,IAAI,CAAChC,QAAQ,CAAC3U,WAAW,CAAC,IAAI,CAAC;IACnC;IACA,IAAI2W,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAAChC,QAAQ,CAAC1U,YAAY,CAAC,IAAI,CAAC;IACpC;IACA,IAAI0W,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAAChC,QAAQ,CAACzU,UAAU,CAAC,IAAI,CAAC;IAClC;IACA;IACA,IAAI,CAACgoB,8BAA8B,CAACvR,OAAO,CAAC;EAChD;EACAuR,8BAA8B,CAACvR,OAAO,EAAE;IACpC,MAAMpc,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMsc,UAAU,GAAGrO,MAAM,CAACC,IAAI,CAACkO,OAAO,CAAC,CAACjO,MAAM,CAACC,CAAC,IAAImf,YAAY,CAAChR,WAAW,CAACpV,OAAO,CAACiH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/FkO,UAAU,CAACtV,OAAO,CAACoH,CAAC,IAAI;MACpBpO,OAAO,CAACoO,CAAC,CAAC,GAAGgO,OAAO,CAAChO,CAAC,CAAC,CAACoO,YAAY;IACxC,CAAC,CAAC;IACF,IAAIF,UAAU,CAAC/N,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAAC6L,QAAQ,CAACla,UAAU,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC3C;EACJ;EACAkc,uBAAuB,GAAG;IACtB,MAAMO,MAAM,GAAG,IAAI3c,GAAG,EAAE;IACxB2c,MAAM,CAACzY,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACkhB,YAAY,CAAC;IAC/CzI,MAAM,CAACzY,GAAG,CAAC,OAAO,EAAE,IAAI,CAACwpB,cAAc,CAAC;IACxC/Q,MAAM,CAACzY,GAAG,CAAC,UAAU,EAAE,IAAI,CAACypB,iBAAiB,CAAC;IAC9ChR,MAAM,CAACzY,GAAG,CAAC,MAAM,EAAE,IAAI,CAACsX,IAAI,CAAC;IAC7BmB,MAAM,CAACzY,GAAG,CAAC,SAAS,EAAE,IAAI,CAACuX,OAAO,CAAC;IACnCkB,MAAM,CAACzY,GAAG,CAAC,WAAW,EAAE,IAAI,CAACwX,SAAS,CAAC;IACvCiB,MAAM,CAACzY,GAAG,CAAC,WAAW,EAAE,IAAI,CAACyX,SAAS,CAAC;IACvCgB,MAAM,CAACzY,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC0X,SAAS,CAAC;IACvCe,MAAM,CAACzY,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC2X,QAAQ,CAAC;IACrCc,MAAM,CAACzY,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC4X,SAAS,CAAC;IACvCa,MAAM,CAACzY,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC6X,OAAO,CAAC;IACnCY,MAAM,CAACzY,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC+X,UAAU,CAAC;IACzCU,MAAM,CAACzV,OAAO,CAAC,CAAC0V,YAAY,EAAEza,SAAS,KAAK;MACxC,IAAI,CAACga,mBAAmB,CAACnH,IAAI,CAAC,IAAI,CAACsF,QAAQ,CACtCtU,qBAAqB,CAAC7D,SAAS,EAAE,IAAI,CAAC,CACtC0a,SAAS,CAACzT,KAAK,IAAI;QACpB,QAAQjH,SAAS;UACb,KAAK,gBAAgB;YACjB,IAAI,CAACmY,QAAQ,CAACzX,SAAS,CAAC,IAAI,CAAC,CAAChD,IAAI,CAACgJ,MAAM,IAAI+T,YAAY,CAACE,IAAI,CAAC;cAC3DpD,KAAK,EAAE7Q,MAAM,CAACilB,YAAY,EAAE,CAAC1pB,GAAG,EAAE;cAClCuV,IAAI,EAAE9Q,MAAM,CAACilB,YAAY,EAAE,CAACxpB,GAAG,EAAE;cACjCsV,KAAK,EAAE/Q,MAAM,CAACklB,YAAY,EAAE,CAAC3pB,GAAG,EAAE;cAClCyV,IAAI,EAAEhR,MAAM,CAACklB,YAAY,EAAE,CAACzpB,GAAG;YACnC,CAAC,CAAC,CAAC;YACH;UACJ;YACIsY,YAAY,CAACE,IAAI,CAAC1T,KAAK,CAAC;QAAC;MAErC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;EACA;EACAuR,WAAW,GAAG;IACV,IAAI,CAACwB,mBAAmB,CAACjV,OAAO,CAAC6V,CAAC,IAAIA,CAAC,CAACC,WAAW,EAAE,CAAC;IACtD,IAAI,CAACb,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAAC7B,QAAQ,CAACR,eAAe,CAAC,IAAI,CAAC;EACvC;EACA;AACJ;AACA;EACIjX,SAAS,GAAG;IACR,OAAO,IAAI,CAACyX,QAAQ,CAACzX,SAAS,CAAC,IAAI,CAAC;EACxC;AACJ;AACA4qB,YAAY,CAAClvB,IAAI,GAAG,SAASyvB,oBAAoB,CAACvvB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIgvB,YAAY,EAAErvB,MAAM,CAACyc,iBAAiB,CAACvB,gBAAgB,CAAC,CAAC;AAAE,CAAC;AACpImU,YAAY,CAAC3S,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAE0uB,YAAY;EAAEzS,SAAS,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAEzW,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,CAAC,oBAAoB,EAAE,WAAW,CAAC;IAAEC,QAAQ,EAAE,UAAU;IAAEM,cAAc,EAAE,gBAAgB;IAAEE,YAAY,EAAE,cAAc;IAAEC,OAAO,EAAE,SAAS;IAAEuU,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE,MAAM;IAAElV,SAAS,EAAE,WAAW;IAAEC,WAAW,EAAE,aAAa;IAAEE,WAAW,EAAE,aAAa;IAAEC,aAAa,EAAE,eAAe;IAAEK,MAAM,EAAE;EAAS,CAAC;EAAE8X,OAAO,EAAE;IAAEkI,YAAY,EAAE,cAAc;IAAEsI,cAAc,EAAE,gBAAgB;IAAEC,iBAAiB,EAAE,mBAAmB;IAAEnS,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE,SAAS;IAAEC,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,WAAW;IAAEC,QAAQ,EAAE,UAAU;IAAEC,SAAS,EAAE,WAAW;IAAEC,OAAO,EAAE,SAAS;IAAEE,UAAU,EAAE;EAAa,CAAC;EAAEnV,QAAQ,EAAE,CAAC1I,MAAM,CAAC+e,oBAAoB;AAAE,CAAC,CAAC;AACl1BsQ,YAAY,CAAChR,WAAW,GAAG,CACvB,WAAW,EACX,aAAa,EACb,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,QAAQ,EACR,WAAW,CACd;AACDgR,YAAY,CAAC7pB,cAAc,GAAG,MAAM,CAChC;EAAE7E,IAAI,EAAEua;AAAiB,CAAC,CAC7B;AACDmU,YAAY,CAACvS,cAAc,GAAG;EAC1BxB,KAAK,EAAE,CAAC;IAAE3a,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACxBwd,IAAI,EAAE,CAAC;IAAE5a,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACvByd,KAAK,EAAE,CAAC;IAAE7a,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACxB0d,IAAI,EAAE,CAAC;IAAE9a,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACvBqI,SAAS,EAAE,CAAC;IAAEzF,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5BsI,SAAS,EAAE,CAAC;IAAE1F,IAAI,EAAE5C,KAAK;IAAE2O,IAAI,EAAE,CAAC,oBAAoB;EAAG,CAAC,CAAC;EAC3DpG,QAAQ,EAAE,CAAC;IAAE3F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC3BwI,SAAS,EAAE,CAAC;IAAE5F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC5ByI,WAAW,EAAE,CAAC;IAAE7F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B2I,WAAW,EAAE,CAAC;IAAE/F,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC9B4I,aAAa,EAAE,CAAC;IAAEhG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAChC6I,cAAc,EAAE,CAAC;IAAEjG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACjC+I,YAAY,EAAE,CAAC;IAAEnG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC/BgJ,OAAO,EAAE,CAAC;IAAEpG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EAC1BiJ,MAAM,EAAE,CAAC;IAAErG,IAAI,EAAE5C;EAAM,CAAC,CAAC;EACzBipB,YAAY,EAAE,CAAC;IAAErmB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAChCqxB,cAAc,EAAE,CAAC;IAAE3uB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAClCsxB,iBAAiB,EAAE,CAAC;IAAE5uB,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACrCmf,IAAI,EAAE,CAAC;IAAEzc,IAAI,EAAE1C;EAAO,CAAC,CAAC;EACxBof,OAAO,EAAE,CAAC;IAAE1c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC3Bqf,SAAS,EAAE,CAAC;IAAE3c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7Bsf,SAAS,EAAE,CAAC;IAAE5c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7Buf,SAAS,EAAE,CAAC;IAAE7c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7Bwf,QAAQ,EAAE,CAAC;IAAE9c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC5Byf,SAAS,EAAE,CAAC;IAAE/c,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC7B0f,OAAO,EAAE,CAAC;IAAEhd,IAAI,EAAE1C;EAAO,CAAC,CAAC;EAC3B4f,UAAU,EAAE,CAAC;IAAEld,IAAI,EAAE1C;EAAO,CAAC;AACjC,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOwC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAAC2uB,YAAY,EAAE,CAAC;IAClG1uB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MACCqQ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEpc,IAAI,EAAEua;IAAiB,CAAC,CAAC;EAAE,CAAC,EAAE;IAAE9U,SAAS,EAAE,CAAC;MAChEzF,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEsI,SAAS,EAAE,CAAC;MACZ1F,IAAI,EAAE5C,KAAK;MACX2O,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEpG,QAAQ,EAAE,CAAC;MACX3F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE6I,cAAc,EAAE,CAAC;MACjBjG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE+I,YAAY,EAAE,CAAC;MACfnG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEgJ,OAAO,EAAE,CAAC;MACVpG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEipB,YAAY,EAAE,CAAC;MACfrmB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEqxB,cAAc,EAAE,CAAC;MACjB3uB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEsxB,iBAAiB,EAAE,CAAC;MACpB5uB,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEmf,IAAI,EAAE,CAAC;MACPzc,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEof,OAAO,EAAE,CAAC;MACV1c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEqf,SAAS,EAAE,CAAC;MACZ3c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEsf,SAAS,EAAE,CAAC;MACZ5c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEuf,SAAS,EAAE,CAAC;MACZ7c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEwf,QAAQ,EAAE,CAAC;MACX9c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEyf,SAAS,EAAE,CAAC;MACZ/c,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE0f,OAAO,EAAE,CAAC;MACVhd,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAE4f,UAAU,EAAE,CAAC;MACbld,IAAI,EAAE1C;IACV,CAAC,CAAC;IAAEqd,KAAK,EAAE,CAAC;MACR3a,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEwd,IAAI,EAAE,CAAC;MACP5a,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEyd,KAAK,EAAE,CAAC;MACR7a,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE0d,IAAI,EAAE,CAAC;MACP9a,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEwI,SAAS,EAAE,CAAC;MACZ5F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEyI,WAAW,EAAE,CAAC;MACd7F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE2I,WAAW,EAAE,CAAC;MACd/F,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAE4I,aAAa,EAAE,CAAC;MAChBhG,IAAI,EAAE5C;IACV,CAAC,CAAC;IAAEiJ,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;AAEnB,IAAI8xB,SAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAClBjvB,WAAW,CAACqb,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,GAAG,GAAG,CAACyT,SAAS,EAAE,EAAExT,QAAQ,EAAE;IACnC;AACR;AACA;IACQ,IAAI,CAACtV,OAAO,GAAG,IAAI;EACvB;EACAuV,QAAQ,GAAG;IACP,IAAI,IAAI,CAACH,eAAe,EAAE;MACtB;IACJ;IACA,IAAI,CAACD,QAAQ,CAACtH,eAAe,CAAC,IAAI,CAAC;IACnC,IAAI,CAACuH,eAAe,GAAG,IAAI;EAC/B;EACA;EACArR,EAAE,GAAG;IAAE,OAAO,IAAI,CAACsR,GAAG;EAAE;EACxB;EACAC,QAAQ,GAAG;IAAE,OAAQ,mBAAkB,IAAI,CAACD,GAAG,CAACC,QAAQ,EAAG,EAAC;EAAE;EAC9D;EACAE,WAAW,GAAG;IACV,IAAI,CAACL,QAAQ,CAACpH,WAAW,CAAC,IAAI,CAAC;EACnC;AACJ;AACAgb,eAAe,CAAC3vB,IAAI,GAAG,SAAS4vB,uBAAuB,CAAC1vB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIyvB,eAAe,EAAE9vB,MAAM,CAACyc,iBAAiB,CAAC9H,YAAY,CAAC,CAAC;AAAE,CAAC;AACzImb,eAAe,CAACpT,IAAI,GAAG,aAAc1c,MAAM,CAAC2c,iBAAiB,CAAC;EAAEhc,IAAI,EAAEmvB,eAAe;EAAElT,SAAS,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAE9V,OAAO,EAAE;EAAU;AAAE,CAAC,CAAC;AAC5J+oB,eAAe,CAACtqB,cAAc,GAAG,MAAM,CACnC;EAAE7E,IAAI,EAAEgU;AAAa,CAAC,CACzB;AACDmb,eAAe,CAAChT,cAAc,GAAG;EAC7B/V,OAAO,EAAE,CAAC;IAAEpG,IAAI,EAAE5C;EAAM,CAAC;AAC7B,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAO0C,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAACovB,eAAe,EAAE,CAAC;IACrGnvB,IAAI,EAAE7C,SAAS;IACf4O,IAAI,EAAE,CAAC;MACCqQ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEpc,IAAI,EAAEgU;IAAa,CAAC,CAAC;EAAE,CAAC,EAAE;IAAE5N,OAAO,EAAE,CAAC;MAC1DpG,IAAI,EAAE5C;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA,SAASiyB,cAAc,GAAG;EACtB,OAAO,CACH/T,iBAAiB,EACjBe,SAAS,EACTiC,YAAY,EACZc,YAAY,EACZiD,oBAAoB,EACpBpC,aAAa,EACb4B,WAAW,EACXuD,MAAM,EACNlC,iBAAiB,EACjB+G,SAAS,EACTtG,aAAa,EACb4H,UAAU,EACV2B,WAAW,EACXN,eAAe,EACfE,gBAAgB,EAChB4B,YAAY,EACZ1K,gBAAgB,EAChBK,eAAe,EACfI,oBAAoB,EACpB0K,eAAe,EACfrK,cAAc,CACjB;AACL;AACA;AACA;AACA;AACA;AACA,MAAMwK,aAAa,CAAC;EAChB;AACJ;AACA;EACI,OAAOC,OAAO,CAACC,uBAAuB,EAAE;IACpC,OAAO;MACHC,QAAQ,EAAEH,aAAa;MACvBrM,SAAS,EAAE,CACP,GAAG3W,yBAAyB,EAAE;QAAEwW,OAAO,EAAEvjB,aAAa;QAAEmwB,QAAQ,EAAEjjB;MAAkB,CAAC,EACrF;QAAEqW,OAAO,EAAEtW,oBAAoB;QAAEmjB,QAAQ,EAAEH;MAAwB,CAAC;IAE5E,CAAC;EACL;AACJ;AACAF,aAAa,CAAC9vB,IAAI,GAAG,SAASowB,qBAAqB,CAAClwB,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAI4vB,aAAa,GAAG;AAAE,CAAC;AAC7FA,aAAa,CAACO,IAAI,GAAG,aAAcxwB,MAAM,CAACywB,gBAAgB,CAAC;EAAE9vB,IAAI,EAAEsvB;AAAc,CAAC,CAAC;AACnFA,aAAa,CAACS,IAAI,GAAG,aAAc1wB,MAAM,CAAC2wB,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,YAAY;EAAE,CAAC,OAAOlwB,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKT,MAAM,CAACU,iBAAiB,CAACuvB,aAAa,EAAE,CAAC;IACnGtvB,IAAI,EAAElC,QAAQ;IACdiO,IAAI,EAAE,CAAC;MAAEkkB,YAAY,EAAEZ,cAAc,EAAE;MAAEa,OAAO,EAAEb,cAAc;IAAG,CAAC;EACxE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC,GAAG;AACzB,CAAC,YAAY;EAAE,CAAC,OAAOc,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK9wB,MAAM,CAAC+wB,kBAAkB,CAACd,aAAa,EAAE;IAAEW,YAAY,EAAE,CAAC3U,iBAAiB,EAAEe,SAAS,EAAEiC,YAAY,EAAEc,YAAY,EAAEiD,oBAAoB,EAAEpC,aAAa,EAAE4B,WAAW,EAAEuD,MAAM,EAAElC,iBAAiB,EAAE+G,SAAS,EAAEtG,aAAa,EAAE4H,UAAU,EAAE2B,WAAW,EAAEN,eAAe,EAAEE,gBAAgB,EAAE4B,YAAY,EAAE1K,gBAAgB,EAAEK,eAAe,EAAEI,oBAAoB,EAAE0K,eAAe,EAAErK,cAAc,CAAC;IAAEoL,OAAO,EAAE,CAAC5U,iBAAiB,EAAEe,SAAS,EAAEiC,YAAY,EAAEc,YAAY,EAAEiD,oBAAoB,EAAEpC,aAAa,EAAE4B,WAAW,EAAEuD,MAAM,EAAElC,iBAAiB,EAAE+G,SAAS,EAAEtG,aAAa,EAAE4H,UAAU,EAAE2B,WAAW,EAAEN,eAAe,EAAEE,gBAAgB,EAAE4B,YAAY,EAAE1K,gBAAgB,EAAEK,eAAe,EAAEI,oBAAoB,EAAE0K,eAAe,EAAErK,cAAc;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEzxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASxJ,iBAAiB,EAAEe,SAAS,EAAEiT,aAAa,EAAEhR,YAAY,EAAEc,YAAY,EAAEiD,oBAAoB,EAAExX,WAAW,EAAEoV,aAAa,EAAE4B,WAAW,EAAEuD,MAAM,EAAElC,iBAAiB,EAAE+G,SAAS,EAAEtG,aAAa,EAAE4H,UAAU,EAAE2B,WAAW,EAAEN,eAAe,EAAEE,gBAAgB,EAAE4B,YAAY,EAAE1K,gBAAgB,EAAEK,eAAe,EAAEI,oBAAoB,EAAE0K,eAAe,EAAErK,cAAc,EAAEhgB,aAAa,EAAEwC,gBAAgB,EAAE8B,iBAAiB,EAAEnJ,oBAAoB,EAAEsM,wBAAwB,EAAEiG,iBAAiB,EAAEe,eAAe,EAAE/G,oBAAoB,EAAEwH,YAAY,EAAEvH,iBAAiB,EAAElN,aAAa,EAAE2Q,aAAa,EAAEoE,iBAAiB,EAAEoC,cAAc,EAAE0B,eAAe,EAAEmC,gBAAgB,EAAE8U,cAAc,EAAEhmB,gBAAgB,IAAIgnB,EAAE,EAAElO,aAAa,IAAImO,EAAE,EAAEtkB,SAAS,IAAIukB,EAAE,EAAEpkB,WAAW,IAAIqkB,EAAE,EAAElkB,yBAAyB,IAAImkB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}