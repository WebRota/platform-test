{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.message = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n  }\n  // Método para navegar para a página de cadastro\n  goToCadastroPage() {\n    this.router.navigate(['/user-registration']); // Substitua 'cadastro' pela rota real da página de cadastro\n  }\n\n  login() {\n    this.authService.login(this.email, this.password).subscribe(response => {\n      if (response.token) {\n        this.message = 'Login bem-sucedido';\n        this.router.navigate(['/Map']);\n      } else {\n        this.message = 'Login falhou';\n      }\n    }, error => {\n      //console.error('Erro na solicitação de login:', error);\n      this.message = 'Usuário ou senha inválidos';\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"registration-form\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"border\", \"5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"error-message\", 2, \"color\", \"red\", \"font-weight\", \"bold\", \"font-size\", \"16px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"Logar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n        return ctx.goToCadastroPage();\n      });\n      i0.ɵɵtext(16, \"Cadastrar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"p\", 9);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAF5D,YAAO,GAAW,EAAE,CAAC,CAAC;EAEkD;EACxE;EACAC,gBAAgB;IACd,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAChD;;EACAC,KAAK;IACH,IAAI,CAACJ,WAAW,CAACI,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CACzDC,QAAQ,IAAG;MACT,IAAIA,QAAQ,CAACC,KAAK,EAAE;QAClB,IAAI,CAACC,OAAO,GAAG,oBAAoB;QACnC,IAAI,CAACT,MAAM,CAACE,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;OAC/B,MAAM;QACL,IAAI,CAACO,OAAO,GAAG,cAAc;;IAEjC,CAAC,EACDC,KAAK,IAAG;MACN;MACA,IAAI,CAACD,OAAO,GAAG,4BAA4B;IAC7C,CAAC,CACF;EACH;;AAzBWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR3BC,8BAA+B;MACzBA,qBAAK;MAAAA,iBAAK;MACdA,+BAA2B;MAArBA;QAAA,OAAYC,WAAO;MAAA,EAAC;MAExBD,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAA8F;MAA/DA;QAAA;MAAA,EAAmB;MAAlDA,iBAA8F;MAGhGA,8BAAwB;MACAA,uBAAM;MAAAA,iBAAQ;MACpCA,iCAA0G;MAArEA;QAAA;MAAA,EAAsB;MAA3DA,iBAA0G;MAE5GA,sBAAM;MACNA,kCAAmE;MAAAA,sBAAK;MAAAA,iBAAS;MACjFA,kCAA6E;MAA7BA;QAAA,OAASC,sBAAkB;MAAA,EAAC;MAACD,0BAAS;MAAAA,iBAAS;MAInGA,6BAAiF;MAAAA,aAAW;MAAAA,iBAAI;;;MAb3DA,eAAmB;MAAnBA,mCAAmB;MAKbA,eAAsB;MAAtBA,sCAAsB;MAQgBA,eAAW;MAAXA,iCAAW","names":["LoginComponent","constructor","authService","router","goToCadastroPage","navigate","login","email","password","subscribe","response","token","message","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  email!: string;\n  password!: string;\n  message: string = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n\n  constructor(private authService: AuthService, private router: Router) { }\n  // Método para navegar para a página de cadastro\r\n  goToCadastroPage() {\r\n    this.router.navigate(['/user-registration']); // Substitua 'cadastro' pela rota real da página de cadastro\r\n  }\n  login() {\n    this.authService.login(this.email, this.password).subscribe(\n      response => {\n        if (response.token) {\n          this.message = 'Login bem-sucedido';\n          this.router.navigate(['/Map']);\n        } else {\n          this.message = 'Login falhou';\n        }\n      },\n      error => {\n        //console.error('Erro na solicitação de login:', error);\n        this.message = 'Usuário ou senha inválidos';\n      }\n    );\n  }\n\n}\n","<div class=\"registration-form\">\r\n  <h2>Login</h2>\r\n  <form (ngSubmit)=\"login()\">\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" required>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Senha:</label>\r\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" required>\r\n    </div>\r\n    <br />\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"border: 5px;\">Logar</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToCadastroPage()\">Cadastrar</button>\r\n\r\n  </form>\r\n</div>\r\n<p class=\"error-message\" style=\"color: red; font-weight: bold; font-size: 16px;\">{{message}}</p>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}