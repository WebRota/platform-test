{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nexport class LoginComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      const emailControl = this.loginForm.get('email');\n      const passwordControl = this.loginForm.get('password');\n      if (emailControl && passwordControl) {\n        const email = emailControl.value;\n        const password = passwordControl.value;\n        this.authService.login(email, password).subscribe(response => {\n          if (response && response.token) {\n            this.message = 'Login bem-sucedido';\n          } else {\n            this.message = 'Login falhou';\n          }\n        }, error => {\n          console.error('Erro na solicitação de login:', error);\n          this.message = 'Erro na solicitação de login';\n        });\n      }\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"registration-form\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newUser.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.newUser.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Cadastrar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.password);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  encapsulation: 2\n});\nclass User {\n  constructor() {\n    this.name = '';\n    this.email = '';\n    this.password = '';\n    this.role = '';\n    this.phone = '';\n    this.cpf = '';\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAC/D,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,KAAK;IACH,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,MAAMC,YAAY,GAAG,IAAI,CAACP,SAAS,CAACQ,GAAG,CAAC,OAAO,CAAC;MAChD,MAAMC,eAAe,GAAG,IAAI,CAACT,SAAS,CAACQ,GAAG,CAAC,UAAU,CAAC;MAEtD,IAAID,YAAY,IAAIE,eAAe,EAAE;QACnC,MAAMP,KAAK,GAAGK,YAAY,CAACG,KAAK;QAChC,MAAMN,QAAQ,GAAGK,eAAe,CAACC,KAAK;QAEtC,IAAI,CAACX,WAAW,CAACM,KAAK,CAACH,KAAK,EAAEE,QAAQ,CAAC,CAACO,SAAS,CAC9CC,QAAa,IAAI;UAChB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,KAAK,EAAE;YAC9B,IAAI,CAACC,OAAO,GAAG,oBAAoB;WACpC,MAAM;YACL,IAAI,CAACA,OAAO,GAAG,cAAc;;QAEjC,CAAC,EACAC,KAAU,IAAI;UACbC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,IAAI,CAACD,OAAO,GAAG,8BAA8B;QAC/C,CAAC,CACF;;;EAGP;;AAnCWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAA+B;MACzBA,qBAAK;MAAAA,iBAAK;MACdA,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAE3BD,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAAsG;MAAvEA;QAAA;MAAA,EAA2B;MAA1DA,iBAAsG;MAGxGA,8BAAwB;MACAA,uBAAM;MAAAA,iBAAQ;MACpCA,iCAAkH;MAA7EA;QAAA;MAAA,EAA8B;MAAnEA,iBAAkH;MAEpHA,kCAA8C;MAAAA,0BAAS;MAAAA,iBAAS;;;MAP/BA,eAA2B;MAA3BA,2CAA2B;MAKrBA,eAA8B;MAA9BA,8CAA8B;;;;;;ADsCzE,MAAME,IAAI;EAAV3B;IACE,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,QAAG,GAAW,EAAE;EAClB","names":["Validators","LoginComponent","constructor","formBuilder","authService","loginForm","group","email","required","password","login","valid","emailControl","get","passwordControl","value","subscribe","response","token","message","error","console","selectors","decls","vars","consts","template","i0","ctx","User"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service'; // Importe o serviço AuthService aqui\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  message: string | undefined;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      const emailControl = this.loginForm.get('email');\n      const passwordControl = this.loginForm.get('password');\n\n      if (emailControl && passwordControl) {\n        const email = emailControl.value;\n        const password = passwordControl.value;\n\n        this.authService.login(email, password).subscribe(\n          (response: any) => {\n            if (response && response.token) {\n              this.message = 'Login bem-sucedido';\n            } else {\n              this.message = 'Login falhou';\n            }\n          },\n          (error: any) => {\n            console.error('Erro na solicitação de login:', error);\n            this.message = 'Erro na solicitação de login';\n          }\n        );\n      }\n    }\n  }\n\n}\n\nclass User {\n  name: string = '';\n  email: string = '';\n  password: string = '';\n  role: string = '';\n  phone: string = '';\n  cpf: string = '';\n}\n","<div class=\"registration-form\">\r\n  <h2>Login</h2>\r\n  <form (ngSubmit)=\"onSubmit()\">\r\n    \r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"newUser.email\" name=\"email\" class=\"form-control\" required>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Senha:</label>\r\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"newUser.password\" name=\"password\" class=\"form-control\" required>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Cadastrar</button>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}