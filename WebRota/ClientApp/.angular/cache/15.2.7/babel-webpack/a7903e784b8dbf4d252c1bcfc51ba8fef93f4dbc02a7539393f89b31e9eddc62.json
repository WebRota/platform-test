{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.message = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n  }\n\n  login() {\n    // Realize a lógica de login e atualize a variável \"message\" com a mensagem apropriada\n    const loginResult = this.authService.login(this.email, this.password);\n    if (loginResult) {\n      this.message = 'Login bem-sucedido'; // Exemplo de mensagem de sucesso\n    } else {\n      this.message = 'Login falhou'; // Exemplo de mensagem de falha\n    }\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Senha\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,YAAO,GAAW,EAAE,CAAC,CAAC;EAE0B;;EAEhDC,KAAK;IACH;IACA,MAAMC,WAAW,GAAG,IAAI,CAACF,WAAW,CAACC,KAAK,CAAC,IAAI,CAACE,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;IAErE,IAAIF,WAAW,EAAE;MACf,IAAI,CAACG,OAAO,GAAG,oBAAoB,CAAC,CAAC;KACtC,MAAM;MACL,IAAI,CAACA,OAAO,GAAG,cAAc,CAAC,CAAC;;EAEnC;;;AAhBWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP3BC,+BAA2B;MAArBA;QAAA,OAAYC,WAAO;MAAA,EAAC;MACxBD,gCAA2D;MAAxCA;QAAA;MAAA,EAAmB;MAAtCA,iBAA2D;MAC3DA,gCAAkE;MAA3CA;QAAA;MAAA,EAAsB;MAA7CA,iBAAkE;MAClEA,iCAAsB;MAAAA,qBAAK;MAAAA,iBAAS;MAGtCA,yBAAG;MAAAA,YAAa;MAAAA,iBAAI;;;MALCA,eAAmB;MAAnBA,mCAAmB;MACfA,eAAsB;MAAtBA,sCAAsB;MAI5CA,eAAa;MAAbA,iCAAa","names":["LoginComponent","constructor","authService","login","loginResult","email","password","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  email!: string;\n  password!: string;\n  message: string = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n\n  constructor(private authService: AuthService) { }\n\n  login() {\n    // Realize a lógica de login e atualize a variável \"message\" com a mensagem apropriada\n    const loginResult = this.authService.login(this.email, this.password);\n\n    if (loginResult) {\n      this.message = 'Login bem-sucedido'; // Exemplo de mensagem de sucesso\n    } else {\n      this.message = 'Login falhou'; // Exemplo de mensagem de falha\n    }\n  }\n}\n","<form (ngSubmit)=\"login()\">\r\n  <input type=\"text\" [(ngModel)]=\"email\" placeholder=\"Email\">\r\n  <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Senha\">\r\n  <button type=\"submit\">Login</button>\r\n</form>\r\n\r\n<p>{{ message }}</p> <!-- Exibir a mensagem aqui -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}