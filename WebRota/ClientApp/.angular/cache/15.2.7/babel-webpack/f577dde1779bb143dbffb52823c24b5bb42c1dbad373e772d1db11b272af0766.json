{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.email = '';\n    this.password = '';\n  }\n  onSubmit() {\n    this.authService.login(this.email, this.password).subscribe(response => {\n      const token = response.token;\n      // Armazene o token em localStorage ou em um serviço de gerenciamento de estado (como o NgRx) para uso posterior\n    }, error => {\n      console.error('Falha no login:', error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,UAAK,GAAG,EAAE;IACV,aAAQ,GAAG,EAAE;EAEmC;EAEhDC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CACxDC,QAAQ,IAAI;MACX,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B;IACF,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC,CAAC,CACF;EACH;CACD;AAjBYV,cAAc,eAL1BD,SAAS,CAAC;EACTa,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWd,cAAc,CAiB1B;SAjBYA,cAAc","names":["Component","LoginComponent","constructor","authService","onSubmit","login","email","password","subscribe","response","token","error","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email = '';\n  password = '';\n\n  constructor(private authService: AuthService) { }\n\n  onSubmit() {\n    this.authService.login(this.email, this.password).subscribe(\n      (response) => {\n        const token = response.token;\n        // Armazene o token em localStorage ou em um serviço de gerenciamento de estado (como o NgRx) para uso posterior\n      },\n      (error) => {\n        console.error('Falha no login:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}