{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@agm/core\";\nexport class MapComponent {\n  constructor(http) {\n    this.http = http;\n    this.markers = [];\n  }\n  ngOnInit() {\n    var map = L.map('map').setView([0, 0], 2);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    this.http.get('assets/positions.json').subscribe(data => {\n      var positions = data.data;\n      var polygon = L.polyline([], {\n        color: 'blue'\n      }).addTo(map);\n      positions.forEach(position => {\n        var lat = parseFloat(position.latitude);\n        var lon = parseFloat(position.longitude);\n        var marker = L.marker([lat, lon]).addTo(map);\n        // Adicione cada marcador ao array 'markers'\n        this.markers.push(marker); // Usamos 'this.markers' para se referir à variável do componente\n        polygon.addLatLng([lat, lon]);\n      });\n      map.fitBounds(L.featureGroup(this.markers).getBounds());\n    });\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 2,\n  vars: 5,\n  consts: [[3, \"latitude\", \"longitude\", \"zoom\"], [3, \"latitude\", \"longitude\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"agm-map\", 0);\n      i0.ɵɵelement(1, \"agm-marker\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"latitude\", -18.924067)(\"longitude\", -48.282142)(\"zoom\", 12);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"latitude\", -18.924067)(\"longitude\", -48.282142);\n    }\n  },\n  dependencies: [i2.AgmMap, i2.AgmMarker],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;;AAS5B,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAe,EAAE;EAEgB;EAExCC,QAAQ;IACN,IAAIC,GAAG,GAAGL,CAAC,CAACK,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAEzCN,CAAC,CAACO,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;KACd,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;IAEb,IAAI,CAACF,IAAI,CAACO,GAAG,CAAC,uBAAuB,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC7D,IAAIC,SAAS,GAAGD,IAAI,CAACA,IAAI;MAEzB,IAAIE,OAAO,GAAGd,CAAC,CAACe,QAAQ,CAAC,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE,CAAC,CAACP,KAAK,CAACJ,GAAG,CAAC;MAE1DQ,SAAS,CAACI,OAAO,CAAGC,QAAkD,IAAI;QACxE,IAAIC,GAAG,GAAGC,UAAU,CAACF,QAAQ,CAACG,QAAQ,CAAC;QACvC,IAAIC,GAAG,GAAGF,UAAU,CAACF,QAAQ,CAACK,SAAS,CAAC;QACxC,IAAIC,MAAM,GAAGxB,CAAC,CAACwB,MAAM,CAAC,CAACL,GAAG,EAAEG,GAAG,CAAC,CAAC,CAACb,KAAK,CAACJ,GAAG,CAAC;QAC5C;QACA,IAAI,CAACoB,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC;QAC3BV,OAAO,CAACa,SAAS,CAAC,CAACR,GAAG,EAAEG,GAAG,CAAC,CAAC;MAC/B,CAAC,CAAC;MAEFjB,GAAG,CAACuB,SAAS,CAAC5B,CAAC,CAAC6B,YAAY,CAAC,IAAI,CAACJ,OAAO,CAAC,CAACK,SAAS,EAAE,CAAC;IACzD,CAAC,CAAC;EACJ;;AA5BW7B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,kCAA0E;MACzEA,gCAA8E;MAC/EA,iBAAU;;;MAFDA,qCAAyB;MACrBA,eAAyB;MAAzBA,qCAAyB","names":["L","MapComponent","constructor","http","ngOnInit","map","setView","tileLayer","attribution","addTo","get","subscribe","data","positions","polygon","polyline","color","forEach","position","lat","parseFloat","latitude","lon","longitude","marker","markers","push","addLatLng","fitBounds","featureGroup","getBounds","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\map\\map.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\map\\map.component.html"],"sourcesContent":["import * as L from 'leaflet';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n  markers: L.Marker[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    var map = L.map('map').setView([0, 0], 2);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(map);\r\n\r\n    this.http.get('assets/positions.json').subscribe((data: any) => {\r\n      var positions = data.data;\r\n\r\n      var polygon = L.polyline([], { color: 'blue' }).addTo(map);\r\n\r\n      positions.forEach( (position: { latitude: string; longitude: string; }) => {\r\n        var lat = parseFloat(position.latitude);\r\n        var lon = parseFloat(position.longitude);\r\n        var marker = L.marker([lat, lon]).addTo(map);\r\n        // Adicione cada marcador ao array 'markers'\r\n        this.markers.push(marker); // Usamos 'this.markers' para se referir à variável do componente\r\n        polygon.addLatLng([lat, lon]);\r\n      });\r\n\r\n      map.fitBounds(L.featureGroup(this.markers).getBounds());\r\n    });\r\n  }\r\n}\r\n","\r\n<agm-map [latitude]=\"-18.92406700\" [longitude]=\"-48.28214200\" [zoom]=\"12\">\r\n\t<agm-marker [latitude]=\"-18.92406700\" [longitude]=\"-48.28214200\"></agm-marker>\r\n</agm-map>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}