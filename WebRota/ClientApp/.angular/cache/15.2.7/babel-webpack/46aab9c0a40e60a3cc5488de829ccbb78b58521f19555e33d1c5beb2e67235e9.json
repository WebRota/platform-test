{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.email = '';\n    this.password = '';\n    this.message = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n  }\n\n  login() {\n    this.authService.login(this.email, this.password).subscribe(response => {\n      if (response.token) {\n        this.message = 'Login bem-sucedido';\n      } else {\n        this.message = 'Login falhou';\n      }\n    }, error => {\n      console.error('Erro na solicitação de login:', error);\n      this.message = 'Erro na solicitação de login';\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Senha\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.newUser.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.newUser.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.message);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJ/B,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,YAAO,GAAW,EAAE,CAAC,CAAC;EAE0B;;EAEhDC,KAAK;IACH,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CACxDC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,KAAK,EAAE;QAClB,IAAI,CAACC,OAAO,GAAG,oBAAoB;OACpC,MAAM;QACL,IAAI,CAACA,OAAO,GAAG,cAAc;;IAEjC,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,IAAI,CAACD,OAAO,GAAG,8BAA8B;IAC/C,CAAC,CACF;EACH;;AArBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,+BAA2B;MAArBA;QAAA,OAAYC,WAAO;MAAA,EAAC;MACxBD,gCAA2D;MAAxCA;QAAA;MAAA,EAAmB;MAAtCA,iBAA2D;MAC3DA,gCAAkE;MAA3CA;QAAA;MAAA,EAAsB;MAA7CA,iBAAkE;MAClEA,iCAAsB;MAAAA,qBAAK;MAAAA,iBAAS;MAItCA,yBAAG;MAAAA,YAAa;MAAAA,iBAAI;MACpBA,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,iCAAsG;MAAvEA;QAAA;MAAA,EAA2B;MAA1DA,iBAAsG;MAGxGA,+BAAwB;MACAA,uBAAM;MAAAA,iBAAQ;MACpCA,iCAAkH;MAA7EA;QAAA;MAAA,EAA8B;MAAnEA,iBAAkH;;;MAd/FA,eAAmB;MAAnBA,mCAAmB;MACfA,eAAsB;MAAtBA,sCAAsB;MAK5CA,eAAa;MAAbA,iCAAa;MAGiBA,eAA2B;MAA3BA,2CAA2B;MAKrBA,eAA8B;MAA9BA,8CAA8B","names":["LoginComponent","constructor","authService","login","email","password","subscribe","response","token","message","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\willi\\Documents\\GitHub\\platform-test\\WebRota\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  message: string = ''; // Variável para armazenar uma mensagem a ser exibida no HTML\n\n  constructor(private authService: AuthService) { }\n\n  login() {\n    this.authService.login(this.email, this.password).subscribe(\n      (response: any) => { // Adicione tipos às variáveis response e error\n        if (response.token) {\n          this.message = 'Login bem-sucedido';\n        } else {\n          this.message = 'Login falhou';\n        }\n      },\n      (error: any) => { // Adicione tipos às variáveis response e error\n        console.error('Erro na solicitação de login:', error);\n        this.message = 'Erro na solicitação de login';\n      }\n    );\n  }\n\n}\n","<form (ngSubmit)=\"login()\">\r\n  <input type=\"text\" [(ngModel)]=\"email\" placeholder=\"Email\">\r\n  <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Senha\">\r\n  <button type=\"submit\">Login</button>\r\n</form>\r\n\r\n\r\n<p>{{ message }}</p> <!-- Exibir a mensagem aqui -->\r\n<div class=\"form-group\">\r\n  <label for=\"email\">Email:</label>\r\n  <input type=\"email\" id=\"email\" [(ngModel)]=\"newUser.email\" name=\"email\" class=\"form-control\" required>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n  <label for=\"password\">Senha:</label>\r\n  <input type=\"password\" id=\"password\" [(ngModel)]=\"newUser.password\" name=\"password\" class=\"form-control\" required>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}